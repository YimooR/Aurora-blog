{"title":"Mybatis学习笔记","uid":"5a3620dc0ed1ed2321d682ea496911bb","slug":"Java/Mybatis","date":"2022-11-17T09:00:00.000Z","updated":"2023-02-02T15:45:21.644Z","comments":true,"path":"api/articles/Java/Mybatis.json","keywords":null,"cover":"https://yimoorua-img.oss-cn-chengdu.aliyuncs.com/images/AgAAC6u-TVO-6GCp-41Pb5VAdprXFwlM.png","content":"<h1 id=\"尚硅谷版Mybatis学习笔记\"><a href=\"#尚硅谷版Mybatis学习笔记\" class=\"headerlink\" title=\"尚硅谷版Mybatis学习笔记\"></a>尚硅谷版Mybatis学习笔记</h1><h2 id=\"一、Mybatis介绍\"><a href=\"#一、Mybatis介绍\" class=\"headerlink\" title=\"一、Mybatis介绍\"></a>一、Mybatis介绍</h2><h3 id=\"什么是Mybatis\"><a href=\"#什么是Mybatis\" class=\"headerlink\" title=\"什么是Mybatis\"></a>什么是Mybatis</h3><p>答：1、Mybatis是一个半ORM（对象关系映射）框架，它内部封装了JDBC，开发时只需要关注SQL语句本身，不需要花费精力去处理加载驱动、创建连接、创建statement等繁杂的过程。程序员直接编写原生态sql，可以严格控制sql执行性能，灵活度高。</p>\n<p>2、MyBatis可以使用XML或注解来配置和映射原生信息，将POJO映射成数据库中的记录，避免了几乎所有的JDBC代码和手动设置参数以及获取结果集。</p>\n<p>3、通过xml文件或注解的方式将要执行的各种statement配置起来，并通过java对象和statement中sql的动态参数进行映射生成最终执行的sql语句，最后由mybatis框架执行sql并将结果映射为java对象并返回。（从执行sql到返回result的过程）。</p>\n<h3 id=\"Mybatis与Hibernate的区别\"><a href=\"#Mybatis与Hibernate的区别\" class=\"headerlink\" title=\"Mybatis与Hibernate的区别\"></a>Mybatis与Hibernate的区别</h3><p>答：1、Mybatis和hibernate不同，它不完全是一个ORM框架，因为MyBatis需要程序员自己编写Sql语句。</p>\n<p>2、Mybatis直接编写原生态sql，可以严格控制sql执行性能，灵活度高，非常适合对关系数据模型要求不高的软件开发，因为这类软件需求变化频繁，一但需求变化要求迅速输出成果。但是灵活的前提是mybatis无法做到数据库无关性，如果需要实现支持多种数据库的软件，则需要自定义多套sql映射文件，工作量大。</p>\n<p>3、Hibernate对象/关系映射能力强，数据库无关性好，对于关系模型要求高的软件，如果用hibernate开发可以节省很多代码，提高效率。</p>\n<h3 id=\"为什么使用Mybatis\"><a href=\"#为什么使用Mybatis\" class=\"headerlink\" title=\"为什么使用Mybatis\"></a>为什么使用Mybatis</h3><p>答：1、基于SQL语句编程，相当灵活，不会对应用程序或者数据库的现有设计造成任何影响，SQL写在XML里，解除sql与程序代码的耦合，便于统一管理；提供XML标签，支持编写动态SQL语句，并可重用。</p>\n<p>2、与JDBC相比，减少了50%以上的代码量，消除了JDBC大量冗余的代码，不需要手动开关连接；</p>\n<p>3、很好的与各种数据库兼容（因为 MyBatis 使用 JDBC 来连接数据库，所以只要JDBC支持的数据库MyBatis都支持）。</p>\n<p>4、能够与Spring很好的集成；</p>\n<p>5、提供映射标签，支持对象与数据库的ORM字段关系映射；提供对象关系映射标签，支持对象关系组件维护。</p>\n<h3 id=\"Mybatis下载地址\"><a href=\"#Mybatis下载地址\" class=\"headerlink\" title=\"Mybatis下载地址\"></a>Mybatis下载地址</h3><p>URL:Https://github.com/mybatis/mybatis-3</p>\n<h2 id=\"二、Mybatis测试使用\"><a href=\"#二、Mybatis测试使用\" class=\"headerlink\" title=\"二、Mybatis测试使用\"></a>二、Mybatis测试使用</h2><h3 id=\"按官方文档简单使用Mybatis流程\"><a href=\"#按官方文档简单使用Mybatis流程\" class=\"headerlink\" title=\"按官方文档简单使用Mybatis流程\"></a>按官方文档简单使用Mybatis流程</h3><p>1.导入jar包：mybatis-3.4.1.jar &amp; mysql-connector-java.jar &amp; log4j.jar</p>\n<p>2.创建与数据表字段名对应的实体类</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Goods</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> goodsId<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> title<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> subTitle<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Float</span> originalCost<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Float</span> currentPrice<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Float</span> discount<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> isFreeDelivery<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> categoryId<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>3.创建全局配置文件Mybatis-Config.xml</p>\n<pre class=\"line-numbers language-xml-dtd\" data-language=\"xml-dtd\"><code class=\"language-xml-dtd\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;\n&lt;!DOCTYPE configuration\n        PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Config 3.0&#x2F;&#x2F;EN&quot;\n        &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-config.dtd&quot;&gt;\n&lt;configuration&gt;\n    &lt;environments default&#x3D;&quot;development&quot;&gt;\n        &lt;environment id&#x3D;&quot;development&quot;&gt;\n            &lt;transactionManager type&#x3D;&quot;JDBC&quot;&#x2F;&gt;\n            &lt;dataSource type&#x3D;&quot;POOLED&quot;&gt;\n                &lt;property name&#x3D;&quot;driver&quot; value&#x3D;&quot;com.mysql.jdbc.Driver&quot;&#x2F;&gt;\n                &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;babytun?useUnicode&#x3D;true&amp;characterEncoding&#x3D;utf-8&quot;&#x2F;&gt;\n                &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;root&quot;&#x2F;&gt;\n                &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;1234567890&quot;&#x2F;&gt;\n            &lt;&#x2F;dataSource&gt;\n        &lt;&#x2F;environment&gt;\n    &lt;&#x2F;environments&gt;\n    &lt;mappers&gt;\n        &lt;!-- 将我们写好的sql映射文件（GoodsMapper.xml）一定要注册到全局配置文件（Mybatis-Config.xml）中 --&gt;\n        &lt;mapper resource&#x3D;&quot;Mapper&#x2F;GoodsMapper.xml&quot;&#x2F;&gt;\n    &lt;&#x2F;mappers&gt;\n&lt;&#x2F;configuration&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>4.创建Mapper映射文件</p>\n<pre class=\"line-numbers language-xml-dtd\" data-language=\"xml-dtd\"><code class=\"language-xml-dtd\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;\n&lt;!DOCTYPE mapper\n        PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Mapper 3.0&#x2F;&#x2F;EN&quot;\n        &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-mapper.dtd&quot;&gt;\n&lt;mapper namespace&#x3D;&quot;com.imooc.POJO.GoodsMapper&quot;&gt;\n    &lt;!--\n     接口式编程：\n     namespace:名称空间;指定为接口的全类名\n     id：唯一标识\n     resultType：返回值类型\n     #&#123;id&#125;：从传递过来的参数中取出id值\n--&gt;\n    &lt;select id&#x3D;&quot;selectGoods&quot; resultType&#x3D;&quot;com.imooc.POJO.Goods&quot;&gt;\n        select goods_id goodsId,title title,sub_title subTitle,original_cost originalCost,current_price currentPrice,discount discount,is_free_delivery isFreeDelivery,category_id categoryId\n        from t_goods\n        where goods_id &#x3D; #&#123;id&#125;\n    &lt;&#x2F;select&gt;\n&lt;&#x2F;mapper&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>4.创建测试类（1.Mapper命名空间+id值；2.接口式编程（推荐））</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 1、接口式编程\n *     原生：       Dao       ====>  DaoImpl\n *     mybatis：   Mapper ====>  xxMapper.xml\n *\n * 2、SqlSession代表和数据库的一次会话；用完必须关闭；\n * 3、SqlSession和connection一样她都是非线程安全。每次使用都应该去获取新的对象。\n * 4、mapper接口没有实现类，但是mybatis会为这个接口生成一个代理对象。\n *        （将接口和xml进行绑定）\n *        EmployeeMapper empMapper = sqlSession.getMapper(EmployeeMapper.class);\n * 5、两个重要的配置文件：\n *        mybatis的全局配置文件：包含数据库连接池信息，事务管理器信息等...系统运行环境信息\n *        sql映射文件：保存了每一个sql语句的映射信息：\n *                 将sql抽取出来。\n *\n *\n * @author Yimoo\n *\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> mybatisTest <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SqlSessionFactory</span> <span class=\"token function\">getSqlSessionFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">String</span> resource<span class=\"token operator\">=</span><span class=\"token string\">\"Mybatis-Config.xml\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">InputStream</span> inputStream<span class=\"token operator\">=</span><span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>inputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * 1、根据xml配置文件（全局配置文件）创建一个SqlSessionFactory对象 有数据源一些运行环境信息\n     * 2、sql映射文件；配置了每一个sql，以及sql的封装规则等。\n     * 3、将sql映射文件注册在全局配置文件中\n     * 4、写代码：\n     *        1）、根据全局配置文件得到SqlSessionFactory；\n     *        2）、使用sqlSession工厂，获取到sqlSession对象使用他来执行增删改查\n     *           一个sqlSession就是代表和数据库的一次会话，用完关闭\n     *        3）、使用sql的唯一标志来告诉MyBatis执行哪个sql。sql都是保存在sql映射文件中的。\n     *\n     * @throws IOException\n     *\n     */</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">demo1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 2、获取sqlSession实例，能直接执行已经映射的sql语句</span>\n        <span class=\"token comment\">// sql的唯一标识：statement Unique identifier matching the statement to use.</span>\n        <span class=\"token comment\">// 执行sql要用的参数：parameter A parameter object to pass to the statement.</span>\n        <span class=\"token class-name\">SqlSessionFactory</span> sqlSessionFactory<span class=\"token operator\">=</span><span class=\"token function\">getSqlSessionFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession<span class=\"token operator\">=</span>sqlSessionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span>\n             <span class=\"token class-name\">Goods</span> goods<span class=\"token operator\">=</span>sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">selectOne</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.imooc.POJO.GoodsMapper.selectGoods\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n             <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>goods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span>\n             sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  \n  <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">demo2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">SqlSessionFactory</span> sqlSessionFactory<span class=\"token operator\">=</span><span class=\"token function\">getSqlSessionFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession<span class=\"token operator\">=</span>sqlSessionFactory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 3、获取接口的实现类对象</span>\n            <span class=\"token comment\">//会为接口自动的创建一个代理对象，代理对象去执行增删改查方法</span>\n            <span class=\"token class-name\">GoodsMapper</span> goodsMapper<span class=\"token operator\">=</span>sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GoodsMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Goods</span> goods<span class=\"token operator\">=</span>goodsMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectGoods</span><span class=\"token punctuation\">(</span><span class=\"token number\">900</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>goods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token comment\">//输出：Goods&#123;goodsId=900, title='三星 2016版 Galaxy On7（G6100）全网通4G 3GB+32G 钛岩黑 手机',          subTitle='美囤自营，品质保证！5.5英寸屏，3GB+32GB，双账户应用工作生活两不误！', originalCost=1799.0, currentPrice=1299.0, discount=0.722068, isFreeDelivery=1, categoryId=30&#125;</span>\n            <span class=\"token comment\">//自动创建代理</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>goodsMapper<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//输出：class com.sun.proxy.$Proxy6</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span>\n            sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"如何让实体类的属性名与数据库字段名一一对应\"><a href=\"#如何让实体类的属性名与数据库字段名一一对应\" class=\"headerlink\" title=\"如何让实体类的属性名与数据库字段名一一对应\"></a>如何让实体类的属性名与数据库字段名一一对应</h3><p>1.在mapper文件中sql语句处为字段名设置别名，别名为实体类的属性名</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"selectGoods\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"com.imooc.POJO.Goods\"</span><span class=\"token operator\">></span>\n    select goods_id goodsId<span class=\"token punctuation\">,</span>title title<span class=\"token punctuation\">,</span>sub_title subTitle<span class=\"token punctuation\">,</span>original_cost originalCost<span class=\"token punctuation\">,</span>current_price currentPrice<span class=\"token punctuation\">,</span>discount discount<span class=\"token punctuation\">,</span>is_free_delivery isFreeDelivery<span class=\"token punctuation\">,</span>category_id categoryId\n    from t_goods\n    where goods_id <span class=\"token operator\">=</span> #<span class=\"token punctuation\">&#123;</span>id<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>2.在全局配置文件中配置mapUndertocamleCase=true，前提是必须属性名与字段名为驼峰命名关系</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>settings</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>setting</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mapUnderScoretoCamleCase<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>settings</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"三、全局配置文件的标签\"><a href=\"#三、全局配置文件的标签\" class=\"headerlink\" title=\"三、全局配置文件的标签\"></a>三、全局配置文件的标签</h2><p>configuration <a href=\"/Users/yimoorua/Downloads/mybatis-3.5.9/mybatis-3.5.9.pdf\">mybatis-3.5.9.pdf官方文档</a> </p>\n<p>• properties<br>• settings<br>• typeAliases<br>• typeHandlers<br>• objectFactory（了解）<br>• plugins<br>• environments<br>      • environment<br>           • transactionManager<br>               • dataSource<br>               • databaseIdProvider<br>• mappers</p>\n<h3 id=\"properties属性（属性文件）\"><a href=\"#properties属性（属性文件）\" class=\"headerlink\" title=\"properties属性（属性文件）\"></a>properties属性（属性文件）</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--\n\t\t1、mybatis可以使用properties来引入外部properties配置文件的内容；\n\t\tresource：引入类路径下的资源\n\t\turl：引入网络路径或者磁盘路径下的资源\n\t  --></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span> <span class=\"token attr-name\">resource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dbconfig.properties<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>dbconfig.properties文件</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">jdbc.driver=com.mysql.jdbc.Driver\njdbc.url=jdbc:mysql://localhost:3306/babytun?useUnicode=true<span class=\"token entity named-entity\" title=\"&amp;\">&amp;amp;</span>characterEncoding=utf-8\njdbc.username=root\njdbc.password=1234567890\n\norcl.driver=oracle.jdbc.OracleDriver\norcl.url=jdbc:oracle:thin:@localhost:1521:orcl\norcl.username=scott\norcl.password=123456<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>修改environment标签下的properties的value值</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>driver<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$&#123;jdbc.driver&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$&#123;jdbc.url&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$&#123;jdbc.username&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>$&#123;jdbc.password&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"settings设置（自动开启驼峰命名规则）\"><a href=\"#settings设置（自动开启驼峰命名规则）\" class=\"headerlink\" title=\"settings设置（自动开启驼峰命名规则）\"></a>settings设置（自动开启驼峰命名规则）</h3><p>这是Mybatis中极为重要的调整设置，它们会改变Mybatis的运行时行为</p>\n<p>mapUnderscoreToCamelCase：是否开启自动驼峰命名规则映射，即从经典数据库列名A_COLUMN到经典Java属性名aColumn的类似映射</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>settings</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>setting</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mapUnderscoreToCamelCase<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>settings</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"typeAliases别名处理器（java类型起别名）\"><a href=\"#typeAliases别名处理器（java类型起别名）\" class=\"headerlink\" title=\"typeAliases别名处理器（java类型起别名）\"></a>typeAliases别名处理器（java类型起别名）</h3><p>类型别名是为Java类型设置一个短的名字，方便我们引用某个类</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>typeAliases</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>typeAlias</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.imooc.POJO.Goods<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alias</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>goods<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>typeAliases</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>类很多的情况下，可以批量设置这个包下的每一个类创建一个默认的别名，就是简单类名小写。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>typeAliases</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--        别名不区分大小写--></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>package</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.imooc.POJO<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>typeAliases</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>也可以使用注解@Alias注解为其指定一个别名（注意只有使用批量起别名时，才可以使用注解起别名）</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>typeAliases</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--        别名不区分大小写--></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>package</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.imooc.POJO<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>typeAliases</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Alias</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"goods\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Goods</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>MyBatis已经为许多常见的 Java 类型内建了相应的类型别名。它们都是大小写不敏感的，我们在起别名的时候千万不要占用已有的别名</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">别名</th>\n<th align=\"center\">映射的类型</th>\n<th align=\"center\">别名</th>\n<th align=\"center\">映射的类型</th>\n<th align=\"center\">别名</th>\n<th align=\"center\">映射的类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">_byte</td>\n<td align=\"center\">byte</td>\n<td align=\"center\">string</td>\n<td align=\"center\">String</td>\n<td align=\"center\">date</td>\n<td align=\"center\">Date</td>\n</tr>\n<tr>\n<td align=\"center\">_long</td>\n<td align=\"center\">long</td>\n<td align=\"center\">byte</td>\n<td align=\"center\">Byte</td>\n<td align=\"center\">decimal</td>\n<td align=\"center\">BigDecimal</td>\n</tr>\n<tr>\n<td align=\"center\">_short</td>\n<td align=\"center\">short</td>\n<td align=\"center\">long</td>\n<td align=\"center\">Long</td>\n<td align=\"center\">bigdecimal</td>\n<td align=\"center\">BigDecimal</td>\n</tr>\n<tr>\n<td align=\"center\">_int</td>\n<td align=\"center\">int</td>\n<td align=\"center\">short</td>\n<td align=\"center\">Short</td>\n<td align=\"center\">object</td>\n<td align=\"center\">Object</td>\n</tr>\n<tr>\n<td align=\"center\">_integer</td>\n<td align=\"center\">int</td>\n<td align=\"center\">int</td>\n<td align=\"center\">Integer</td>\n<td align=\"center\">map</td>\n<td align=\"center\">Map</td>\n</tr>\n<tr>\n<td align=\"center\">_double</td>\n<td align=\"center\">double</td>\n<td align=\"center\">double</td>\n<td align=\"center\">Double</td>\n<td align=\"center\">hashmap</td>\n<td align=\"center\">HashMap</td>\n</tr>\n<tr>\n<td align=\"center\">_float</td>\n<td align=\"center\">float</td>\n<td align=\"center\">float</td>\n<td align=\"center\">Float</td>\n<td align=\"center\">list</td>\n<td align=\"center\">List</td>\n</tr>\n<tr>\n<td align=\"center\">_boolean</td>\n<td align=\"center\">boolean</td>\n<td align=\"center\">boolean</td>\n<td align=\"center\">Boolean</td>\n<td align=\"center\">arraylist</td>\n<td align=\"center\">ArrayList</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">collection</td>\n<td align=\"center\">Collection</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">iterator</td>\n<td align=\"center\">Iterator</td>\n</tr>\n</tbody></table>\n<h3 id=\"typeHandlers类型处理器\"><a href=\"#typeHandlers类型处理器\" class=\"headerlink\" title=\"typeHandlers类型处理器\"></a>typeHandlers类型处理器</h3><p>无论是 MyBatis 在预处理语句（PreparedStatement）中设置一个参数时，还是从结果集中取出一个值时， 都会用类型处理器将获取的值以合适的方式转换成 Java 类型。</p>\n<table>\n<thead>\n<tr>\n<th>类型处理器</th>\n<th>Java 类型</th>\n<th>JDBC 类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>BooleanTypeHandler</td>\n<td>java.lang.Boolean, boolean</td>\n<td>数据库兼容的 BOOLEAN</td>\n</tr>\n<tr>\n<td>ByteTypeHandler</td>\n<td>java.lang.Byte, byte</td>\n<td>数据库兼容的 NUMERIC 或 BYTE</td>\n</tr>\n<tr>\n<td>ShortTypeHandler</td>\n<td>java.lang.Short, short</td>\n<td>数据库兼容的 NUMERIC 或 SHORT INTEGER</td>\n</tr>\n<tr>\n<td>IntegerTypeHandler</td>\n<td>java.lang.Integer, int</td>\n<td>数据库兼容的 NUMERIC 或 INTEGER</td>\n</tr>\n<tr>\n<td>LongTypeHandler</td>\n<td>java.lang.Long, long</td>\n<td>数据库兼容的 NUMERIC 或 LONG INTEGER</td>\n</tr>\n<tr>\n<td>FloatTypeHandler</td>\n<td>java.lang.Float, float</td>\n<td>数据库兼容的 NUMERIC 或 FLOAT</td>\n</tr>\n<tr>\n<td>DoubleTypeHandler</td>\n<td>java.lang.Double, double</td>\n<td>数据库兼容的 NUMERIC 或 DOUBLE</td>\n</tr>\n<tr>\n<td>BigDecimalTypeHandler</td>\n<td>java.math.BigDecimal</td>\n<td>数据库兼容的 NUMERIC 或 DECIMAL</td>\n</tr>\n<tr>\n<td>StringTypeHandler</td>\n<td>java.lang.String</td>\n<td>CHAR, VARCHAR</td>\n</tr>\n</tbody></table>\n<p><strong>日期类型的处理</strong><br>1、日期和时间的处理，JDK1.8以前一直是个头疼的问题。我们通常使用JSR310规范领导者Stephen Colebourne<br>创建的Joda-Time来操作。1.8已经实现全部的JSR310规范了。<br>2、日期时间处理上，我们可以使用MyBatis基于JSR310（Date and Time API）编写的各种日期时间类型处理器。<br>3、MyBatis3.4以前的版本需要我们手动注册这些处理器，以后的版本都是自动注册的。</p>\n<p><strong>自定义类型处理器</strong><br>我们可以重写类型处理器或创建自己的类型处理<br>器来处理不支持的或非标准的类型。<br>步骤：<br>1）、实现org.apache.ibatis.type.TypeHandler接口或者继承org.apache.ibatis.type.BaseTypeHandler<br>2）、指定其映射某个JDBC类型（可选操作）<br>3）、在mybatis全局配置文件中注册</p>\n<h3 id=\"plugins插件（先学习Mybatis工作原理才能理解）\"><a href=\"#plugins插件（先学习Mybatis工作原理才能理解）\" class=\"headerlink\" title=\"plugins插件（先学习Mybatis工作原理才能理解）\"></a>plugins插件（先学习Mybatis工作原理才能理解）</h3><p>插件是MyBatis提供的一个非常强大的机制，我们可以通过插件来修改MyBatis的一些核心行为。插件通过动态代理机制，可以介入四大对象的任何一个方法的执行。后面会有专门的章节我们来介绍mybatis运行原理以及插件</p>\n<p><strong>四大对象</strong></p>\n<p>• <strong>Executor</strong> (update, query, flushStatements, commit, rollback, getTransaction, close, isClosed)</p>\n<p>• <strong>ParameterHandler</strong> (getParameterObject, setParameters) </p>\n<p>• <strong>ResultSetHandler</strong> (handleResultSets, handleOutputParameters) </p>\n<p>• <strong>StatementHandler</strong> (prepare, parameterize, batch, update, query) </p>\n<h3 id=\"environments环境\"><a href=\"#environments环境\" class=\"headerlink\" title=\"environments环境\"></a>environments环境</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>environments</span> <span class=\"token attr-name\">default</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>environment</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>transactionManager</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dataSource</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>driver<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dataSource</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>environment</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>environments</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>1、<code>&lt;environments default=&quot;&quot;/&gt;</code></p>\n<p>• MyBatis可以配置多种环境，比如开发、测试和生产环境需要有不同的配置。 </p>\n<p>• 每种环境使用一个environment标签进行配置并指定唯一标识符</p>\n<p>• 可以通过environments标签中的default属性指定一个环境的标识符来快速的切换环境</p>\n<p>2、<code>&lt;environment id=&quot;”&gt;&lt;transactionManager type=&quot;&quot;/&gt;&lt;dataSource type=&quot;&quot;&gt;&lt;/dataSource&gt;&lt;/environment&gt;</code></p>\n<p>• id：指定当前环境的唯一标识</p>\n<p>• transactionManager、和dataSource都必须有</p>\n<p>3、<code>&lt;transactionManager type=&quot;JDBC|MANAGED|自定义&quot;&gt;</code></p>\n<p>• JDBC：使用了 JDBC 的提交和回滚设置，依赖于从数据源得到的连接来管理事务范围。JdbcTransactionFactory</p>\n<p>• MANAGED：不提交或回滚一个连接、让容器来管理事务的整个生命周期（比如 JEE 应用服务器的上下文）。 ManagedTransactionFactory</p>\n<p>• 自定义：实现TransactionFactory接口，type=全类名/别名</p>\n<p>4、<code>&lt;dataSource type=&quot;UPOOLED|POOLED|JNDI|自定义&quot;&gt;...&lt;/dataSource&gt;</code></p>\n<p>• UNPOOLED：不使用连接池，UnpooledDataSourceFactory</p>\n<p>• POOLED：使用连接池， PooledDataSourceFactory</p>\n<p>• JNDI： 在EJB 或应用服务器这类容器中查找指定的数据源</p>\n<p>• 自定义：实现DataSourceFactory接口，定义数据源的获取方式。</p>\n<p>• 实际开发中我们使用Spring管理数据源，并进行事务控制的配置来覆盖上述配置</p>\n<h3 id=\"databaseIdProvider环境（数据库的移植性）\"><a href=\"#databaseIdProvider环境（数据库的移植性）\" class=\"headerlink\" title=\"databaseIdProvider环境（数据库的移植性）\"></a>databaseIdProvider环境（数据库的移植性）</h3><p>MyBatis 可以根据不同的数据库厂商执行不同的语句。 </p>\n<p>• Type： DB_VENDOR</p>\n<p>– 使用MyBatis提供的VendorDatabaseIdProvider解析数据库厂商标识。也可以实现DatabaseIdProvider接口来自定义。 </p>\n<p>• Property-name：数据库厂商标识</p>\n<p>• Property-value：为标识起一个别名，方便SQL语句使用databaseId属性引用</p>\n<p><strong>DB_VENDOR</strong></p>\n<p>– 会通过 <strong>DatabaseMetaData#getDatabaseProductName()</strong> 返回的字符串进行设置。由于通常情况下这个字符串都非常长而且相同产品的不同版本会返回不同的值，所以最好通过设置属性别名来使其变短 </p>\n<p>• MyBatis匹配规则如下：</p>\n<p>1、如果没有配置databaseIdProvider标签，那么databaseId=null</p>\n<p>2、如果配置了databaseIdProvider标签，使用标签配置的name去匹配数据库信息，匹配上设置databaseId=配置指定的值，否则依旧为null</p>\n<p>3、如果databaseId不为null，他只会找到配置databaseId的sql语句</p>\n<p>4、MyBatis 会加载不带 databaseId 属性和带有匹配当前数据库databaseId 属性的所有语句。如果同时找到带有 databaseId 和不带databaseId 的相同语句，则后者会被舍弃。</p>\n<h3 id=\"mapper映射（将sql映射注册到全局配置中）\"><a href=\"#mapper映射（将sql映射注册到全局配置中）\" class=\"headerlink\" title=\"mapper映射（将sql映射注册到全局配置中）\"></a>mapper映射（将sql映射注册到全局配置中）</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mappers</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!--resource：引用类路径下的sql映射文件--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">resource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Mapper/GoodsMapper.xml<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token comment\">&lt;!--url：引用网络路径或者磁盘路径下的sql映射文件--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file://D://GoodsMapper.xml<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token comment\">&lt;!--class：引用（注册）接口\n        1、有sql映射文件，映射文件名必须和接口同名，并且放在与接口同一目录下\n        2、没有sql映射文件，所有sql都是利用注解写在接口上\n        推荐：比较重要的DAO接口我们写sql映射文件\n             不重要，简答的DAO接口为了快速开发可以使用注解--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.imooc.DAO.GoodsMapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token comment\">&lt;!--package：批量注解，自动扫描包下映射文件--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>package</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.imooc.DAO<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mappers</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"四、Mybatis映射文件\"><a href=\"#四、Mybatis映射文件\" class=\"headerlink\" title=\"四、Mybatis映射文件\"></a>四、Mybatis映射文件</h2><p>映射文件指导着MyBatis如何进行数据库增删改查，有着非常重要的意义；</p>\n<p>映射文件的元素，如下：</p>\n<p>•cache –命名空间的二级缓存配置<br>•cache-ref – 其他命名空间缓存配置的引用。<br>•resultMap – 自定义结果集映射<br>•parameterMap – 已废弃！老式风格的参数映射<br>•sql –抽取可重用语句块。<br>•insert – 映射插入语句<br>•update – 映射更新语句<br>•delete – 映射删除语句<br>•select – 映射查询语句</p>\n<h3 id=\"insert、update、delete元素\"><a href=\"#insert、update、delete元素\" class=\"headerlink\" title=\"insert、update、delete元素\"></a>insert、update、delete元素</h3><p>测试增删改</p>\n<p>1、parameterType：参数类型，可以省略</p>\n<p>2、mybatis允许增删改直接定义以下类型返回值</p>\n<p>Integer、long、Boolean、void</p>\n<p>3、需要手动提交commit</p>\n<p>手动提交：sqlSessionFactory,openSession();</p>\n<p>自动提交：sqlSessionFactory.openSession(true);</p>\n<h3 id=\"主键生成方式\"><a href=\"#主键生成方式\" class=\"headerlink\" title=\"主键生成方式\"></a>主键生成方式</h3><p>1、mysql支持自增主键，自增主键值的获取，mybatis是利用statement.getGenreatedKeys()；</p>\n<p><strong>useGeneratedKeys=”true”</strong>：使用自增主键获取主键值策略</p>\n<p>keyProperty：指定对应的主键属性（对应的JavaBean的属性名），也就是mybatis获取到主键值以后，将这个值封装给javaBean的对应的属性</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>insertGoods<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">useGeneratedKeys</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">keyProperty</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>goodsId<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">databaseId</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mysql<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    insert into t_goods(title,sub_title,original_cost,current_price,discount,is_free_delivery,category_id)\n    values (#&#123;title&#125;,#&#123;subTitle&#125;,#&#123;originalCost&#125;,#&#123;currentPrice&#125;,#&#123;discount&#125;,#&#123;isFreeDelivery&#125;,#&#123;categoryId&#125;)\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p> 2、oracle不支持自增主键，它使用的是序列来模拟自增，每次插入数据的主键是从序列中拿到的值。</p>\n<p>获取主键值可以使用 <strong>selectKey</strong> 子元素：selectKey 元素将会首先运行，id 会被设置，然后插入语句会被调用</p>\n<p>Order=”BEFORE”：当前sql在插入sql之前运行</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>insertEmployee<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">databaseId</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>oracle<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>selectKey</span> <span class=\"token attr-name\">keyProperty</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">order</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>BEFORE<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Integer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select EMPLOYEES_SEQ.nextval from dual\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>selectKey</span><span class=\"token punctuation\">></span></span>\n    insert into employee(EMPLOYEE_ID,LAST_NAME,EMAIL)\n    values (#&#123;id&#125;,#&#123;lastName&#125;,#&#123;email&#125;)\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>执行流程：</strong></p>\n<p>先运行selectKey查询id的sql，查出id值封装给javaBean的id属性</p>\n<p>在运行插入的sql；就可以取出id属性对应的值</p>\n<p>selectKey标签中各属性的作用：</p>\n<h3 id=\"参数处理\"><a href=\"#参数处理\" class=\"headerlink\" title=\"参数处理\"></a>参数处理</h3><p>1、单参数：没有限制，通过接口方法直接传参<br>2、多个参数：mybatis会做特殊处理，多个参数被封装成一个map<br>三种方法：<br>• 使用#{param1},#{param2}…</p>\n<p>• （命名参数）在接口方法参数前指定(@Param(“属性名”) Object 属性名,@Param(“属性名”) Object 属性名…)<br>多个参数会封装成map，key==》@param(“属性名”)，value ==》方法参数值</p>\n<p>• 如果多个参数正好是我们逻辑业务的数据模型，我们可以直接传入POJO<br>#{属性名}：取出传入的POJO的属性值</p>\n<p>• 如果多个参数不是业务模型中的数据，没有对应的POJO，不经常使用为了方便，也可以传入map<br>#{key}：取出map中对应的值<br>如果多个参数不是业务模型中的数据，但经常使用，推荐来编写一个TO（Transfer Object）数据传输</p>\n<p> Page{<br>Int index;<br>int size;<br>}</p>\n<p>========================思考================================<br>public Employee getEmp(@Param(“id”)Integer id,String lastName);<br>    取值：id==&gt;#{id/param1}   lastName==&gt;#{param2}</p>\n<p>public Employee getEmp(Integer id,@Param(“e”)Employee emp);<br>    取值：id==&gt;#{param1}    lastName===&gt;#{param2.lastName/e.lastName}</p>\n<p>##特别注意：如果是Collection（List、Set）类型或者是数组，<br>         也会特殊处理。也是把传入的list或者数组封装在map中。<br>            key：Collection（collection）,如果是List还可以使用这个key(list)<br>                数组(array)<br>public Employee getEmpById(List<Integer> ids);<br>    取值：取出第一个id的值：   #{list[0]}</p>\n<p>========================结合源码，mybatis怎么处理参数======================<br><strong>总结：参数多时会封装map，为了不混乱，我们可以使用@Param来指定封装时使用的key；<br>#{key}就可以取出map中的值；</strong></p>\n<p>(@Param(“id”)Integer id,@Param(“lastName”)String lastName);<br>ParamNameResolver解析参数封装map的；<br>//1、names：{0=id, 1=lastName}；构造器的时候就确定好了<br>      1.获取每个标了param注解的参数的@param的值：id，lastName，赋值给name;<br>      2.每次解析一个参数给map中保存信息：（key：参数索引，value：name的值）<br>                name的值：<br>                   标注了param注解：注解的值<br>                    没有标注：<br>                        1.全局配置：useActualParamName（jdk1.8）：name=参数名<br>                        2.name=map.size();相当于当前的元素的索引<br>                        {0=id,1=lastName,2=2}</p>\n<h3 id=\"与-的区别\"><a href=\"#与-的区别\" class=\"headerlink\" title=\"#{}与${}的区别\"></a>#{}与${}的区别</h3><p>相同点：<br>都可以获取map中的值或者pojo对象的属性的值</p>\n<p>不同点：<br>1.取值：#{}会用占位符预编译PreparedStatement到SQL中，${}会用字符串拼接SQL<br>2.安全性：#{}能预防SQL注入</p>\n<p>${}的用处：原生jdbc不支持占位符的地方我们就可以使用${}进行取值<br>比如分表、排序…：按照年份分表拆分<br>             select * from ${year}_salary where xxx;<br>             select *  from tbl_employee order by ${f_name} ${order}</p>\n<p><strong>#{}其他用法：</strong><br>   规定一些参数的规则：<br>   javaType、==jdbctype==、mode（存储过程）、numericScale、resultType、typeHandler、jdbcTypeName、expression（未来准备支持的功能）</p>\n<p>   jdbcType通常需要在某种特定的条件下被设置：<br>   在我们数据为null的时候，有些数据库可能不能被识别mybatis对null的默认处理。比如Oracle（报错）；<br>   JdbcType OTHER：无效的类型；因为mybatis对所有的null都映射的是原生Jdbc的OTHER类型，orcal不认识<br>   由于全局配置：jdbcTypeForNull=OTHER；oracle不支持；两种解决办法：<br>   1、在对应sql参数中书写#{email,jdbcType=OTHER}<br>   2、在全局配置中设置<br>      <settings><br>         <setting name=\"jdbcTypeForNull\" value=\"NULL\"/><br>      </settings></p>\n<h3 id=\"select元素\"><a href=\"#select元素\" class=\"headerlink\" title=\"select元素\"></a>select元素</h3><p>Select元素来定义查询操作。</p>\n<p>• Id：唯一标识符。– 用来引用这条语句，需要和接口的方法名一致</p>\n<p>• parameterType：参数类型。 – 可以不传，MyBatis会根据TypeHandler自动推断</p>\n<p>• resultType：返回值类型。 – 别名或者全类名，如果返回的是集合，定义集合中元素的类型。不能和resultMap同时使用</p>\n<p>1、List集合返回值的查询方法：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">public List<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Goods</span><span class=\"token punctuation\">></span></span> getGoodsByTitleLike(String title);\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getEmpsByTitleLike<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.imooc.POJO.Goods<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select * from t_goods where title like #&#123;title&#125;\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>控制台输出内容：</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">DEBUG 05-14 17:50:44,942 ==>  Preparing: select * from t_goods where title like ?  (BaseJdbcLogger.java:137) \nDEBUG 05-14 17:50:44,967 ==> Parameters: %分娩%(String)  (BaseJdbcLogger.java:137) \nDEBUG 05-14 17:50:44,985 &lt;==      Total: 2  (BaseJdbcLogger.java:137) \n北京和睦家医院自然分娩+无痛套餐（宝宝树专享，限定预产期2017年9月30日前）\n北京和睦家医院自然分娩+无痛套餐（宝宝树专享，限定预产期2017年9月30日前）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>2、Map集合返回值的查询方法：</p>\n<p>a.单条记录封装</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">\npublic Map<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>String,Object</span><span class=\"token punctuation\">></span></span> getGoodsByIdReturnMap(Integer goodsId);\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getGoodsByIdReturnMap<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>map<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select * from t_goods where goods_id=#&#123;goodsId&#125;\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">DEBUG 05-14 17:52:51,885 ==>  Preparing: select * from t_goods where goods_id=?  (BaseJdbcLogger.java:137) \nDEBUG 05-14 17:52:51,909 ==> Parameters: 800(Integer)  (BaseJdbcLogger.java:137) \nDEBUG 05-14 17:52:51,926 &lt;==      Total: 1  (BaseJdbcLogger.java:137) \n&#123;original_cost=279.0, sub_title=德国原产 欧洲直邮 德国 Hipp喜宝 益生菌 奶粉, is_free_delivery=1, category_id=46, goods_id=800, discount=0.892473, current_price=249.0, title=喜宝HiPP 【欧洲直邮】德国Hipp喜宝益生菌奶粉2段 600g*2&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>b.多条记录封装，map的键为记录的主键，map的值为记录的值</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">@MapKey(\"goodsId\") //告诉mybatis封装这个Map用哪个属性作为key\n  public Map<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Integer,Goods</span><span class=\"token punctuation\">></span></span> getGoodsByTitleLikeReturnMap(String title);\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getGoodsByTitleLikeReturnMap<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.imooc.POJO.Goods<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      select * from t_goods where title like #&#123;title&#125;\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>控制台输出内容：</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">DEBUG 05-14 18:07:17,480 ==>  Preparing: select * from t_goods where title like ?  (BaseJdbcLogger.java:137) \nDEBUG 05-14 18:07:17,508 ==> Parameters: %分娩%(String)  (BaseJdbcLogger.java:137) \nDEBUG 05-14 18:07:17,525 &lt;==      Total: 2  (BaseJdbcLogger.java:137) \n&#123;\n752=Goods&#123;goodsId=752, title='北京和睦家医院自然分娩+无痛套餐（宝宝树专享，限定预产期2017年9月30日前）', subTitle='24小时售前咨询电话：400-891-9191', originalCost=76000.0, currentPrice=47880.0, discount=0.63, isFreeDelivery=1, categoryId=56&#125;, \n1264=Goods&#123;goodsId=1264, title='北京和睦家医院自然分娩+无痛套餐（宝宝树专享，限定预产期2017年9月30日前）', subTitle='24小时售前咨询电话：400-891-9191', originalCost=76000.0, currentPrice=47880.0, discount=0.63, isFreeDelivery=1, categoryId=46&#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"resultType属性\"><a href=\"#resultType属性\" class=\"headerlink\" title=\"resultType属性\"></a>resultType属性</h4><p>1、全局setting设置</p>\n<p>– autoMappingBehavior默认是PARTIAL，开启自动映射的功能。唯一的要求是列名和javaBean属性名一致</p>\n<p>– 如果autoMappingBehavior设置为null则会取消自动映射</p>\n<p>– 数据库字段命名规范，POJO属性符合驼峰命名法，如A_COLUMNaColumn，我们可以开启自动驼峰命名规则映射功能，mapUnderscoreToCamelCase=true。</p>\n<p>2.自定义resultMap，实现高级结果集映射</p>\n<p><strong>等效于resultType的实例如下：</strong></p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">//接口方法\npublic Goods selectGoods(Integer id);\n\n<span class=\"token comment\">&lt;!--自定义某个javaBean的封装规则\n     type：自定义规则--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resultMap</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myGoods<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.imooc.POJO.Goods<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token comment\">&lt;!--column字段名，property属性名--></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>goods_id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>goodsId<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>result</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>result</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sub_title<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>subTitle<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>result</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>original_cost<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>originalCost<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>result</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>current_price<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>currentPrice<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>result</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>discount<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>discount<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>result</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>is_free_delivery<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>isFreeDelivery<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>result</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>category_id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>categoryId<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resultMap</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectGoods<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myGoods<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n         select * from t_goods where goods_id=#&#123;goodsId&#125;\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>控制台输出如下：（实现效果跟自动resultType=Goods自动封装一样，但支持高级自定）</p>\n<pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">DEBUG 05-14 18:33:51,774 ==>  Preparing: select * from t_goods where goods_id=?  (BaseJdbcLogger.java:137) \nDEBUG 05-14 18:33:51,807 ==> Parameters: 800(Integer)  (BaseJdbcLogger.java:137) \nDEBUG 05-14 18:33:51,826 &lt;==      Total: 1  (BaseJdbcLogger.java:137) \nGoods&#123;goodsId=800, title='喜宝HiPP 【欧洲直邮】德国Hipp喜宝益生菌奶粉2段 600g*2', subTitle='德国原产 欧洲直邮 德国 Hipp喜宝 益生菌 奶粉', originalCost=279.0, currentPrice=249.0, discount=0.892473, isFreeDelivery=1, categoryId=46&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"association的三种使用方法\"><a href=\"#association的三种使用方法\" class=\"headerlink\" title=\"association的三种使用方法\"></a>association的三种使用方法</h4><p>1.result</p>\n<p>2.分步查询</p>\n<p>3.延迟加载属性</p>\n<p>每次查询Goods对象时，总是把对应id的detail信息查询出来。使用lazyLoadingEnable属性我们想要在需要时在查询出来</p>\n<p>lazyLoadingenabled：true，开启延迟加载，按需查询</p>\n<p>aggressiveLazyLoading：false，开启按需查询，true，关闭按需查询，全部查询出来</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>setting</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lazyLoadingEnabled<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>setting</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>aggressiveLazyLoading<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>4.多对一查询</p>\n<p>用N的一方GoodsDetail查询Goods的信息</p>\n<p>代码实例如下</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">//GoodsMapper.xml\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectGoodsById<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.imooc.POJO.Goods<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select *\n        from t_goods\n        where goods_id = #&#123;goodsId&#125;\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n\n//GoodsDetailMapper.xml\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resultMap</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>manyToOne<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.imooc.POJO.GoodsDetail<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gd_id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>gdId<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>association</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>goods<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>goods_id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.imooc.DAO.GoodsMapper.selectGoodsById<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resultMap</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectGoodsByAsscoiation<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>manyToOne<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    select * from t_goods_detail where goods_id=#&#123;goodsId&#125;\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>一对多查询（collection）</p>\n<p>1的一方为Goods，n的一方为GoodsDetail，查询Goods的同时查询GoodsDetail对应id信息</p>\n<p>代码实例如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//1：在Goods实体类里增加goodsDet</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Goods</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GoodsDetail</span><span class=\"token punctuation\">></span></span> goodsDetails<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//N</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GoodsDetail</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> gdId<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> godsId<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> gdPicUrl<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> gdOrder<span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//GoodsMapper接口</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">GoodsMapper</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Goods</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getGoodsDetailByOneToMany</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> goodsId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//GoodsDetailMapper接口</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">GoodsDetailMapper</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GoodsDetail</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectDetailById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> gdId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resultMap</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>MyGoodsByOneToMany<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.imooc.POJO.Goods<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>goods_id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>goodsId<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token comment\">&lt;!--可以省略其他result设定，前提是javabean属性名与字段名一一对应--></span>\n        <span class=\"token comment\">&lt;!--association定义关联对象的封装规则\n           select：表名当前属性是调用select指定的方法查出的结果\n           column=\"指定将那一列的值传给这个方法\"\n           使用select指定的方法传入column指定的参数值，并封装给property封装的值\n        --></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>collection</span> <span class=\"token attr-name\">property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>goodsDetails<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.imooc.DAO.GoodsDetailMapper.selectDetailById<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>goods_id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resultMap</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getGoodsDetailByOneToMany<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultMap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>MyGoodsByOneToMany<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select * from t_goods where goods_id=#&#123;goodsId&#125;\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!--GoodsDetail的SQL查询方法--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectDetailById<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.imooc.POJO.GoodsDetail<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    select * from t_goods_detail where goods_id = #&#123;gdId&#125;\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"五、动态SQL\"><a href=\"#五、动态SQL\" class=\"headerlink\" title=\"五、动态SQL\"></a>五、动态SQL</h2><ul>\n<li>Mybatis框架的动态SQL技术是一种根据特定条件动态拼装SQL语句的功能，它存在的意义是为了解决拼接SQL语句字符串时的痛点问题</li>\n</ul>\n<h2 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"if\"></a>if</h2><ul>\n<li>if标签可通过test属性（即传递过来的数据）的表达式进行判断，若表达式的结果为true，则标签中的内容会执行；反之标签中的内容不会执行</li>\n<li>在where后面添加一个恒成立条件<code>1=1</code></li>\n<li>这个恒成立条件并不会影响查询的结果<ul>\n<li>这个<code>1=1</code>可以用来拼接<code>and</code>语句，例如：当empName为null时</li>\n<li>如果不加上恒成立条件，则SQL语句为<code>select * from t_emp where and age = ? and sex = ? and email = ?</code>，此时<code>where</code>会与<code>and</code>连用，SQL语句会报错<ul>\n<li>如果加上一个恒成立条件，则SQL语句为<code>select * from t_emp where 1= 1 and age = ? and sex = ? and email = ?</code>，此时不报错</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--List&lt;Emp> getEmpByCondition(Emp emp);--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getEmpByCondition<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Emp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\tselect * from t_emp where 1=1\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>empName != null and empName !=''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\tand emp_name = #&#123;empName&#125;\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>age != null and age !=''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\tand age = #&#123;age&#125;\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sex != null and sex !=''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\tand sex = #&#123;sex&#125;\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email != null and email !=''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\tand email = #&#123;email&#125;\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"where\"><a href=\"#where\" class=\"headerlink\" title=\"where\"></a>where</h2><ul>\n<li>where和if一般结合使用：</li>\n<li>若where标签中的if条件都不满足，则where标签没有任何功能，即不会添加where关键字  <ul>\n<li>若where标签中的if条件满足，则where标签会自动添加where关键字，并将条件最前方多余的and/or去掉  </li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--List&lt;Emp> getEmpByCondition(Emp emp);--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getEmpByCondition<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Emp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\tselect * from t_emp\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>where</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>empName != null and empName !=''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\temp_name = #&#123;empName&#125;\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>age != null and age !=''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\tand age = #&#123;age&#125;\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sex != null and sex !=''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\tand sex = #&#123;sex&#125;\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email != null and email !=''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\tand email = #&#123;email&#125;\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>where</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>注意：where标签不能去掉条件后多余的and/or</p>\n  <pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--这种用法是错误的，只能去掉条件前面的and/or，条件后面的不行--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>empName != null and empName !=''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\nemp_name = #&#123;empName&#125; and\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>age != null and age !=''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\tage = #&#123;age&#125;\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"trim\"><a href=\"#trim\" class=\"headerlink\" title=\"trim\"></a>trim</h2><ul>\n<li>trim用于去掉或添加标签中的内容  </li>\n<li>常用属性</li>\n<li>prefix：在trim标签中的内容的前面添加某些内容  <ul>\n<li>suffix：在trim标签中的内容的后面添加某些内容 </li>\n<li>prefixOverrides：在trim标签中的内容的前面去掉某些内容  </li>\n<li>suffixOverrides：在trim标签中的内容的后面去掉某些内容</li>\n</ul>\n</li>\n<li>若trim中的标签都不满足条件，则trim标签没有任何效果，也就是只剩下<code>select * from t_emp</code></li>\n</ul>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--List&lt;Emp> getEmpByCondition(Emp emp);--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getEmpByCondition<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Emp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\tselect * from t_emp\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>trim</span> <span class=\"token attr-name\">prefix</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>where<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">suffixOverrides</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>and|or<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>empName != null and empName !=''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\temp_name = #&#123;empName&#125; and\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>age != null and age !=''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\tage = #&#123;age&#125; and\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sex != null and sex !=''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\tsex = #&#123;sex&#125; or\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email != null and email !=''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\temail = #&#123;email&#125;\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>trim</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//测试类</span>\n<span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">getEmpByCondition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> <span class=\"token class-name\">SqlSessionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSqlSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">DynamicSQLMapper</span> mapper <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DynamicSQLMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Emp</span><span class=\"token punctuation\">></span></span> emps<span class=\"token operator\">=</span> mapper<span class=\"token punctuation\">.</span><span class=\"token function\">getEmpByCondition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Emp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>emps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h2 id=\"choose、when、otherwise\"><a href=\"#choose、when、otherwise\" class=\"headerlink\" title=\"choose、when、otherwise\"></a>choose、when、otherwise</h2><ul>\n<li><code>choose、when、otherwise</code>相当于<code>if...else if..else</code></li>\n<li>when至少要有一个，otherwise至多只有一个</li>\n</ul>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getEmpByChoose<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Emp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\tselect * from t_emp\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>where</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>choose</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>when</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>empName != null and empName != ''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\temp_name = #&#123;empName&#125;\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>when</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>when</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>age != null and age != ''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\tage = #&#123;age&#125;\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>when</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>when</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>sex != null and sex != ''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\tsex = #&#123;sex&#125;\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>when</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>when</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email != null and email != ''<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\temail = #&#123;email&#125;\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>when</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>otherwise</span><span class=\"token punctuation\">></span></span>\n\t\t\t\tdid = 1\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>otherwise</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>choose</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>where</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">getEmpByChoose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> <span class=\"token class-name\">SqlSessionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSqlSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">DynamicSQLMapper</span> mapper <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DynamicSQLMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Emp</span><span class=\"token punctuation\">></span></span> emps <span class=\"token operator\">=</span> mapper<span class=\"token punctuation\">.</span><span class=\"token function\">getEmpByChoose</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Emp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"男\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"123@qq.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>emps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<ul>\n<li>相当于<code>if a else if b else if c else d</code>，只会执行其中一个</li>\n</ul>\n<h2 id=\"foreach\"><a href=\"#foreach\" class=\"headerlink\" title=\"foreach\"></a>foreach</h2><ul>\n<li><p>属性：  </p>\n</li>\n<li><p>collection：设置要循环的数组或集合  </p>\n<ul>\n<li>item：表示集合或数组中的每一个数据  </li>\n<li>separator：设置循环体之间的分隔符，分隔符前后默认有一个空格，如<code>,</code></li>\n<li>open：设置foreach标签中的内容的开始符  </li>\n<li>close：设置foreach标签中的内容的结束符</li>\n</ul>\n</li>\n<li><p>批量删除</p>\n  <pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--int deleteMoreByArray(Integer[] eids);--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>delete</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>deleteMoreByArray<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\tdelete from t_emp where eid in\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>foreach</span> <span class=\"token attr-name\">collection</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>eids<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">item</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>eid<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">separator</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>,<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">open</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">close</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t#&#123;eid&#125;\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>foreach</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>delete</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n  <pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deleteMoreByArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> <span class=\"token class-name\">SqlSessionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSqlSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">DynamicSQLMapper</span> mapper <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DynamicSQLMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> mapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteMoreByArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>批量添加</p>\n  <pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--int insertMoreByList(@Param(\"emps\") List&lt;Emp> emps);--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>insertMoreByList<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\tinsert into t_emp values\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>foreach</span> <span class=\"token attr-name\">collection</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>emps<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">item</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>emp<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">separator</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>,<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t(null,#&#123;emp.empName&#125;,#&#123;emp.age&#125;,#&#123;emp.sex&#125;,#&#123;emp.email&#125;,null)\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>foreach</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n  <pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">insertMoreByList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> <span class=\"token class-name\">SqlSessionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSqlSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">DynamicSQLMapper</span> mapper <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DynamicSQLMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">Emp</span> emp1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Emp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"男\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"123@321.com\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">Emp</span> emp2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Emp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"男\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"123@321.com\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">Emp</span> emp3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Emp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"男\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"123@321.com\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Emp</span><span class=\"token punctuation\">></span></span> emps <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span>emp1<span class=\"token punctuation\">,</span> emp2<span class=\"token punctuation\">,</span> emp3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> mapper<span class=\"token punctuation\">.</span><span class=\"token function\">insertMoreByList</span><span class=\"token punctuation\">(</span>emps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2>","feature":true,"text":"尚硅谷版Mybatis学习笔记一、Mybatis介绍什么是Mybatis答：1、Mybatis是一个半ORM（对象关系映射）框架，它内部封装了JDBC，开发时只需要关注SQL语句本身，不需要花费精力去处理加载驱动、创建连接、创建statement等繁杂的过程。程序员直接编写原生态...","link":"","photos":[],"count_time":{"symbolsCount":"29k","symbolsTime":"27 mins."},"categories":[{"name":"Java","slug":"Java","count":8,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":8,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B0%9A%E7%A1%85%E8%B0%B7%E7%89%88Mybatis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0\"><span class=\"toc-text\">尚硅谷版Mybatis学习笔记</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81Mybatis%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">一、Mybatis介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AFMybatis\"><span class=\"toc-text\">什么是Mybatis</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Mybatis%E4%B8%8EHibernate%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">Mybatis与Hibernate的区别</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8Mybatis\"><span class=\"toc-text\">为什么使用Mybatis</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Mybatis%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">Mybatis下载地址</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81Mybatis%E6%B5%8B%E8%AF%95%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">二、Mybatis测试使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8C%89%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8Mybatis%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">按官方文档简单使用Mybatis流程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E8%AE%A9%E5%AE%9E%E4%BD%93%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E5%90%8D%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%97%E6%AE%B5%E5%90%8D%E4%B8%80%E4%B8%80%E5%AF%B9%E5%BA%94\"><span class=\"toc-text\">如何让实体类的属性名与数据库字段名一一对应</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">三、全局配置文件的标签</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#properties%E5%B1%9E%E6%80%A7%EF%BC%88%E5%B1%9E%E6%80%A7%E6%96%87%E4%BB%B6%EF%BC%89\"><span class=\"toc-text\">properties属性（属性文件）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#settings%E8%AE%BE%E7%BD%AE%EF%BC%88%E8%87%AA%E5%8A%A8%E5%BC%80%E5%90%AF%E9%A9%BC%E5%B3%B0%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99%EF%BC%89\"><span class=\"toc-text\">settings设置（自动开启驼峰命名规则）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#typeAliases%E5%88%AB%E5%90%8D%E5%A4%84%E7%90%86%E5%99%A8%EF%BC%88java%E7%B1%BB%E5%9E%8B%E8%B5%B7%E5%88%AB%E5%90%8D%EF%BC%89\"><span class=\"toc-text\">typeAliases别名处理器（java类型起别名）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#typeHandlers%E7%B1%BB%E5%9E%8B%E5%A4%84%E7%90%86%E5%99%A8\"><span class=\"toc-text\">typeHandlers类型处理器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#plugins%E6%8F%92%E4%BB%B6%EF%BC%88%E5%85%88%E5%AD%A6%E4%B9%A0Mybatis%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E6%89%8D%E8%83%BD%E7%90%86%E8%A7%A3%EF%BC%89\"><span class=\"toc-text\">plugins插件（先学习Mybatis工作原理才能理解）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#environments%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">environments环境</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#databaseIdProvider%E7%8E%AF%E5%A2%83%EF%BC%88%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E7%A7%BB%E6%A4%8D%E6%80%A7%EF%BC%89\"><span class=\"toc-text\">databaseIdProvider环境（数据库的移植性）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mapper%E6%98%A0%E5%B0%84%EF%BC%88%E5%B0%86sql%E6%98%A0%E5%B0%84%E6%B3%A8%E5%86%8C%E5%88%B0%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE%E4%B8%AD%EF%BC%89\"><span class=\"toc-text\">mapper映射（将sql映射注册到全局配置中）</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81Mybatis%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">四、Mybatis映射文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#insert%E3%80%81update%E3%80%81delete%E5%85%83%E7%B4%A0\"><span class=\"toc-text\">insert、update、delete元素</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E9%94%AE%E7%94%9F%E6%88%90%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">主键生成方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E6%95%B0%E5%A4%84%E7%90%86\"><span class=\"toc-text\">参数处理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8E-%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">#{}与${}的区别</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#select%E5%85%83%E7%B4%A0\"><span class=\"toc-text\">select元素</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#resultType%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">resultType属性</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#association%E7%9A%84%E4%B8%89%E7%A7%8D%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">association的三种使用方法</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E5%8A%A8%E6%80%81SQL\"><span class=\"toc-text\">五、动态SQL</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#if\"><span class=\"toc-text\">if</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#where\"><span class=\"toc-text\">where</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#trim\"><span class=\"toc-text\">trim</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#choose%E3%80%81when%E3%80%81otherwise\"><span class=\"toc-text\">choose、when、otherwise</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#foreach\"><span class=\"toc-text\">foreach</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\"></span></a></li></ol></li></ol>","author":{"name":"YimooRua","slug":"blog-author","avatar":"/static/img/avator.gif","link":"/","description":"这是一个知识分享博客🎉，有什么建议请留言。欢迎探讨技术😁。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/static/img/svg/bilibili-line.svg","link":"https://space.bilibili.com/242073282"},"github":{"icon":"/static/img/svg/github.svg","link":"https://github.com/YimooR"},"csdn":{"icon":"/static/img/svg/csdn.svg","link":"https://blog.csdn.net/weixin_43143863?spm=1000.2115.3001.5343"},"qq":{"icon":"/static/img/svg/qq.svg","link":"https://user.qzone.qq.com/1035605573"}}}},"mapped":true,"prev_post":{"title":"两数之和","uid":"5d27f50fa4c0422c709b72db5e188a60","slug":"Others/leetcode-两数之和","date":"2022-11-17T09:00:00.000Z","updated":"2022-11-18T05:00:00.000Z","comments":true,"path":"api/articles/Others/leetcode-两数之和.json","keywords":null,"cover":"https://yimoorua-img.oss-cn-chengdu.aliyuncs.com/images/2afeb53d394cd30f1a6fc4be06ba971e772e8a66.png","text":"两数之和⭐️难度：简单 给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那 两个 整数，并返回它们的数组下标。你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。你可以按任意顺序返回答案。 示例...","link":"","photos":[],"count_time":{"symbolsCount":933,"symbolsTime":"1 mins."},"categories":[{"name":"Others","slug":"Others","count":2,"path":"api/categories/Others.json"}],"tags":[{"name":"Others","slug":"Others","count":2,"path":"api/tags/Others.json"}],"author":{"name":"YimooRua","slug":"blog-author","avatar":"/static/img/avator.gif","link":"/","description":"这是一个知识分享博客🎉，有什么建议请留言。欢迎探讨技术😁。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/static/img/svg/bilibili-line.svg","link":"https://space.bilibili.com/242073282"},"github":{"icon":"/static/img/svg/github.svg","link":"https://github.com/YimooR"},"csdn":{"icon":"/static/img/svg/csdn.svg","link":"https://blog.csdn.net/weixin_43143863?spm=1000.2115.3001.5343"},"qq":{"icon":"/static/img/svg/qq.svg","link":"https://user.qzone.qq.com/1035605573"}}}},"feature":false},"next_post":{}}
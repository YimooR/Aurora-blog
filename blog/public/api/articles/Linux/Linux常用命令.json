{"title":"Linux常用命令","uid":"596309cd0250881615133cb44c237a29","slug":"Linux/Linux常用命令","date":"2022-11-18T09:00:00.000Z","updated":"2023-02-02T15:45:35.115Z","comments":true,"path":"api/articles/Linux/Linux常用命令.json","keywords":null,"cover":"https://yimoorua-img.oss-cn-chengdu.aliyuncs.com/images/AgAAC6u-TVPCPNkBPLtLtZ8Uit4WUcTR.png","content":"<h1 id=\"第一章：Linux常用命令\"><a href=\"#第一章：Linux常用命令\" class=\"headerlink\" title=\"第一章：Linux常用命令\"></a>第一章：Linux常用命令</h1><h2 id=\"一、命令的基本格式\"><a href=\"#一、命令的基本格式\" class=\"headerlink\" title=\"一、命令的基本格式\"></a>一、命令的基本格式</h2><h3 id=\"1-命令的提示符\"><a href=\"#1-命令的提示符\" class=\"headerlink\" title=\"1. 命令的提示符\"></a>1. 命令的提示符</h3><pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">[root@localhost ~]#\n[]：这是提示符的分隔符号，没有特殊含义。\nroot：显示的是当前的登录用户，现在使用的是 root 用户登录。\n@：分隔符号，没有特殊含义。\nlocalhost： 当前系统的简写主机名（完整主机名是 localhost.localdomain)\n~：代表用户当前所在的目录，此例中用户当前所在的目录是家目录。\n#：命令提示符。超级用户是#，普通用户是＄  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-命令的基本格式\"><a href=\"#2-命令的基本格式\" class=\"headerlink\" title=\"2. 命令的基本格式\"></a>2. 命令的基本格式</h3><pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">[rootelocalhost ~]#命令 [选项] [参数]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>※ ls 是最常见的目录操作命令，主要作用是显示目录下的内容。<br>⭕️ 命令名称：ls。<br>⭕️ 英文原意：list。<br>⭕️ 所在路径：/bin/ls。<br>⭕️ 执行权限：所有用户。<br>⭕️ 功能描述：显示目录下的内容。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>rootelocalhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls [选项] [文件名或目录名]</span>\n选项：\n-a：显示所有文件\n<span class=\"token parameter variable\">--color</span><span class=\"token operator\">=</span>when：支持颜色输出，when 的值默认是 always（总显示颜色），也可以是never：（从不显示颜色）和 auto（自动）\n-d：显示目录信息，而不是目录下的文件\n-h：人性化显示，按照我们习惯的单位显示文件大小\n-i：显示文件的i节点号\n-l：长格式显示<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p> 举几个例子：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root @localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># 1s -1</span>\n总用量 <span class=\"token number\">44</span>\n<span class=\"token number\">1</span> root root <span class=\"token number\">1207</span> <span class=\"token number\">1</span>月 <span class=\"token number\">14</span> <span class=\"token number\">18</span>:18 anaconda-ks.cfg\n<span class=\"token comment\">#权限 引用计数 所有者所属组 大小文件修改时间文件名</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>我们己经知道“-1”选项用于显示文件的详细信息，那么“-”选项显示的这7列分别是什么含义？</p>\n<p>⭕️ 第一列：权限。具体权限的含义将在4.5节中讲解。<br>⭕️ 第二列：引用计数。文件的引用计数代表该文件的硬链接个数，而目录的引用计数代表该目录<br>⭕️ 有多少个一级子目录。<br>⭕️ 第三列：所有者，也就是这个文件属于哪个用户。默认所有者是文件的建立用户<br>⭕️ 第四列：所属组。默认所属组是文件建立用户的有效组，一般情况下就是建立用户的所在组。<br>⭕️ 第五列：大小。默认单位是字节。<br>⭕️ 第六列：文件修改时间。文件状态修改时间或文件数据修改时间都会更改这个时间，注意这个时间不是文件的创建时间。<br>⭕️ 第七列：文件名。</p>\n<p>选项：是用于调整命令的功能的。<br>参数：是命令的操作对象，如果省略参数，是因为有默认参数</p>\n<h2 id=\"二、目录操作命令\"><a href=\"#二、目录操作命令\" class=\"headerlink\" title=\"二、目录操作命令\"></a>二、目录操作命令</h2><h3 id=\"1-ls命令\"><a href=\"#1-ls命令\" class=\"headerlink\" title=\"1. ls命令\"></a>1. ls命令</h3><p>见前一小节的内容。</p>\n<h3 id=\"2-cd-命令\"><a href=\"#2-cd-命令\" class=\"headerlink\" title=\"2. cd 命令\"></a>2. cd 命令</h3><p>cd 是切换所在目录的命令，这个命令的基本信息如下。<br>⭕️ 命令名称：cd。<br>⭕️ 英文原意：change directory。<br>⭕️ 所在路径：Shell 内置命令。<br>⭕️ 执行权限：所有用户。<br>⭕️ 功能描述：切换所在目录。</p>\n<h4 id=\"2-1-cd命令的简化用法\"><a href=\"#2-1-cd命令的简化用法\" class=\"headerlink\" title=\"2.1 cd命令的简化用法\"></a>2.1 cd命令的简化用法</h4><table>\n<thead>\n<tr>\n<th>特殊符号</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>~</td>\n<td>代表用户的家目录</td>\n</tr>\n<tr>\n<td>-</td>\n<td>代表上次所在目录</td>\n</tr>\n<tr>\n<td>.</td>\n<td>代表当前目录</td>\n</tr>\n<tr>\n<td>..</td>\n<td>代表上级目录</td>\n</tr>\n</tbody></table>\n<h4 id=\"2-2-绝对路径和相对路径\"><a href=\"#2-2-绝对路径和相对路径\" class=\"headerlink\" title=\"2.2 绝对路径和相对路径\"></a>2.2 绝对路径和相对路径</h4><p>绝对路径：以跟目录为参照物，从根目录开始，一级一级进入目录<br>相对路径：以当前目录作为参照物，进行目录查找</p>\n<h3 id=\"3-pwd命令\"><a href=\"#3-pwd命令\" class=\"headerlink\" title=\"3.pwd命令\"></a>3.pwd命令</h3><p>pwd 命令是查询所在目录的命令，基本信息如下：<br>⭕️ 命令名称：pwd<br>⭕️ 英文原意：print name of current/working directory<br>⭕️ 所在路径：/bin/pwd<br>⭕️ 执行权限：所有用户。<br>⭕️ 功能描述：查询所在的工作目录。</p>\n<h3 id=\"4-mkdir命令\"><a href=\"#4-mkdir命令\" class=\"headerlink\" title=\"4.mkdir命令\"></a>4.mkdir命令</h3><p>mkdir 是创建目录的命令，其基本信息如下。<br>⭕️ 命令名称：mkdir。<br>⭕️ 英文原意：make directories。<br>⭕️ 所在路径：/bin/mkdir。<br>⭕️ 执行权限：所有用户。<br>⭕️ 功能描述：创建空目录。<br>命令格式</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mkdir [选项] 目录名</span>\n选项： -p：递归建立所需目录<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"5-rmdir命令\"><a href=\"#5-rmdir命令\" class=\"headerlink\" title=\"5. rmdir命令\"></a>5. rmdir命令</h3><p>既然有建立目录的命令，就一定会有删除目录的命令 rmdir，其基本信息如下。<br>⭕️ 命令名称：rmdir。<br>⭕️ 英文原意：remove empty directories。<br>⭕️ 所在路径：/bin/rmdir。<br>⭕️ 执行权限：所有用户。<br>⭕️ 功能描述：删除空目录。</p>\n<p>命令格式</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span> <span class=\"token comment\"># rmdir [选项] 目录名</span>\n选项：-p：递归删除目录<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>rmdir 命令的作用十分有限，因为只能删除空目录，所以一旦目录中有内容，就会报错。这个命令比较“笨”，所以我们不太常用。后续我们不论删除的是文件还是目录，都会使用rm命令</p>\n<h2 id=\"三、文件操作命令\"><a href=\"#三、文件操作命令\" class=\"headerlink\" title=\"三、文件操作命令\"></a>三、文件操作命令</h2><h3 id=\"1-touch-命令\"><a href=\"#1-touch-命令\" class=\"headerlink\" title=\"1.touch 命令\"></a>1.touch 命令</h3><p>创建空文件或修改文件时间，这个命令的基本信息如下。<br>⭕️ 命令名称：touch。<br>⭕️ 英文原意：change file timestamps。<br>⭕️ 所在路径：/bin/touch。<br>⭕️ 执行权限：所有用户。<br>⭕️ 功能描述：修改文件的时间戳。</p>\n<h3 id=\"2-stat-命令\"><a href=\"#2-stat-命令\" class=\"headerlink\" title=\"2.stat 命令\"></a>2.stat 命令</h3><p>stat 是查看文件详细信息的命念，而且可以看到文件的这三个时间，其基本信息如下。<br>⭕️命令名称：stat。<br>⭕️英文原意：display file or file system status。<br>⭕️所在路径：/usr/bin/stat。<br>⭕️执行权限：所有用户。<br>功能描述：显示文件或文件系统的详细信息。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># stat anaconda-ks . cfg</span>\n文件：<span class=\"token string\">\"anaconda-ks.cfg\"</span>\n大小：1453        块：8          IO 块：4096           普通文件\n设备：803h/2051dInode：33574991 硬链接：1\n权限：<span class=\"token punctuation\">(</span>0600/-rw-------）uid：（    <span class=\"token number\">0</span>/       root<span class=\"token punctuation\">)</span>       Gid：<span class=\"token punctuation\">(</span>    <span class=\"token number\">0</span>/     root<span class=\"token punctuation\">)</span>\n环境：system_u:object_r：admin _home_t:s0\n最近访问：2018-11-06 <span class=\"token number\">23</span>:22:23.409038121 +0800\n最近更改：2018-10-24 00:53:08.760018638 +0800           <span class=\"token comment\">#数据修改时间</span>\n最近改动：2018-10-24 00:53:08.760018638 +0800           <span class=\"token comment\">#状态修改时间</span>\n创建时间：-<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-cat-命令\"><a href=\"#3-cat-命令\" class=\"headerlink\" title=\"3.cat 命令\"></a>3.cat 命令</h3><p>cat 命令用来查看文件内容。这个命令的基本信息如下。<br>⭕️命令名称：cat。<br>⭕️英文原意：concatenate files and print on the standard output。<br>⭕️所在路径：/bin/cat。<br>⭕️执行权限：所有用户。<br>功能描述：合并文件并打印输出到标准输出</p>\n<p><strong>命令格式</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat [选项]  文件名</span>\n选项：\n-A：相当于-vET 选项的整合，用于列出所有隐藏符号\n-E：列出每行结尾的回车符$\n-n：显示行号\n-T：把 Tab 键用 ^I 显示出来\n-v：列出特殊字符<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-more-命令\"><a href=\"#4-more-命令\" class=\"headerlink\" title=\"4.more 命令\"></a>4.more 命令</h3><p>more 是分屏显示文件的命令，其基本信息如下。<br>⭕️命令名称：more。<br>⭕️英文原意：file perusal filter for crt vie win。<br>⭕️所在路径：/bin/more。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：分屏显示文件内容。</p>\n<p>more 命令比较简单，一般不用什么选项，命令会打开一个交互界面，可以识别一些交互命令。常用的交互命令如下。<br>⭕️空格键：向下翻页。<br>⭕️b：向上翻页。<br>⭕️回车键：向下滚动一行。<br>⭕️/字符串：搜索指定的字符串。<br>⭕️q：退出。</p>\n<h3 id=\"5-less-命令\"><a href=\"#5-less-命令\" class=\"headerlink\" title=\"5.less 命令\"></a>5.less 命令</h3><p>less 命令和 more 命令类似，只是 more 是分屏显示命令，而 less 是分行显示命令，其基本信息如下。<br>⭕️命令名称：less。<br>⭕️英文原意：opposite of more。<br>⭕️所在路径：/usr/bin/less。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：分行显示文件内容。</p>\n<h3 id=\"6-head-命令\"><a href=\"#6-head-命令\" class=\"headerlink\" title=\"6. head 命令\"></a>6. head 命令</h3><p>head 是用来显示文件开头的命令，其基本信息如下。<br>⭕️命令名称：head。<br>⭕️英文原意：output the first part of files。<br>⭕️所在路径：/usr/bin/head。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：显示文件开头的内容。</p>\n<p>命令格式</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root @localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># head [选项]  文件名</span>\n选项：-n 行数：从文件头开始，显示指定行数\n-v：显示文件名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"7-tail-命令\"><a href=\"#7-tail-命令\" class=\"headerlink\" title=\"7.tail 命令\"></a>7.tail 命令</h3><p>既然有显示文件开头的命令，就会有显示文件结尾的命令。tail 命令的基本信息如下。<br>⭕️命令名称：tail。<br>⭕️英文原意：output the last part of files.<br>⭕️所在路径：/usr/bin/tail。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：显示文件结尾的内容。</p>\n<p>命令格式</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root @localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#  tail [选项]  文件名</span>\n选项：-n  行数：从文件结尾开始，显示指定行数\n-f：监听文件的新增内容<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"8-In-命令\"><a href=\"#8-In-命令\" class=\"headerlink\" title=\"8.In 命令\"></a>8.In 命令</h3><p>我们来看看 In 命令的基本信息。<br>⭕️命令名称：In。<br>⭕️英文原意：make links between file。<br>⭕️所在路径：/bin/In。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：在文件之间建立链接。</p>\n<h4 id=\"8-1-ln命令的基本格式\"><a href=\"#8-1-ln命令的基本格式\" class=\"headerlink\" title=\"8.1 ln命令的基本格式\"></a>8.1 ln命令的基本格式</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ln [选项]  源文件目标文件</span>\n选项：\n-s：建立软链接文件。如果不加<span class=\"token string\">\"-s\"</span>选项，则建立硬链接文件\n-f：强制。如果目标文件已经存在，则删除目标文件后再建立链接文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果创建硬链接：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># touch cangls</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ln  /root/cangls  /tmp/</span>\n<span class=\"token comment\">#建立硬进接文件，目标文件没有写文件名，会和原名一致</span>\n<span class=\"token comment\">#也就是/root/cangls 利/tmp/cangls 是硬链接文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p> 如果创建软链接：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># touch bols</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ln -s /root/bols /tmp/</span>\n<span class=\"token comment\">#建立软链接文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"8-2-硬链接与软连接的特征\"><a href=\"#8-2-硬链接与软连接的特征\" class=\"headerlink\" title=\"8.2 硬链接与软连接的特征\"></a>8.2 硬链接与软连接的特征</h4><ul>\n<li>硬链接特征：<ul>\n<li>源文件和硬链接文件拥有相同的 Inode 和 Block</li>\n<li>修改任意一个文件，另一个都改变</li>\n<li>删除任意一个文件，另一个都能使用</li>\n<li>硬链接标记不清，很难确认硬链接文件位置，不建议使用</li>\n<li>硬链接不能链接目录</li>\n<li>硬链接不能跨分区</li>\n</ul>\n</li>\n<li>软链接特征：<ul>\n<li>软链接和源文件拥有不同的 Inode 和 Block</li>\n<li>两个文件修改任意一个，另一个都改变</li>\n<li>删除软链接，源文件不受影响；删除源文件，软链接不能使用</li>\n<li>软链接没有实际数据，只保存源文件的 Inode，不论源文件多大，软链接大小不变</li>\n<li>软链接的权限是最大权限 lrwxtwxtwx.，但是由于没有实际数据，最终访问时需要参考源文件权限</li>\n<li>软链接可以链接目录</li>\n<li>软链接可以跨分区</li>\n<li>软链接特征明显，建议使用软连接</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"四、目录和文件都能操作的命令\"><a href=\"#四、目录和文件都能操作的命令\" class=\"headerlink\" title=\"四、目录和文件都能操作的命令\"></a>四、目录和文件都能操作的命令</h2><h3 id=\"1-rm-命令\"><a href=\"#1-rm-命令\" class=\"headerlink\" title=\"1.rm 命令\"></a>1.rm 命令</h3><p>rm 是强大的删除命令，不仅可以删除文件，也可以删除目录。这个命令的基本信息如下。<br>⭕️命令名称：rm。<br>⭕️英文原意：remove files or directories。<br>⭕️所在路径：/bin/rm。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：删除文件或目录。<br>命令格式</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># rm[选项] 文件或目录</span>\n选项：-f：强制删除<span class=\"token punctuation\">(</span>force<span class=\"token punctuation\">)</span>\n-i：交互删除，在删除之前会询问用户\n-r：递归删除，可以删除目录 <span class=\"token punctuation\">(</span>recursive<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-cp-命令\"><a href=\"#2-cp-命令\" class=\"headerlink\" title=\"2.cp 命令\"></a>2.cp 命令</h3><p>cp 是用于复制的命令，其基本信息如下：<br>⭕️命令名称：cp。<br>⭕️英文原意：copy files and directories。<br>⭕️所在路径：/bin/cp。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：复制文件和目录。<br>命令格式</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span>＃ <span class=\"token function\">cp</span> <span class=\"token punctuation\">[</span>选项<span class=\"token punctuation\">]</span> 源文件 目标文件\n选项：\n-a：相当于-dpr 选项的集合，这几个选项我们一一介绍\n-d：如果源文件为软链接（对硬链接无效），则复制出的目标文件也为软链接\n-i：询问，如果目标文件已经存在，则会询问是否覆盖\n-p：复制后目标文件保留源文件的属性（包括所有者、所属组、权限和时间）\n-r：递归复制，用于复制目录<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-mv命令\"><a href=\"#3-mv命令\" class=\"headerlink\" title=\"3.mv命令\"></a>3.mv命令</h3><p>mv是用来剪切的命令，其基本信息如下。<br>⭕️命令名称：mv。<br>⭕️英文原意：move (rename) files。<br>⭕️所在路径：/bin/mv。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：移动文件或改名。<br>命令格式</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mv [选项] 源文件 目标文件</span>\n选项：\n-f：强制覆盖，如果目标文件已经存在，则不询问，直接强制覆盖\n-i：交互移动，如果目标文件已经存在，则询问用户是否覆盖（默认选项）\n-v：显示详细信息<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"五、基本权限管理\"><a href=\"#五、基本权限管理\" class=\"headerlink\" title=\"五、基本权限管理\"></a>五、基本权限管理</h2><h3 id=\"1-权限的介绍\"><a href=\"#1-权限的介绍\" class=\"headerlink\" title=\"1.权限的介绍\"></a>1.权限的介绍</h3><p><strong>权限位的含义</strong><br>前面讲解ls 命令时，我们己经知道长格式显示的第一列就是文件的权限，例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls -l install.log</span>\n-rw-r--r--. <span class=\"token number\">1</span> root root <span class=\"token number\">24772</span> <span class=\"token number\">1</span>月 <span class=\"token number\">14</span> <span class=\"token number\">18</span>:17 install.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>第一列的权限位如果不计算最后的”.”（这个点的含义我们在后面解释），则共有10位，这10<br>位权限位的含义如下图所示。</p>\n<p><img src=\"https://pic.imgdb.cn/item/63acdea408b6830163dd869d.png\" alt=\"演示图\"> </p>\n<ul>\n<li>第1位代表文件类型。Linux 不像 Windows 使用扩展名表示文件类型，而是使用权限位的第1位表示文件类型。虽然 Linux 文件的种类不像 Windows 中那么多，但是分类也不少，详细情况<br>可以使用“info ls”命令查看。这里只讲一些常见的文件类型。<br><code>-</code>：普通文件。<br><code>b</code>：块设备文件。这是一种特殊设备文件，存储设备都是这种文件，如分区文件/dev/sda 1就是这种文件。<br><code>e</code>：字符设备文件。这也是特殊设备文件，输入设备一般都是这种文件，如鼠标、键盘等。<br><code>d</code>：目录文件。Linux 中一切皆文件，所以目录也是文件的一种。<br><code>l</code>：软链接文件。<br><code>p</code>：管道符文件。这是一种非常少见的特殊设备文件。<br><code>s</code>：套接字文件。这也是一种特殊设备文件，一些服务支持 Socket 访问，就会产生这样的文件。</li>\n<li>第2～4位代表文件所有者的权限。<br><code>-r</code>：代表 read，是读取权限。<br><code>-w</code>：代表 write，是写权限。<br><code>-x</code>：代表 execute，是执行权限。<br>如果有字母，则代表拥有对应的权限；如果是<code>-</code>，则代表没有对应的权限。</li>\n<li>第5～7位代表文件所属组的权限，同样拥有<code>rwx</code>权限。</li>\n<li>第8～10位代表其他人的权限，同样拥有<code>rwx</code>权限。</li>\n</ul>\n<h3 id=\"2-基本权限命令\"><a href=\"#2-基本权限命令\" class=\"headerlink\" title=\"2.基本权限命令\"></a>2.基本权限命令</h3><p>首先来看修改权限的命令 chmod，其基本信息如下。<br>⭕️命令名称：chmod。<br>⭕️英文原意：change file mode bits。<br>⭕️所在路径：/bin/chmod。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：修改文件的权限模式。</p>\n<h4 id=\"2-1-命令格式\"><a href=\"#2-1-命令格式\" class=\"headerlink\" title=\"2.1 命令格式\"></a>2.1 命令格式</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># chmod[选项] 权限模式 文件名</span>\n选项：\n-R：递归设置权限，也就是给子目录中的所有文件设定权限<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-2-权限模式\"><a href=\"#2-2-权限模式\" class=\"headerlink\" title=\"2.2 权限模式\"></a>2.2 权限模式</h4><p>chmod 命令的权限模式的格式是<code>[ugoa][[+-=][perms]]</code>，也就是<code>[用户身份][赋予方式][权限]</code>的格式，我们来解释一下。</p>\n<ul>\n<li>用户身份。<br><code>-u</code>：代表所有者(user）<br><code>-g</code>： 代表所属组(group)<br><code>-o</code>：代表其他人(other)<br><code>-a</code>：代表全部身份(all)</li>\n<li>赋予方式。<br><code>+</code>：加入权限。<br><code>-</code>：减去权限。<br><code>=</code>：设置权限。</li>\n<li>权限。<br><code>r</code>： 读取权限(read)<br><code>w</code>：写权限(write）<br><code>x</code>：执行权限(execute)</li>\n</ul>\n<h4 id=\"2-3-数字权限\"><a href=\"#2-3-数字权限\" class=\"headerlink\" title=\"2.3 数字权限\"></a>2.3 数字权限</h4><p>数字权限的赋子方式是最简单的，但是不如之前的字母权限好记、直观。我们来看看这些数字权限的含义。<br><code>4</code>：代表<code>r</code>权限。<br><code>2</code>：代表<code>w</code>权限。<br><code>1</code>：代表<code>x</code>权限。</p>\n<h4 id=\"2-4-常用权限\"><a href=\"#2-4-常用权限\" class=\"headerlink\" title=\"2.4 常用权限\"></a>2.4 常用权限</h4><p>数字权限的赋予方式更加简单，但是需要用户对这几个数字更加熟悉。其实常用权限也并不多，只有如下几个。<br><code>644</code>：这是文件的基本权限，代表所有者拥有读、写权限，而所属组和其他人拥有只读权限。<br><code>755</code>：这是文件的执行权限和目录的基本权限，代表所有者拥有读、写和执行权限，而所属组和其他人拥有读和执行权限。<br><code>777</code>：这是最大权限。在实际的生产服务器中，要尽力避免给文件或目录赋予这样的权限，这会造成一定的安全隐患。</p>\n<h3 id=\"3-基本权限的作用\"><a href=\"#3-基本权限的作用\" class=\"headerlink\" title=\"3.基本权限的作用\"></a>3.基本权限的作用</h3><h4 id=\"3-1-权限含义的解释\"><a href=\"#3-1-权限含义的解释\" class=\"headerlink\" title=\"3.1 权限含义的解释\"></a>3.1 权限含义的解释</h4><p>首先，读、写、执行权限对文件和目录的作用是不同的。</p>\n<ul>\n<li>权限对文件的作用。<ul>\n<li>读（r)：对文件有读（r）权限，代表可以读取文件中的数据。如果把权限对应到命令上，那么一旦对文件有读（r）权限，就可以对文件执行 <code>cat</code>、 <code>more</code>、 <code>less</code>、 <code>head</code>、 <code>tail</code> 等文件查看命令。</li>\n<li>写（w）：对文件有写（w）权限，代表可以修改文件中的数据。如果把权限对应到命令上，那么一旦对文件有写（w）权限，就可以对文件执行 <code>vim</code>、 <code>echo</code> 等修改文件数据的命令。注意：对文件有写权限，是不能删除文件本身的，只能修改文件中的数据。如果要想删除文件，则需要对文件的上级目录拥有写权限。</li>\n<li>执行（x）：对文件有执行（x）权限，代表文件拥有了执行权限，可以运行。在Linux 中，只要文件有执行（x）权限，这个文件就是执行文件了。只是这个文件到底能不能正确执行，不仅需要执行（x）权限，还要看文件中的代码是不是正确的语言代码。对文件来说，执行（x）权限是最高权限。</li>\n</ul>\n</li>\n<li>权限对目录的作用。<ul>\n<li>读（r）：对目录有读（T）权限，代表可以查看目录下的内容，也就是可以查看目录下有哪些子文件和子目录。如果把权限对应到命令上，那么一旦对目录拥有了读（r）权限，就可以在目录下执行ls命令，查看目录下的内容了。</li>\n<li>写（w）：对目录有写（r）权限，代表可以修改目录下的数据，也就是可以在目录中新建、删除、复制、剪切子文件或子目录。如果把权限对应到命令上，那么一旦对目录拥有了写（w）权限，就可以在目录下执行 <code>touch</code>、 <code>rm</code>、 <code>ep</code>、<code>my</code> 命令。对目录来说，写（w）权限是最高权限。</li>\n<li>执行（x）：目录是不能运行的，那么对目录拥有执行（x）权限，代表可以进入目录。如果把权限对应到命令上，那么一旦对目录拥有了执行（x）权限，就可以对目录执行 <code>cd</code> 命令，进入目录。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-2-目录的可用权限\"><a href=\"#3-2-目录的可用权限\" class=\"headerlink\" title=\"3.2 目录的可用权限\"></a>3.2 目录的可用权限</h4><p>目录的可用权限其实只有以下几个。<br><code>0</code>：任何权限都不赋予。<br><code>5</code>：基本的目录浏览和进入权限。<br><code>7</code>：完全权限。</p>\n<h3 id=\"4-所有者和所属组命令\"><a href=\"#4-所有者和所属组命令\" class=\"headerlink\" title=\"4.所有者和所属组命令\"></a>4.所有者和所属组命令</h3><h4 id=\"4-1-chown-命令\"><a href=\"#4-1-chown-命令\" class=\"headerlink\" title=\"4.1 chown 命令\"></a>4.1 chown 命令</h4><p>chown 是修改文件和目录的所有者和所属组的命令，其基本信息如下。<br>⭕️命令名称：chown。<br>⭕️英文原意：change file owner and group。<br>⭕️所在路径：/bin/chown。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：修改文件和目录的所有者和所属组。</p>\n<p>命令格式</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># chown [选项] 所有者：所属组 文件或目录</span>\n选项：\n-R：递归设置权限，也就是给子目录中的所有文件设置权限<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>普通用户不能修改文件的所有者，哪怕自己是这个文件的所有者也不行。<br>普通用户可以修改所有者是自己的文件的权限。</p>\n<h4 id=\"4-2-chgrp-命令\"><a href=\"#4-2-chgrp-命令\" class=\"headerlink\" title=\"4.2 chgrp 命令\"></a>4.2 chgrp 命令</h4><p>chgrp 是修改文件和目录的所属组的命令，其基本信息如下。<br>⭕️命令名称：chgrp。<br>⭕️英文原意：change group ownership。<br>⭕️所在路径：/bin/chgrp。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：修改文件和目录的所属组。</p>\n<h3 id=\"5-umask-默认权限\"><a href=\"#5-umask-默认权限\" class=\"headerlink\" title=\"5.umask 默认权限\"></a>5.umask 默认权限</h3><h4 id=\"5-1-查看系统的-umask-权限\"><a href=\"#5-1-查看系统的-umask-权限\" class=\"headerlink\" title=\"5.1 查看系统的 umask 权限\"></a>5.1 查看系统的 umask 权限</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># umask</span>\n0022\n<span class=\"token comment\">#用八进制数值显示 umask 权限</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span>＃ <span class=\"token builtin class-name\">umask</span> <span class=\"token parameter variable\">-S</span>\n<span class=\"token assign-left variable\">u</span><span class=\"token operator\">=</span>rwx,g<span class=\"token operator\">=</span>rx,o<span class=\"token operator\">=</span>rx\n<span class=\"token comment\">#用字母表示文件和目录的初始权限</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"5-2-umask-权限的计算方法\"><a href=\"#5-2-umask-权限的计算方法\" class=\"headerlink\" title=\"5.2 umask 权限的计算方法\"></a>5.2 umask 权限的计算方法</h4><p>我们需要先了解一下新建文件和目录的默认最大权限。</p>\n<ul>\n<li>对文件来讲，新建文件的默认最大权限是 666，没有执行（x）权限。这是因为执行权限对文件来讲比较危险，不能在新建文件的时候默认赋予，而必须通过用户手工赋予。</li>\n<li>对目录来讲，新建目录的默认最大权限是777。这是因为对目录而言，执行（x）权限仅仅代表进入目录，所以即使建立新文件时直接默认赋子，也没有什么危险。</li>\n</ul>\n<p>按照官方的标准算法，umask 默认权限需要使用二进制进行逻辑与和逻辑非联合运算才可以得到正确的新建文件和目录的默认权限。这种方法既不好计算，也不好理解，并不推荐。<br>我们在这里还是按照权限字母来讲解 umask 权限的计算方法。我们就按照默认的 umask 值是022来分别计算一下新建文件和目录的默认权限吧。</p>\n<ul>\n<li><p>文件的默认权限最大只能是666，而 umask 的值是 022 “-rw-rw-rw-”减去“W–W-” 等于“-rw-r–r—”</p>\n</li>\n<li><p>目录的默认权限最大可以是777，而 umask 的值是 022 “drwxrwxrwx”减去“d—-w–w-” 等于 “drwx-r-xr-x”<br><strong>注意：umask 默认权限的计算绝不是数字直接相减。</strong></p>\n<p>例如 umask 是 033呢？</p>\n<ul>\n<li>文件的默认权限最大只能是 666，而 umask 的值是033 “-rw-rw-rw-” 减去“—–wx-wx”等于 “-rw-r–r—”</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"六、帮助命令\"><a href=\"#六、帮助命令\" class=\"headerlink\" title=\"六、帮助命令\"></a>六、帮助命令</h2><h3 id=\"1-man-命令\"><a href=\"#1-man-命令\" class=\"headerlink\" title=\"1.man 命令\"></a>1.man 命令</h3><p>man 是最常见的帮助命令，也是 Linux 最主要的帮助命令，其基本信息如下。<br>⭕️命令名称：man。<br>⭕️英文原意：format and display the on-line manual pages。<br>⭕️所在路径：/usr/bin/man.<br>⭕️执行权限：所有用户。<br>⭕️功能描述：显示联机帮助手册。</p>\n<h4 id=\"1-1命令格式\"><a href=\"#1-1命令格式\" class=\"headerlink\" title=\"1.1命令格式\"></a>1.1命令格式</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># man [选项] 命令</span>\n选项：\n<span class=\"token parameter variable\">-f</span> 查看命令拥有哪个级别的帮助\n<span class=\"token parameter variable\">-k</span> 查看和命令相关的所有帮助<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"1-2-man命令的快捷键\"><a href=\"#1-2-man命令的快捷键\" class=\"headerlink\" title=\"1.2 man命令的快捷键\"></a>1.2 man命令的快捷键</h4><table>\n<thead>\n<tr>\n<th align=\"left\">快捷键</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">上箭头</td>\n<td>向上移动一行</td>\n</tr>\n<tr>\n<td align=\"left\">下箭头</td>\n<td>向下移动一行</td>\n</tr>\n<tr>\n<td align=\"left\">PgUp</td>\n<td>向上翻一页</td>\n</tr>\n<tr>\n<td align=\"left\">PgDn</td>\n<td>向下翻一页</td>\n</tr>\n<tr>\n<td align=\"left\">g</td>\n<td>移动到第一页</td>\n</tr>\n<tr>\n<td align=\"left\">G</td>\n<td>移动到最后一页</td>\n</tr>\n<tr>\n<td align=\"left\">q</td>\n<td>退出</td>\n</tr>\n<tr>\n<td align=\"left\">/字符串</td>\n<td>从当前页向下搜索字符串</td>\n</tr>\n<tr>\n<td align=\"left\">?字符串</td>\n<td>从当前页向上搜索字符串</td>\n</tr>\n<tr>\n<td align=\"left\">n</td>\n<td>当搜索字符串时，可以使用 n 键找到下一个字符串</td>\n</tr>\n<tr>\n<td align=\"left\">N</td>\n<td>当搜索字符串时，使用 N键反向查询字符串。也就是说，如果使用“/字符串”方式搜索，则N键</td>\n</tr>\n<tr>\n<td align=\"left\">N</td>\n<td>表示向上搜索字符串：如果使用“?字符串”方式搜素，则N键表示向下搜索字符串</td>\n</tr>\n</tbody></table>\n<h4 id=\"1-3-man命令的帮助级别\"><a href=\"#1-3-man命令的帮助级别\" class=\"headerlink\" title=\"1.3 man命令的帮助级别\"></a>1.3 man命令的帮助级别</h4><table>\n<thead>\n<tr>\n<th align=\"left\">级别</th>\n<th align=\"left\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\">普通用户可以执行的系统命令和可执行文件的帮助</td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\">內核可以调用的函数和工具的帮助</td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td align=\"left\">C语言函数的帮助</td>\n</tr>\n<tr>\n<td align=\"left\">4</td>\n<td align=\"left\">设备和特殊文件的帮助</td>\n</tr>\n<tr>\n<td align=\"left\">5</td>\n<td align=\"left\">配置文件的帮助</td>\n</tr>\n<tr>\n<td align=\"left\">6</td>\n<td align=\"left\">游戏的帮助（个人版的 Linux 中是有游戏的）</td>\n</tr>\n<tr>\n<td align=\"left\">7</td>\n<td align=\"left\">杂项的帮助</td>\n</tr>\n<tr>\n<td align=\"left\">8</td>\n<td align=\"left\">超级用户可以执行的系统命令的帮助</td>\n</tr>\n<tr>\n<td align=\"left\">9</td>\n<td align=\"left\">内核的帮助</td>\n</tr>\n</tbody></table>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>man -f 命令或 whatis命令<br><code>#</code>查看命令拥有哪个级别的帮助<br>man -k 命令或 apropos 命令<br><code>#</code>查看和命令相关的所有帮助</p></blockquote>\n<h3 id=\"2-info-命令\"><a href=\"#2-info-命令\" class=\"headerlink\" title=\"2.info 命令\"></a>2.info 命令</h3><p>info 命令的帮助信息是一套完整的资料，每个单独命令的帮助信息只是这套完整资料中的某一个小章节。</p>\n<table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>上箭头</td>\n<td>向上移动一行</td>\n</tr>\n<tr>\n<td>下箭头</td>\n<td>向下移动一行</td>\n</tr>\n<tr>\n<td>PgUp</td>\n<td>向上翻一页</td>\n</tr>\n<tr>\n<td>PgDn</td>\n<td>向下翻一页</td>\n</tr>\n<tr>\n<td>Tab</td>\n<td>在有<code>*</code>符号的节点间进行切换</td>\n</tr>\n<tr>\n<td>回车</td>\n<td>进入有<code>*</code>符号的子页面，查看详细帮助信息</td>\n</tr>\n<tr>\n<td>u</td>\n<td>进入上一层信息（回车是进入下一层信息）</td>\n</tr>\n<tr>\n<td>n</td>\n<td>进入下一小节信息</td>\n</tr>\n<tr>\n<td>P</td>\n<td>进入上一小节信息</td>\n</tr>\n<tr>\n<td>？</td>\n<td>查看帮助信息</td>\n</tr>\n<tr>\n<td>q</td>\n<td>退出 info 信息</td>\n</tr>\n</tbody></table>\n<h3 id=\"3-help-命令\"><a href=\"#3-help-命令\" class=\"headerlink\" title=\"3.help 命令\"></a>3.help 命令</h3><p>help 只能获取 Shell 内置命令的帮助<br>help 命令的基本信息如下。<br>⭕️命令名称：help。<br>⭕️英文原意：help。<br>⭕️所在路径：Shell 内置命令。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：显示 Shell 内置命令的帮助。可以使用 type 命令来区分内置命令与外部命令，shell 是 Linux 的命令解释器。</p>\n<h3 id=\"4-help-选项\"><a href=\"#4-help-选项\" class=\"headerlink\" title=\"4.- -help 选项\"></a>4.- -help 选项</h3><p>绝大多数命令都可以使用“- -help”选项来查看帮助，这也是一种获取帮助的方法。例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls --help</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这种方法非常简单，输出的帮助信息基本上是 man 命令的信息简要版。对于这4种常见的获取帮助的方法，大家可以按照自己的习惯任意使用。</p>\n<h2 id=\"七、搜索命令\"><a href=\"#七、搜索命令\" class=\"headerlink\" title=\"七、搜索命令\"></a>七、搜索命令</h2><h3 id=\"1-whereis-命令\"><a href=\"#1-whereis-命令\" class=\"headerlink\" title=\"1.whereis 命令\"></a>1.whereis 命令</h3><p>whereis 是搜索系统命令的命令（像绕口令一样），也就是说，whereis 命令不能搜索普通文件，而只能搜索系统命令。whereis 命令的基本信息如下。<br>⭕️命令名称： whereis。<br>⭕️英文原意：locate the binary, source, and manual page files for a command。<br>⭕️所在路径：/usr/bin/whereis。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：查找二进制命令、源文件和帮助文档的命令。</p>\n<h3 id=\"2-which-命令\"><a href=\"#2-which-命令\" class=\"headerlink\" title=\"2.which 命令\"></a>2.which 命令</h3><p>which 也是搜索系统命令的命令。和 whereis 命令的区别在于：</p>\n<ul>\n<li>whereis 命令可以在查找到二进制命令的同时，查找到帮助文档的位置；</li>\n<li>而 which 命令在查找到二进制命令的同时，如果这个命令有别名，则还可以找到别名命令。</li>\n</ul>\n<p>which 命令的基本信息如下。</p>\n<p>⭕️命令名称：which。<br>⭕️英文原意：shows the full path of (shell) commands。<br>⭕️所在路径：/usr/bin/which。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：列出命令的所在路径。</p>\n<h3 id=\"3-locate-命令\"><a href=\"#3-locate-命令\" class=\"headerlink\" title=\"3.locate 命令\"></a>3.locate 命令</h3><h4 id=\"3-1基本用法\"><a href=\"#3-1基本用法\" class=\"headerlink\" title=\"3.1基本用法\"></a>3.1基本用法</h4><p>locate 命令才是可以按照文件名搜索普通文件的命令。</p>\n<ul>\n<li><p>优点：按照数据库搜索，搜索速度快，消耗资源小。数据库位置/var/lib/mlocate/mlocate.db，可以使用 updatedb 命令强制更新数据库。</p>\n</li>\n<li><p>缺点：只能按照文件名来搜索文件，而不能执行更复杂的搜索，比如按照权限、大小、修改时间等搜索文件。</p>\n</li>\n</ul>\n<p>locate 命令的基本信息如下。<br>  ⭕️命令名称：locate。<br>  ⭕️英文原意：find files by name。<br>  ⭕️所在路径：/usr/bin/locate。<br>  ⭕️执行权限：所有用户。<br>  ⭕️功能描述：按照文件名搜索文件。</p>\n<h4 id=\"3-2-配置文件\"><a href=\"#3-2-配置文件\" class=\"headerlink\" title=\"3.2 配置文件\"></a>3.2 配置文件</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># vi /etc/updatedb.conf</span>\nPRUNE_BIND_MOUNTS <span class=\"token operator\">=</span> <span class=\"token string\">\"yes\"</span>\n<span class=\"token comment\">#开启搜索限制，也就是让这个配置文件生效</span>\nPRUNEFS <span class=\"token operator\">=</span> <span class=\"token string\">\".....\"</span>\n<span class=\"token comment\">#在 locate 执行搜索时，禁止搜索这些文伴系统类型</span>\nPRUNENAMES <span class=\"token operator\">=</span> <span class=\"token string\">\".....\"</span>\n<span class=\"token comment\">#在 locate 执行搜索时，禁止搜索带有这些扩展名的文件</span>\nPRUNEPATHS <span class=\"token operator\">=</span> <span class=\"token string\">\".....\"</span>\n<span class=\"token comment\">#在locate 执行搜索时，禁止搜索这些系统目录</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-find-命令\"><a href=\"#4-find-命令\" class=\"headerlink\" title=\"4.find 命令\"></a>4.find 命令</h3><p>find 命令的基本信息如下。<br>⭕️命令名称：find。<br>⭕️英文原意：search for files in a directory hierarchy。<br>⭕️所在路径：/bin/find。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：在目录中搜索文件。</p>\n<h4 id=\"4-1-按照文件名搜索\"><a href=\"#4-1-按照文件名搜索\" class=\"headerlink\" title=\"4.1 按照文件名搜索\"></a>4.1 按照文件名搜索</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># find 搜索路径 [选项] 搜索内容</span>\n选项：\n-name：按照文件名搜索\n-iname：按照文件名搜索，不区分文件名大小写\n-inum：按照 inode 号搜索<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"4-2-按照文件大小搜索\"><a href=\"#4-2-按照文件大小搜索\" class=\"headerlink\" title=\"4.2. 按照文件大小搜索\"></a>4.2. 按照文件大小搜索</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># find 搜索路径 [选项] 搜索内容</span>\n选项：\n<span class=\"token parameter variable\">-size</span> <span class=\"token punctuation\">[</span>+ <span class=\"token operator\">|</span> -<span class=\"token punctuation\">]</span>大小：按照指定大小搜索文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>这里的<code>+</code>的意思是搜索比指定大小还要大的文件，的意思是搜索比指定大小还要小的文件。</p>\n<p>find 命令的单位：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># man find</span>\n<span class=\"token parameter variable\">-size</span> n<span class=\"token punctuation\">[</span>cwbkMG<span class=\"token punctuation\">]</span>\nFile uses n <span class=\"token function\">units</span> of space. The following suffixes can be used:\n<span class=\"token string\">\"b\"</span>  <span class=\"token keyword\">for</span> <span class=\"token number\">512</span>-byte blocks <span class=\"token punctuation\">(</span>this is the default <span class=\"token keyword\">if</span> no suffix is used<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#这是默认单位，如果单位为b或不写单位，则按照 512 Byte 搜索</span>\n<span class=\"token string\">\"c\"</span>  <span class=\"token keyword\">for</span> bytes\n<span class=\"token comment\">#搜索单位是c，按照字节搜索</span>\n<span class=\"token string\">\"w\"</span>  <span class=\"token keyword\">for</span> two-byte words\n<span class=\"token comment\">#搜索单位是w，按照双字节（中文）搜索</span>\n<span class=\"token string\">\"k\"</span>  <span class=\"token keyword\">for</span> Kilobytes <span class=\"token punctuation\">(</span>units of <span class=\"token number\">1024</span> bytes<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#按照KB单位搜索，必须是小写的k</span>\n<span class=\"token string\">\"M\"</span>  <span class=\"token keyword\">for</span> Megabytes <span class=\"token punctuation\">(</span>units of <span class=\"token number\">1048576</span> bytes<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#按照MB单位搜索，必须是大写的M</span>\n<span class=\"token string\">\"G\"</span>  <span class=\"token keyword\">for</span> Gigabytes <span class=\"token punctuation\">(</span>units of <span class=\"token number\">1073741824</span> bytes<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#按照GB单位搜索，必须是大写的G</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"4-3-按照修改时间搜索\"><a href=\"#4-3-按照修改时间搜索\" class=\"headerlink\" title=\"4.3 按照修改时间搜索\"></a>4.3 按照修改时间搜索</h4><p>Linux 中的文件有访问时间（atime）、数据修改时间（mtime）、状态修改时间 (ctime）这三个时间，我们也可以按照时间来搜索文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># find 搜索路径 [选项] 搜索内容</span>\n选项：\n<span class=\"token parameter variable\">-atime</span> <span class=\"token punctuation\">[</span>+<span class=\"token operator\">|</span>-<span class=\"token punctuation\">]</span>时间：按照文件访问时间搜索\n<span class=\"token parameter variable\">-mtime</span> <span class=\"token punctuation\">[</span>+<span class=\"token operator\">|</span>-<span class=\"token punctuation\">]</span>时间：按照文件数据修改时间搜索\n-ctime【+<span class=\"token operator\">|</span>-<span class=\"token punctuation\">]</span>时间：按照文件状态修改时间搜索<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这三个时间的区别我们在 stat 命令中己经解释过了，这里用 mtime 数据修改时间来举例，重点说说<code>[+]</code>时间的含义。</p>\n<ul>\n<li>-5：代表5天内修改的文件。</li>\n<li>5：代表前5~6 天那一天修改的文件。</li>\n<li>+5：代表6 天前修改的文件。<br>我们画一个时间轴，来解释一下，如下图所示。</li>\n</ul>\n<p><img src=\"https://pic.imgdb.cn/item/63acdea608b6830163dd8880.png\" alt=\"演示图\"> </p>\n<h4 id=\"4-4-按照权限搜索\"><a href=\"#4-4-按照权限搜索\" class=\"headerlink\" title=\"4.4 按照权限搜索\"></a>4.4 按照权限搜索</h4><p>命令格式。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># find 搜索路径 [选项] 搜索内容</span>\n选项：\n<span class=\"token parameter variable\">-perm</span> 权限模式：查找文件权限刚好等于<span class=\"token string\">\"权限模式\"</span>的文件\n<span class=\"token parameter variable\">-perm</span> -权限模式：查找文件权限全部包含<span class=\"token string\">\"权限模式\"</span>的文件\n<span class=\"token parameter variable\">-perm</span> +权限模式：查找文件权限包含<span class=\"token string\">\"权限模式\"</span>的任意一个权限的文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"4-5-按照所有者和所属组搜索\"><a href=\"#4-5-按照所有者和所属组搜索\" class=\"headerlink\" title=\"4.5 按照所有者和所属组搜索\"></a>4.5 按照所有者和所属组搜索</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># find 搜索路径 [选项] 搜索内容</span>\n选项：\n<span class=\"token parameter variable\">-uid</span> 用户ID：按照用户ID 查找所有者是指定ID的文件\n<span class=\"token parameter variable\">-gid</span> 组ID：按照用户组ID 查找所属组是指定ID的文件\n<span class=\"token parameter variable\">-user</span> 用户名：按照用户名查找所有者是指定用户的文件\n<span class=\"token parameter variable\">-group</span> 组名：按照组名查找所属组是指定用户组的文件\n-nouser：查找没有所有者的文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>按照所有者和所属组搜索时，<code>-nouser</code>选项比较常用，主要用于查找垃圾文件。<br>只有一种情况例外，那就是外来文件。比如光盘和 U盘中的文件如果是由 Windows 复制的，在Linux 中查看就是没有所有者的文件：再比如手工源码包安装的文件，也有可能没有所有者。</p>\n<h4 id=\"4-6-按照文件类型搜索\"><a href=\"#4-6-按照文件类型搜索\" class=\"headerlink\" title=\"4.6 按照文件类型搜索\"></a>4.6 按照文件类型搜索</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># find 搜索路径 [选项] 搜索内容</span>\n选项：\n<span class=\"token parameter variable\">-type</span> d：查找目录\n<span class=\"token parameter variable\">-type</span> f：查找普通文件\n<span class=\"token parameter variable\">-type</span> <span class=\"token number\">1</span>：查找软链接文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"4-7-逻辑运算符\"><a href=\"#4-7-逻辑运算符\" class=\"headerlink\" title=\"4.7 逻辑运算符\"></a>4.7 逻辑运算符</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># find 搜索路径 [选项] 搜索内容</span>\n选项：\n-a：and 逻辑与\n-o：or 逻辑或\n-not：not 逻辑非<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>① <code>-a</code>： and 逻辑与<br>find 命令也支持逻辑运算符选项，其中<code>-a</code>代表逻辑与运算，也就是<code>-a</code> 的两个条件都成立，find 搜索的结果才成立。举个例子：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># find . -size +2k -a -type f</span>\n<span class=\"token comment\">#在当前目灵下搜索大于2KB，并且文件类型是普通文件的文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>② <code>-o</code>：or逻辑或<br><code>-o</code>选项代表逻辑或运算，也就是<code>-o</code>的两个条件只要其中一个成立，find命令就可以找到结果。例<br>如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Iroot @localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># find -name cangls -o -name bols</span>\n./cangls\n./bols\n<span class=\"token comment\">#在当前目录下搜索文件名要么是cangls 的文件，要么是bols的文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>③ <code>-not</code>：not逻辑非<br><code>-not</code> 是逻辑非，也就是取反的意思。举个例子：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># find . -not -name cangls</span>\n<span class=\"token comment\">#在当前目录下搜索文件名不是cangls的文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"4-8-其他选项\"><a href=\"#4-8-其他选项\" class=\"headerlink\" title=\"4.8 其他选项\"></a>4.8 其他选项</h4><p>①<code>-exec</code> 选项<br>这里我们主要讲解两个选项<code>-exec</code>和<code>-ok</code>，这两个选项的基本作用非常相似。我们先来看看<code>-exec</code>选项的格式。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># find 搜索路径 [选项] 搜索内容 -exec 命令2 &#123;&#125; \\;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>其次，这个选项的作用其实是把 find 命令的结果交给由<code>-exec</code> 调用的命令2来处理。<code>号</code>就代表 find 命令的查找结果。<br>②<code>-ok</code>选项<br><code>-ok</code>选项和<code>-exec</code>选项的作用基本一致，区别在于：<code>-exec</code>的命令2会直接处理，而不询问：<code>-ok</code>的命令2在处理前会先询问用户是否这样处理，在得到确认命令后，才会执行。</p>\n<h3 id=\"5-grep-命令：补充命令\"><a href=\"#5-grep-命令：补充命令\" class=\"headerlink\" title=\"5.grep 命令：补充命令\"></a>5.grep 命令：补充命令</h3><p>grep 的作用是在文件中提取和匹配符合条件的字符串行。命令格式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep [选项] \"搜索内容\" 文件名</span>\n选项：\n-i：忽略大小写\n-n：输出行号\n-V：反向查找\n<span class=\"token parameter variable\">--color</span><span class=\"token operator\">=</span>auto：搜索出的关键字用颜色显示<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>find 也是搜索命令，那么 find 命令和 grep 命令有什么区别呢？</p>\n<ol>\n<li><p>find 命令<br>find 命令用于在系统中搜索符合条件的文件名，如果需要模糊查询，则使用通配符进行匹配，通配符<br>是完全匹配（find 命令可以通过-regex选项，把匹配规则转为正则表达式规则，但是不建议如此）。</p>\n</li>\n<li><p>grep 命令<br>grep 命令用于在文件中搜索符合条件的字符串，如果需要模糊查询，则使用正则表达式进行匹配，<br>正则表达式是包含匹配。</p>\n</li>\n</ol>\n<ol start=\"3\">\n<li>通配符与正则表达式的区别<br>通配符：用于匹配文件名，完全匹配</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>通配符</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>？</td>\n<td>匹配一个任意字符</td>\n</tr>\n<tr>\n<td>*</td>\n<td>匹配0个或任意多个任意字符，也就是可以匹配任何内容</td>\n</tr>\n<tr>\n<td>[]</td>\n<td>匹配中括号中任意一个字符。例如，[abc]代表一定匹配一个字符，或者是 a，或者是b，或者是c</td>\n</tr>\n<tr>\n<td>[-]</td>\n<td>匹配中括号中任意一个字符，-代表一个范围。例如，[a-z]代表匹配一个小写字母</td>\n</tr>\n<tr>\n<td>[ ^ ]</td>\n<td>逻辑非，表示匹配不是中括号内的一个字符。例如，[ ^0-9]代表匹配一个不是数字的字符</td>\n</tr>\n</tbody></table>\n<p>正则表达式：用于匹配字符串，包含匹配</p>\n<table>\n<thead>\n<tr>\n<th>正则表达式</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>?</td>\n<td>匹配前一个字符重复0次，或1次（?是扩展正则，需要使用egrep 命令)</td>\n</tr>\n<tr>\n<td>*</td>\n<td>匹配前一个字符重复0次，或任意多次</td>\n</tr>\n<tr>\n<td>[]</td>\n<td>匹配中括号中任意一个字符。例如，[abc]代表一定匹配一个字符，或者是 a，或者是b，或者是c</td>\n</tr>\n<tr>\n<td>[-]</td>\n<td>匹配中括号中任意一个字符，-代表一个范围。例如，[a-z]代表匹配一个小写字母</td>\n</tr>\n<tr>\n<td>[ ^ ]</td>\n<td>逻辑非，表示匹配不是中括号内的一个字符。例如，[ ^0-9]代表匹配一个不是数字的字符</td>\n</tr>\n<tr>\n<td>^</td>\n<td>匹配行首</td>\n</tr>\n<tr>\n<td>$</td>\n<td>匹配行尾</td>\n</tr>\n</tbody></table>\n<h3 id=\"6-管道符：补充命令\"><a href=\"#6-管道符：补充命令\" class=\"headerlink\" title=\"6.管道符：补充命令\"></a>6.管道符：补充命令</h3><p>命令格式：命令1 | 命令2<br>命令1的正确输出作为命令2的操作对象</p>\n<p>1） 例子1：<br>举个例子，我们经常需要使用<code>ll</code>命令查看文件的长格式，不过在有些目录中文件众多，比如/etc/目录，使用<code>1</code>命令显示的内容就会非常多，只能看到最后的内容，而不能看到前面输出的内容。<br>这时我们马上想到 more 命令可以分屏显示文件内容，可是怎么让 more 命令分屏显示命令的输出呢？<br>我想到了一种笨办法：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ll -a /etc/ > /root /testfile</span>\n<span class=\"token comment\">#用输出重定向，把ll命分的输出保存到/root/testfile 文件中</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># more / root /testfile</span>\n<span class=\"token comment\">#既然 testfile 是文件，当然可以用 more 命分分屏显示了</span>\n总用量 <span class=\"token number\">1784</span>\ndrwxx-xr-x. <span class=\"token number\">105</span> root root <span class=\"token number\">12288</span> <span class=\"token number\">10</span> 月 <span class=\"token number\">21</span> <span class=\"token number\">12</span>:49\ndr-xr-xr-x. <span class=\"token number\">26</span> root root <span class=\"token number\">4096</span> <span class=\"token number\">6</span>月 <span class=\"token number\">5</span> <span class=\"token number\">19</span>:06\n<span class=\"token punctuation\">..</span>.省略部分输出<span class=\"token punctuation\">..</span>.\n<span class=\"token number\">1</span> root root <span class=\"token number\">687</span> <span class=\"token number\">6</span>月 <span class=\"token number\">22</span> <span class=\"token number\">2012</span> auto.smb\n--More--<span class=\"token punctuation\">(</span><span class=\"token number\">7</span>%<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可是这样操作实在不方便，这时就可以利用管道符了。命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ll -a /etc/ | more</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>2）例子 2：<br>我想在命令ll  /etc/的结果中搜索 yum 的文件名，应该使用 find 命令？还是 grep 命令？</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ll -a /etc/ | grep yum</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>3） 例子 3:<br>netstat 命令(Centos 7中，需要安装 net-snmp.x86_64， net-tools.x86_64 两个包才有此命令。7.5系统中己经自动安装）格式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat [选项]</span>\n选项：\n-a：列出所有网络状态，包括 Socket 程序\n<span class=\"token parameter variable\">-c</span> 秒数：指定每隔几秒刷新一次网络状态\n-n：使用IE 地址和端口号显示，不使用域名与服务名\n-P：显示 PID 和程序名\n-t：显示使用 TCE 协议端口的连接状况\n-u：显示使用 UDE 协议端口的连接状况\n-1：仅显示监听状态的连接\n-X：显示路由表\n\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -an | grep \"ESTABLISHED\" | wc -l</span>\n<span class=\"token comment\">#如果想知道具体的网络连接数量，就可以再使用 wc 命分统计行数</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>统计正在连接的网络连接数量</p>\n<h3 id=\"7-命令的别名：补充命令\"><a href=\"#7-命令的别名：补充命令\" class=\"headerlink\" title=\"7.命令的别名：补充命令\"></a>7.命令的别名：补充命令</h3><p>命令的别名，就是命令的小名，主要是用于照顾管理员使用习惯的。<br>命令格式：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># alias</span>\n<span class=\"token comment\">#查询命令别名</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># alias 别名=\"原命令\"</span>\n<span class=\"token comment\">#设定命令别名</span>\n例如：\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># alias ser=\"service network restart\"</span>\n<span class=\"token comment\">#用 ser 别名，替代 service ne twork restart 命令</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>用命令定义的别名，是临时生效的，要想永久生效，需要写入环境变量配置文件~/.bashrc</p>\n<h3 id=\"8-常用快捷键：补充命令\"><a href=\"#8-常用快捷键：补充命令\" class=\"headerlink\" title=\"8.常用快捷键：补充命令\"></a>8.常用快捷键：补充命令</h3><table>\n<thead>\n<tr>\n<th>快捷键</th>\n<th align=\"left\">作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Tab键</td>\n<td align=\"left\">命令或文件补全</td>\n</tr>\n<tr>\n<td>ctrl+A</td>\n<td align=\"left\">把光标移动到命令行开头。如果我们输入的命令过长，想要把光标移</td>\n</tr>\n<tr>\n<td>ctrl+E</td>\n<td align=\"left\">动到命令行开头时使用。</td>\n</tr>\n<tr>\n<td>ctrl+C</td>\n<td align=\"left\">把光标移动到命令行结尾。</td>\n</tr>\n<tr>\n<td>ctrl+L</td>\n<td align=\"left\">强制终止当前的命令。清屏，相当于 clear命令。</td>\n</tr>\n<tr>\n<td>ctrl+U</td>\n<td align=\"left\">删除或剪切光标之前的命令。我输入了一行很长的命令，不用使用退格键一个一个字符的删除，使用这个快捷键会更加方便</td>\n</tr>\n<tr>\n<td>ctrl+Y</td>\n<td align=\"left\">粘贴 ctrl+U 剪切的内容。</td>\n</tr>\n</tbody></table>\n<h2 id=\"八、压缩和解压缩命令\"><a href=\"#八、压缩和解压缩命令\" class=\"headerlink\" title=\"八、压缩和解压缩命令\"></a>八、压缩和解压缩命令</h2><p>在 Linux 中可以识别的常见压缩格式有十几种，比如<code>.zip</code> <code>.gz</code> <code>.bz</code> <code>.tar</code> <code>.tar.gz</code> <code>.tar.bz2</code>等。</p>\n<h3 id=\"1-“-zip”格式\"><a href=\"#1-“-zip”格式\" class=\"headerlink\" title=\"1.“.zip”格式\"></a>1.“.zip”格式</h3><p><code>.zip</code>是 Windows 中最常用的压缩格式，Linux 也可以正确识别”zip”格式，这可以方便地和Windows 系统通用压缩文件。</p>\n<h4 id=\"1-1-“-zip”格式的压缩命令\"><a href=\"#1-1-“-zip”格式的压缩命令\" class=\"headerlink\" title=\"1.1. “.zip”格式的压缩命令\"></a>1.1. “.zip”格式的压缩命令</h4><p>压缩命令就是 zip，其基本信息如下。<br>⭕️命令名称：zip。<br>⭕️英文原意：package and compress (archive) files。<br>⭕️所在路径：/usr/bin/zip。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：压缩文件或目录。</p>\n<p>命令格式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># zip[选项] 压缩包名 源文件或源目录</span>\n选项：\n-r：压缩目录\n例如：\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># zip ana.zip anaconda-ks.cfg</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"1-2-“-zip”格式的解压缩命令\"><a href=\"#1-2-“-zip”格式的解压缩命令\" class=\"headerlink\" title=\"1.2 “.zip”格式的解压缩命令\"></a>1.2 “.zip”格式的解压缩命令</h4><p>“.zip”格式的解压缩命令是 unzip, 其基本信息如下。<br>⭕️命令名称：unzip。<br>⭕️英文原意：list, test and extract compressed files in a ZIP archive。<br>⭕️所在路径：/usr/bin/unzip。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：列表、测试和提取压缩文件中的文件。</p>\n<p>命令格式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># unzip [选项] 压缩包名</span>\n选项：\n-d：指定解压缩位置\n例如：\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># unzip -d /tmp/ ana.zip</span>\n<span class=\"token comment\">#把压缩包解压到指定位置</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-“-g2”格式\"><a href=\"#2-“-g2”格式\" class=\"headerlink\" title=\"2.“.g2”格式\"></a>2.“.g2”格式</h3><h4 id=\"2-1-“gz”格式的压缩命令\"><a href=\"#2-1-“gz”格式的压缩命令\" class=\"headerlink\" title=\"2.1 “gz”格式的压缩命令\"></a>2.1 “gz”格式的压缩命令</h4><p>“.gz”格式是 Linux 中最常用的压缩格式，使用 gzip 命令进行压缩，其基本信息如下。<br>⭕️命令名称：gzip。<br>⭕️英文原意：compress or expand files。<br>⭕️所在路径：/bin/gzip。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：压缩文件或目录。</p>\n<p>这个命令的格式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># gzip[选项] 源文件</span>\n选项：\n-c：将压缩数据输出到标准输出中，可以用于保留源文件\n-d：解压缩\n-r：压缩目录\n<span class=\"token punctuation\">[</span>root @localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># gzip -c anaconda-ks .cfg > anaconda-ks. cfg.gz</span>\n<span class=\"token comment\">#使用-c选顶，但是不让压缩数据输出到屏慕上，而是重定向到压缩文件中</span>\n<span class=\"token comment\">#这样可以在压缩文件的同时不册除源文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"2-2-“-gz”格式的解压缩命令\"><a href=\"#2-2-“-gz”格式的解压缩命令\" class=\"headerlink\" title=\"2.2.“.gz”格式的解压缩命令\"></a>2.2.“.gz”格式的解压缩命令</h4><p>如果要解压缩“.gz”格式，那么使用<code>gzip -d 压缩包</code>和<code>gunzip 压缩包</code>命令都可以。我们先看看 gunzip 命令的基本信息。<br>⭕️命令名称：gunzip。<br>⭕️英文原意：compress or expand files。<br>⭕️所在路径：/bin/gunzip。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：解压缩文件或目录。<br>例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root @localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># gunzip instal1.1og.gz</span>\n<span class=\"token punctuation\">[</span>root @localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># gzip -d anaconda-ks .cfg.gz</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>两个命令都可以解压缩<code>.g2</code>格式</p>\n<h3 id=\"3-“-bz2”格式\"><a href=\"#3-“-bz2”格式\" class=\"headerlink\" title=\"3.“.bz2”格式\"></a>3.“.bz2”格式</h3><h4 id=\"3-1-“-bz2”格式的压缩命令\"><a href=\"#3-1-“-bz2”格式的压缩命令\" class=\"headerlink\" title=\"3.1 “.bz2”格式的压缩命令\"></a>3.1 “.bz2”格式的压缩命令</h4><p>“.bz2”格式是 Linux 的另一种压缩格式，从理论上来讲，“-bz2” 格式的算法更先进、压缩比更好：而“.gz”格式相对来讲压缩的时间更快。<br>“.bz2” 格式的压缩命令是 bzip2，我们来看看这个命令的基本信息。<br>⭕️命令名称：bzip2。<br>⭕️英文原意：a block-sorting file compressor。<br>⭕️所在路径：/usr/bin/bzip2。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：.bz2 格式的压缩命令。</p>\n<p>来看看 bzip2 命令的格式。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># bzip2 [选项] 源文件</span>\n选项：\n-d：解压缩\n-k：压缩时，保留源文件\n-v：显示压缩的详细信息\n例如：\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># bzip2 anaconda-ks .cfg</span>\n<span class=\"token comment\">#压缩成.bz2 格式</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># bzip2 -k install.1og.syslog</span>\n<span class=\"token comment\">#保留源文件压缩</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"3-2-“-bz2”格式的解压缩命令\"><a href=\"#3-2-“-bz2”格式的解压缩命令\" class=\"headerlink\" title=\"3.2 “.bz2”格式的解压缩命令\"></a>3.2 “.bz2”格式的解压缩命令</h4><p>“.bz2”格式可以使用<code>bzip2 -d 压缩包名</code>命令来进行解压缩，也可以使用<code>bunzip2 压缩包名</code>命令来进行解压缩。先看看 bunzip2 命令的基本信息。<br>⭕️命令名称： bunzip2。<br>⭕️英文原意：a block-sorting file compressor。<br>⭕️所在路径：/usr/bin/bunzip2。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：“.bz2”格式的解压缩命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root @localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># bunzip2 anaconda-ks .cfg.bz2</span>\n<span class=\"token punctuation\">[</span>root @localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># bzip2</span>\ninstall.1og.syslog.bz2\n<span class=\"token comment\">#两个命令都可以解压缩</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-“-tar”格式（打包不会压缩）\"><a href=\"#4-“-tar”格式（打包不会压缩）\" class=\"headerlink\" title=\"4.“.tar”格式（打包不会压缩）\"></a>4.“.tar”格式（打包不会压缩）</h3><h4 id=\"4-1-“-tar”格式的打包命令\"><a href=\"#4-1-“-tar”格式的打包命令\" class=\"headerlink\" title=\"4.1 “.tar”格式的打包命令\"></a>4.1 “.tar”格式的打包命令</h4><p>“.tar”格式的打包和解打包都使用 tar 命令，区别只是选项不同。我们先看看 tar 命令的基本信息。<br>⭕️命令名称：tar。<br>⭕️英文原意：tar。<br>⭕️所在路径：/bin/tar。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：打包与解打包命令。<br>命令的基本格式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar [选项] [-f 压缩包名] 源文件或目录</span>\n选项：\n-c：打包\n-f：指定压缩包的文件名。压缩包的扩展名是用来给管理员识别格式的，所以一定要正确指定扩展名\n-v：显示打包文件过程\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar -cvf anaconda-ks.cfg.tar anaconda-ks.cfg</span>\n<span class=\"token comment\">#打包，不会压缩</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"4-2-“-tar”格式的解打包命令\"><a href=\"#4-2-“-tar”格式的解打包命令\" class=\"headerlink\" title=\"4.2 “.tar”格式的解打包命令\"></a>4.2 “.tar”格式的解打包命令</h4><p>“.tar”格式的解打包也需要使用 tar 命令，但是选项不太一样。命令格式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar[选项] 压缩包</span>\n选项：\n-x：解打包\n-f：指定压缩包的文件名\n-v：显示解打包文件过程\n-t：测试，就是不解打包，只是查看包中有哪些文件\n-c<span class=\"token punctuation\">(</span>大<span class=\"token punctuation\">)</span>目录：指定解打包位置\n<span class=\"token comment\">#例如</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar -xvf anaconda-ks.cfg.tar</span>\n<span class=\"token comment\">#解打包到当前目录下</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"5-“-tar-gz”-和“-tar-bz2”格式\"><a href=\"#5-“-tar-gz”-和“-tar-bz2”格式\" class=\"headerlink\" title=\"5.“.tar.gz” 和“.tar.bz2”格式\"></a>5.“.tar.gz” 和“.tar.bz2”格式</h3><p>使用 tar 命令直接打包压缩。命令格式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar[选项] 压缩包 源文件或目录</span>\n选项：\n-z：压缩和解压缩<span class=\"token string\">\".tar.gz\"</span>格式\n-j：压缩和解压缩<span class=\"token string\">\".tar.bz2\"</span>格式\n<span class=\"token comment\">#例如：.tar.gz 格式</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar -zcvf tmp.tar.gz /tmp/</span>\n<span class=\"token comment\">#把/tmp/目录直接打包压缩为\"tar.gz\"格式</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar -zxvf tmp.tar.gz</span>\n<span class=\"token comment\">#解压缩与解打包\".tar.g2\"格式</span>\n<span class=\"token comment\">#例如：.tar.bz2 格式</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar -jcvf tmp.tar.bz2 /tmp/</span>\n<span class=\"token comment\">#打包压缩为\"tar.bz2\"格式，注意压缩包文件名</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar -jxvf tmp.tar.bz2</span>\n<span class=\"token comment\">#解压缩与解打包\"tar.bz2\"格式</span>\n\n<span class=\"token comment\">#再举几个例子：</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mkdir test</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># touch</span>\n<span class=\"token builtin class-name\">test</span> /abc\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># touch</span>\n<span class=\"token builtin class-name\">test</span> /bcd\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># touch</span>\n<span class=\"token builtin class-name\">test</span> /cde\n<span class=\"token comment\">#建立测试目录和测试文件</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar -zcvf</span>\n<span class=\"token builtin class-name\">test</span> .tar .gz test/\n<span class=\"token comment\">#压缩</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar -ztvf test.tar.gz</span>\n<span class=\"token comment\">#只查看，不解压</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar -ZxVf test.tar.gz -C /tmp</span>\n<span class=\"token comment\">#解压缩到指定位置</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar -zxvf test.tar.gz -C /tmp test/cde</span>\n<span class=\"token comment\">#只解压压缩包中的特定文件，到指定位置</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"九、关机和重启命令\"><a href=\"#九、关机和重启命令\" class=\"headerlink\" title=\"九、关机和重启命令\"></a>九、关机和重启命令</h2><h3 id=\"1-sync-数据同步\"><a href=\"#1-sync-数据同步\" class=\"headerlink\" title=\"1.sync 数据同步\"></a>1.sync 数据同步</h3><p>sync 命令的基本信息如下。<br>⭕️命令名称：sync。<br>⭕️英文原意：flush file system buffers。<br>⭕️所在路径：/bin/sync。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：刷新文件系统缓冲区。</p>\n<h3 id=\"2-shutdown-命令\"><a href=\"#2-shutdown-命令\" class=\"headerlink\" title=\"2.shutdown 命令\"></a>2.shutdown 命令</h3><p> shutdown 命令的基本信息如下。<br>⭕️命令名称：shutdown。<br>⭕️英文原意：bring the system down。<br>⭕️所在路径：/sbin/shutdown。<br>⭕️执行权限：超级用户。<br>⭕️功能描述：关机和重启<br>命令的基本格式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># shutdown [选项] 时间 [警告信息]</span>\n选项：\n-c：取消己经执行的 <span class=\"token function\">shutdown</span> 命令\n-h：关机\n-r：重启<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-reboot-命令\"><a href=\"#3-reboot-命令\" class=\"headerlink\" title=\"3.reboot 命令\"></a>3.reboot 命令</h3><p>在现在的系统中，reboot 命令也是安全的，而且不需要加入过多的选项。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># reboot</span>\n<span class=\"token comment\">#重启</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"4-halt-和-poweroff-命令\"><a href=\"#4-halt-和-poweroff-命令\" class=\"headerlink\" title=\"4.halt 和 poweroff 命令\"></a>4.halt 和 poweroff 命令</h3><p>这两个都是关机命令，直接执行即可。这两个命令不会完整关闭和保存系统的服务，不建议使用。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># halt</span>\n<span class=\"token comment\">#关机</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># poweroff</span>\n<span class=\"token comment\">#关机</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"5-init-命令\"><a href=\"#5-init-命令\" class=\"headerlink\" title=\"5.init 命令\"></a>5.init 命令</h3><p>init 是修改 Linux 运行级别的命令，也可以用于关机和重启。这个命令并不安全，不建议使用。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># init 0</span>\n<span class=\"token comment\">#关机，也就是调用系统的0级别</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># init 6</span>\n<span class=\"token comment\">#重启，也就是调用系统的6级别</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十、常用网络命令\"><a href=\"#十、常用网络命令\" class=\"headerlink\" title=\"十、常用网络命令\"></a>十、常用网络命令</h2><h3 id=\"1-配置IP地址\"><a href=\"#1-配置IP地址\" class=\"headerlink\" title=\"1.配置IP地址\"></a>1.配置IP地址</h3><h4 id=\"1-1-配置IP地址\"><a href=\"#1-1-配置IP地址\" class=\"headerlink\" title=\"1.1 配置IP地址\"></a>1.1 配置IP地址</h4><p>IP 地址是计算机在互联网中唯一的地址编码。每台计算机如果需要接入网络和其他计算机进行数据通信，就必须配置唯一的公网IP 地址。<br>配置IP 地址有两种方法：</p>\n<ol>\n<li>setup 工具</li>\n<li>vi /etc/sysconfig/network-scripts/ifcfg-eth0<br>手动修改配置文件<h4 id=\"1-2-重启网络服务\"><a href=\"#1-2-重启网络服务\" class=\"headerlink\" title=\"1.2 重启网络服务\"></a>1.2 重启网络服务</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># service network restart</span>\n<span class=\"token comment\">#重启网络服务</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h4 id=\"1-3-虚拟机需要桥接到有线网卡，并重启网络服务\"><a href=\"#1-3-虚拟机需要桥接到有线网卡，并重启网络服务\" class=\"headerlink\" title=\"1.3 虚拟机需要桥接到有线网卡，并重启网络服务\"></a>1.3 虚拟机需要桥接到有线网卡，并重启网络服务</h4></li>\n</ol>\n<h4 id=\"1-4-复制镜像有可能需要重置-UUID（唯一识别符）\"><a href=\"#1-4-复制镜像有可能需要重置-UUID（唯一识别符）\" class=\"headerlink\" title=\"1.4 复制镜像有可能需要重置 UUID（唯一识别符）\"></a>1.4 复制镜像有可能需要重置 UUID（唯一识别符）</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># vi /etc/sysconfig/network-scripts/ifcfg-eth0</span>\n<span class=\"token comment\">#删除 MAC 地址行</span>\nIroot@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># rm -rf /etc/udev/rules.d/70-persistent-net .rules</span>\n<span class=\"token comment\">#删除 Mac 地址和 UUID 绑定文件</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># reboot</span>\n<span class=\"token comment\">#重启 Linux</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-ifconfig-命令\"><a href=\"#2-ifconfig-命令\" class=\"headerlink\" title=\"2.ifconfig 命令\"></a>2.ifconfig 命令</h3><p>⭕️命令名称：ifconfig。<br>⭕️英文原意：configure a network inter face。<br>⭕️所在路径：/sbin/ifconfig。<br>⭕️执行权限：超级用户。<br>⭕️功能描述：配置网络接口。</p>\n<p>ifconfig 命令最主要的作用就是查看 IP 地址的信息，直接输入 ifconfig 命令即可。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ifconfig</span>\neth0: <span class=\"token assign-left variable\">flags</span><span class=\"token operator\">=</span><span class=\"token number\">416</span><span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>&lt;</span>UP, BROADCAST, RUNNING, MULTICAST<span class=\"token operator\">></span> mtu <span class=\"token number\">1500</span>\n      <span class=\"token comment\">#标志                                          最大传输单元</span>\n      inet <span class=\"token number\">192.168</span>.252.20 netmask <span class=\"token number\">255.255</span>.255.0 broadcast <span class=\"token number\">192.168</span>.252.255\n      <span class=\"token comment\">#IP 地址                     子网掩码                 广播地址</span>\n      inet6 fe80: :546e :994b: 30c: e2f7 prefixlen <span class=\"token number\">64</span> scopeid 0x2<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>link<span class=\"token operator\">></span>\n      <span class=\"token comment\">#IPV6 地址（目前没有生效） </span>\n      ether 00: 0c:29:aa: d2:96 txqueuelen <span class=\"token number\">1000</span> <span class=\"token punctuation\">(</span>Ethernet<span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">#MAC 地址</span>\n      RX packets <span class=\"token number\">3728</span> bytes <span class=\"token number\">310958</span> <span class=\"token punctuation\">(</span><span class=\"token number\">303.6</span> KiB<span class=\"token punctuation\">)</span>\n      RX errors O dropped <span class=\"token number\">0</span> overruns <span class=\"token number\">0</span> frame <span class=\"token number\">0</span>\n      <span class=\"token comment\">#接收的数据包情况</span>\n      TX packets <span class=\"token number\">3051</span> bytes <span class=\"token number\">1495119</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.4</span> MiB<span class=\"token punctuation\">)</span>\n      TX errors <span class=\"token number\">0</span> dropped <span class=\"token number\">0</span> overruns <span class=\"token number\">0</span> carrier <span class=\"token number\">0</span> collisions <span class=\"token number\">0</span>\n      <span class=\"token comment\">#发送的数据包情况</span>\nlo: <span class=\"token assign-left variable\">flags</span><span class=\"token operator\">=</span><span class=\"token number\">7</span><span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>&lt;</span>UP, LOOPBACK, RUNNING<span class=\"token operator\">></span> mtu <span class=\"token number\">65536</span>\n<span class=\"token comment\">#本地回环网卡</span>\n      inet <span class=\"token number\">127.0</span>.0.1 netmask <span class=\"token number\">255.0</span>.0.0\n      inet6::1 prefixlen <span class=\"token number\">128</span> scopeid 0x1<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>host<span class=\"token operator\">></span>\n      1oop txqueuelen <span class=\"token number\">1000</span> <span class=\"token punctuation\">(</span>Local Loopback<span class=\"token punctuation\">)</span> \n      RX packets <span class=\"token number\">8</span> bytes <span class=\"token number\">696</span> <span class=\"token punctuation\">(</span><span class=\"token number\">696.0</span> B<span class=\"token punctuation\">)</span>\n      RX errors <span class=\"token number\">0</span> dropped <span class=\"token number\">0</span> overruns <span class=\"token number\">0</span> frame <span class=\"token number\">0</span>\n      TX packets <span class=\"token number\">8</span> bytes <span class=\"token number\">696</span> <span class=\"token punctuation\">(</span><span class=\"token number\">696.0</span> B<span class=\"token punctuation\">)</span>\n      TX errors <span class=\"token number\">0</span> dropped <span class=\"token number\">0</span> overruns <span class=\"token number\">0</span> carrier <span class=\"token number\">0</span> collisions <span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-ping-命令\"><a href=\"#3-ping-命令\" class=\"headerlink\" title=\"3.ping 命令\"></a>3.ping 命令</h3><p>ping 是常用的网络命令，主要通过 ICMP 协议进行网络探测，测试网络中主机的通信情况。ping命令的基本信息如下。<br>⭕️命令名称：ping。<br>⭕️英文原意：send ICMP ECHO REQUEST to network hosts。<br>⭕️所在路径：/bin/ping。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：向网络主机发送 ICMP 请求。</p>\n<p>命令的基本格式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ping [选项] IE</span>\n选项：\n-b：后面加入广播地址，用于对整个网段进行探测\n<span class=\"token parameter variable\">-c</span> 次数：用于指定 <span class=\"token function\">ping</span> 的次数\n<span class=\"token parameter variable\">-s</span> 字节：指定探测包的大小<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>例子：探测网段中的可用主机</strong><br>在 ping 命令中，可以使用<code>-b</code>选项，后面加入广播地址，探测整个网段。我们可以使用这个选<br>项知道整个网络中有多少主机是可以和我们通信的，而不用一个一个I 地址地进行探测。例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ping -b -c 3 192.168.103.255</span>\nWARNING: pinging broadcast address\nPING <span class=\"token number\">192.168</span>.103.255 （192.168.103.255<span class=\"token punctuation\">)</span> <span class=\"token number\">56</span><span class=\"token punctuation\">(</span><span class=\"token number\">84</span><span class=\"token punctuation\">)</span> bytes of data.\n<span class=\"token number\">64</span> bytes from <span class=\"token number\">192.168</span>.103.199: icmp <span class=\"token assign-left variable\">seq</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token assign-left variable\">tt1</span><span class=\"token operator\">=</span><span class=\"token number\">64</span> <span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span><span class=\"token number\">1.95</span> ms\n<span class=\"token number\">64</span> bytes from <span class=\"token number\">192.168</span>.103.168: <span class=\"token assign-left variable\">icmpseq</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token assign-left variable\">tt1</span><span class=\"token operator\">=</span><span class=\"token number\">64</span> <span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span><span class=\"token number\">1.97</span> ms <span class=\"token punctuation\">(</span>DUP<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">64</span> bytes from <span class=\"token number\">192.168</span>.103.252: icmp <span class=\"token assign-left variable\">seg</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token assign-left variable\">tt1</span><span class=\"token operator\">=</span><span class=\"token number\">64</span> <span class=\"token assign-left variable\">time</span><span class=\"token operator\">=</span><span class=\"token number\">2.29</span> mS\n<span class=\"token punctuation\">(</span>DUP<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span>\n…省略部分内容<span class=\"token punctuation\">..</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>探测192.168.103.0/24 网段中有多少可以通信的主机</p>\n<h3 id=\"4-netstat-命令\"><a href=\"#4-netstat-命令\" class=\"headerlink\" title=\"4.netstat 命令\"></a>4.netstat 命令</h3><p>netstat 是网络状态查看命令，既可以查看到本机开启的端口，也可以查看有哪些客户端连接。<br>在 Centos 7.x 中 netstat 命令默认没有安裝，如果需要使用，需要安装 net-snmp 和 net-tools 软件包。<br>netstat命令的基本信息如下。<br>⭕️命令名称：netstat。<br>⭕️英文原意：Print network connections, routing tables, interface statistics, masquerade connections,<br>and multicast memberships。<br>⭕️所在路径：/bin/netstat。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：输出网络连接、路由表、接口统计、伪装连接和组播成员。</p>\n<p>命令格式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat [选项]</span>\n选项：\n-a：列出所有网络状态，包括 Socket 程序\n<span class=\"token parameter variable\">-c</span> 秒数：指定每隔几秒刷新一次网络状态\n-n：使用IP 地址和端口号显示，不使用域名与服务名\n-p：显示 PID 和程序名\n-t：显示使用 TCP 协议端口的连接状况\n-u：显示使用 UDP 协议端口的连接状况\n-l：仅显示监听状态的连接\n-r：显示路由表<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>例子1：查看本机开启的端口<br>这是本机最常用的方式，使用选项<code>-tuln</code>。因为使用了<code>-1</code>选项，所以只能看到监听状态的<br>连接，而不能看到己经建立连接状态的连接。例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -tuln</span>\nActive Internet connections <span class=\"token punctuation\">(</span>only servers<span class=\"token punctuation\">)</span>\nProto    Recv-Q   Send-Q     Local Address        Foreign Address                  State\ntcp        <span class=\"token number\">0</span>      <span class=\"token number\">0</span>          <span class=\"token number\">0.0</span>.0.0:3306         <span class=\"token number\">0.0</span>.0.0:*                        LISTEN\ntcp        <span class=\"token number\">0</span>      <span class=\"token number\">0</span>          <span class=\"token number\">0.0</span>.0.0:11211        <span class=\"token number\">0.0</span>.0.0:*                        LISTEN\ntcp        <span class=\"token number\">0</span>      <span class=\"token number\">0</span>          <span class=\"token number\">0.0</span>.0.0.0:22         <span class=\"token number\">0.0</span>.0.0:*                        LISTEN\ntcp        <span class=\"token number\">0</span>      <span class=\"token number\">0</span>          :::11211             :::*                             LISTEN\ntcp        <span class=\"token number\">0</span>      <span class=\"token number\">0</span>          :::80                :::*                             LISTEN\ntcp        <span class=\"token number\">0</span>      <span class=\"token number\">0</span>          :::22                :::*                             LISTEN\nudp        <span class=\"token number\">0</span>      <span class=\"token number\">0</span>          <span class=\"token number\">0.0</span>.0.0:11211        <span class=\"token number\">0.0</span>.0.0:*\nudp        <span class=\"token number\">0</span>      <span class=\"token number\">0</span>          :::11211             :::*\n<span class=\"token comment\">#协议    接收队列 发送队列      本机的IP地址及端口号    远程主机的IP地址及端口号               状态</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这个命令的输出较多。</p>\n<ul>\n<li>Proto：网络连接的协议， 一般就是 TCP 协议或者 UDP 协议。</li>\n<li>Recv-Q：表示接收到的数据，已经在本地的缓冲中，但是还没有被进程取走。</li>\n<li>Send-Q：表示从本机发送，对方还没有收到的数据，依然在本地的缓冲中，一般是不具备ACK标志的数据包。</li>\n<li>Local Address： 本机的 IP 地址和端口号。</li>\n<li>Foreign Address：远程主机的 IP 地址和端口号。</li>\n<li>State：状态。常见的状态主要有以下几种。</li>\n<li>LISTEN: 监听状态，只有TCP 协议需要监听，而 UDP 协议不需要监听。</li>\n<li>ESTABLISHED：已经建立连接的状态。如果使用<code>-</code>选项，则看不到己经建立连接的状态。</li>\n<li>SYNSENT: SYN 发起包，就是主动发起连接的数据包。</li>\n<li>SYN RECV：接收到主动连接的数据包。</li>\n<li>FIN WAIT1：正在中断的连接。</li>\n<li>FIN WAIT2：已经中断的连接，但是正在等待对方主机进行确认。</li>\n<li>TIME WAIT：连接已经中断，但是套接字依然在网络中等待结束。</li>\n<li>CLOSED：套接字没有被使用。</li>\n</ul>\n<p>在这些状态中，我们最常用的就是 LISTEN 和 ESTABLISHED 状态，一种代表正在监听，另一种代表已经建立连接。</p>\n<p>例子2：查看本机有哪些程序开启的端口<br>如果使用<code>-p</code>选项，则可以查看到是哪个程序占用了端口，并且可以知道这个程序的 PID。例<br>如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -tulnp</span>\nActive Internet connections <span class=\"token punctuation\">(</span>only servers<span class=\"token punctuation\">)</span>\nProto   Recv-Q   Send-Q    Local Address   Foreign Address    State      PID/Program name\ntcp      <span class=\"token number\">0</span>          <span class=\"token number\">0</span>       <span class=\"token number\">0.0</span>.0.0:3306    <span class=\"token number\">0.0</span>.0.0:*        LISTEN      <span class=\"token number\">2359</span>/mysqld\ntcp      <span class=\"token number\">0</span>          <span class=\"token number\">0</span>       <span class=\"token number\">0.0</span>.0.0:11211   <span class=\"token number\">0.0</span>.0.0:*        LISTEN      <span class=\"token number\">1563</span>/memcached\ntcp      <span class=\"token number\">0</span>          <span class=\"token number\">0</span>       <span class=\"token number\">0.0</span>.0.0:22      <span class=\"token number\">0.0</span>.0.0:*        LISTEN      <span class=\"token number\">1490</span>/sshd\ntcp      <span class=\"token number\">0</span>          <span class=\"token number\">0</span>       :::11211        :::*             LISTEN      <span class=\"token number\">1563</span>/memcached\ntcp      <span class=\"token number\">0</span>          <span class=\"token number\">0</span>       :::80           :::*             LISTEN      <span class=\"token number\">21025</span>/httpd\ntcp      <span class=\"token number\">0</span>          <span class=\"token number\">0</span>       :::22           :::*             LISTEN      <span class=\"token number\">1490</span>/sshd\nudp      <span class=\"token number\">0</span>          <span class=\"token number\">0</span>       <span class=\"token number\">0.0</span>.0.0:11211   <span class=\"token number\">0.0</span>.0.0:*                    <span class=\"token number\">1563</span>/memcached\nudp      <span class=\"token number\">0</span>          <span class=\"token number\">0</span>       :::11211        :::*                         <span class=\"token number\">1563</span> / memcached\n<span class=\"token comment\">#比之前的命分多了一个\"-p\"选顶，结果多了\"PID/程序名\"，可以知道是哪个程序占用了端口</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>例子3：查看所有连接<br>使用选项<code>-an</code>可以查看所有连接，包括监听状态的连接(LISTEN）、己经建立连接状态的连接（ESTABLISHED)、Socket 程序连接等。因为连接较多，所以输出的内容有很多。例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -an</span>\nActive Internet connections <span class=\"token punctuation\">(</span>servers and established<span class=\"token punctuation\">)</span>\nProto     Recv-Q     Send-Q      Local Address           Foreign Address     State\ntcp       <span class=\"token number\">0</span>          <span class=\"token number\">0</span>           <span class=\"token number\">0.0</span>.0.0:3306            <span class=\"token number\">0.0</span>.0.0:*           LISTEN\ntcp       <span class=\"token number\">0</span>          <span class=\"token number\">0</span>           <span class=\"token number\">0.0</span>.0.0:11211           <span class=\"token number\">0.0</span>.0.0:*           LISTEN\ntcp       <span class=\"token number\">0</span>          <span class=\"token number\">0</span>           <span class=\"token number\">117.79</span>.130.170:80       <span class=\"token number\">78.46</span>.174.55:58815  SYN_RECV\ntcp       <span class=\"token number\">0</span>          <span class=\"token number\">0</span>           <span class=\"token number\">0.0</span>.0.0:22              <span class=\"token number\">0.0</span>.0.0:*           LISTEN\ntcp       <span class=\"token number\">0</span>          <span class=\"token number\">0</span>           <span class=\"token number\">117.79</span>.130.170:22       <span class=\"token number\">124.205</span>.129.99:10379 ESTABLISHED\ntcp       <span class=\"token number\">0</span>          <span class=\"token number\">0</span>           <span class=\"token number\">117.79</span>.130.170:22       <span class=\"token number\">124.205</span>.129.99:11811 FSTABLISHED\n…省略部分内容…\nudp       <span class=\"token number\">0</span>          <span class=\"token number\">0</span>           <span class=\"token number\">0.0</span>.0.0:11211           <span class=\"token number\">0.0</span>.0.0:*\nudp       <span class=\"token number\">0</span>          <span class=\"token number\">0</span>           <span class=\"token number\">0</span>:::11211               ::*\nActive UNIX doma <span class=\"token keyword\">in</span> sockets <span class=\"token punctuation\">(</span>servers and estab lished<span class=\"token punctuation\">)</span>\nProto RefCnt Flags Type  State     I-Node Path\nunix: <span class=\"token number\">2</span>    <span class=\"token punctuation\">[</span>ACC<span class=\"token punctuation\">]</span>  STREAM LISTENING <span class=\"token number\">9761</span>   @/var/run/hald/dbus-fr41wkQn1c\n…省略部分内容…<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从 “Active UNIX domain sockets” 开始，之后的内容就是 Socket 程序产生的连接，之前的内容都是网络服务产生的连接。我们可以在<code>-an</code>选项的输出中看到各种网络连接状态，而之前的<code>-tuln</code>选项则只能看到监听状态。</p>\n<h3 id=\"5-write-命令\"><a href=\"#5-write-命令\" class=\"headerlink\" title=\"5.write 命令\"></a>5.write 命令</h3><p>write 命令的基本信息如下。<br>⭕️命令名称：write。<br>⭕️英文原意：send a message to another user。<br>⭕️所在路径：/usr/bin/write。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：向其他用户发送信息。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\">#write user1 pts/1</span>\nhello\nI will be <span class=\"token keyword\">in</span> <span class=\"token number\">5</span> minutes to restart, please save your data\n<span class=\"token comment\">#向在pts/11远程终端1）登录的 user1 用户发送信息，使用\"ctr1+D\"快捷健保存发送的数据</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"6-wall-命令\"><a href=\"#6-wall-命令\" class=\"headerlink\" title=\"6.wall 命令\"></a>6.wall 命令</h3><p>write 命令用于给指定用户发送信息，而 wall 命会用于给所有登录用户发送信息，包括你自己。执行时，在 wall 命令后加入需要发送的信息即可，例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wa11 \"I will be in 5 minutes to restart, please save your data\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"7-mail-命令\"><a href=\"#7-mail-命令\" class=\"headerlink\" title=\"7.mail 命令\"></a>7.mail 命令</h3><p>mail 是 Linux 的邮件客户端命令，可以利用这个命令给其他用户发送邮件。mail 命令的基本信息如下。<br>⭕️命令名称：mail。<br>⭕️英文原意：send and receive Internet mail。<br>⭕️所在路径：/bin/mail。<br>⭕️执行权限：所有用户。<br>⭕️功能描述：发送和接收电子邮件。</p>\n<p>例子1：发送邮件<br>如果我们想要给其他用户发送邮件，则可以执行如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mail user1</span>\nSubject： hello    <span class=\"token operator\">&lt;</span>-邮件标题\nNice to meet you<span class=\"token operator\">!</span>  <span class=\"token operator\">&lt;</span>-邮件具体內容\n<span class=\"token builtin class-name\">.</span>                  <span class=\"token operator\">&lt;</span>-使用<span class=\"token string\">\".\"</span>来结束邮件输入\n<span class=\"token comment\">#发送邮件给 user1 用户</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我们接收到的邮件都保存在<code>/var/spool/mail/用户名</code>中，每个用户都有一个以自己的用户名命名的邮箱。<br>例子2：发送文件内容<br>如果我们想把某个文件的内容发送给指定用户，则可以执行如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mail -s \"test mail\" root ＜ /root/anaconda-ks.cfg</span>\n选项：\n-s：指定邮件标题\n<span class=\"token comment\">#把/root/anaconda-ks.cfg 文件的内容发送给 root 用户</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我们在写脚本时，有时需要脚本自动发送一些信息给指定用户，把要发送的信息预先写到文件中，是一个非常不错的选择。</p>\n<p>例子3：查看己经接收的邮件<br>我们可以直接在命令行中执行 mail 命令，进入 mail 的交互命令中， 可以在这里查看己经接收到<br>的邮件。例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mail</span>\nHeirloom Mail vers ion <span class=\"token number\">12.4</span> <span class=\"token number\">7</span>/29/08. Type ? <span class=\"token keyword\">for</span> help.\n<span class=\"token string\">\"/var/spool/mail/root\"</span>：1 message <span class=\"token number\">1</span> new\n<span class=\"token operator\">></span>N <span class=\"token number\">1</span> root Mon Dec <span class=\"token number\">5</span> <span class=\"token number\">22</span>:45 <span class=\"token number\">68</span>/1777 <span class=\"token string\">\"test mail\"</span>  <span class=\"token operator\">&lt;</span>-之前收到的邮件\n<span class=\"token operator\">></span>N <span class=\"token number\">2</span> root Mon Dec <span class=\"token number\">5</span> <span class=\"token number\">23</span>:08 <span class=\"token number\">18</span>/602  <span class=\"token string\">\"hello\"</span>\n<span class=\"token comment\">#未阅读 编号 发件人 时间 标题</span>\n<span class=\"token operator\">&amp;</span>                                   <span class=\"token operator\">&lt;</span>-等待用户输入命令<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看到己经接收到的邮件列表，“N”代表未读邮件，如果是己经阅读过的邮件，则前面是不会有这个”N”的；之后的数字是邮件的编号，我们主要通过这个编号来进行邮件的操作。如果我们想要查看第一封邮件，则只需输入邮件的编号“1”就可以了。<br>在交互命令中执行“？”，可以查看这个交互界面支持的命令。例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&amp;</span> ?         <span class=\"token operator\">&lt;</span>-输入命分\nmail commands\ntype<span class=\"token operator\">&lt;</span>message list<span class=\"token operator\">></span>     <span class=\"token builtin class-name\">type</span> messages\nnext   goto and <span class=\"token builtin class-name\">type</span> next message\nfrom<span class=\"token operator\">&lt;</span>message list<span class=\"token operator\">></span>    give <span class=\"token function\">head</span> lines of messages\nheaders       print out active message headers       \ndelete<span class=\"token operator\">&lt;</span>message 1ist<span class=\"token operator\">></span>     delete messages     \nundelete<span class=\"token operator\">&lt;</span>message 1ist<span class=\"token operator\">></span>   undelete mes sages\nsave<span class=\"token operator\">&lt;</span>message list<span class=\"token operator\">></span> folder   append messages to folder and mark as saved\ncopy<span class=\"token operator\">&lt;</span>message 1ist<span class=\"token operator\">></span> folder   append messages to folder without marking them\nwrite<span class=\"token operator\">&lt;</span>message 1ist<span class=\"token operator\">></span> <span class=\"token function\">file</span>    append mes sage texts to file, save attachments\npreserve<span class=\"token operator\">&lt;</span>message 1ist<span class=\"token operator\">></span>      keep incoming me ssages <span class=\"token keyword\">in</span> mailbox even <span class=\"token keyword\">if</span> saved\nReply <span class=\"token operator\">&lt;</span>message 1ist<span class=\"token operator\">></span>    reply to mes sage senders\nreply<span class=\"token operator\">&lt;</span>message 1ist<span class=\"token operator\">></span>     reply to message senders and all recipients\nmail addres ses         mail to specific recipients\n<span class=\"token function\">file</span> folder          change to another folder\nquit                 quit and apply changes to folder\nxit                  quit and discard changes made to folder\n<span class=\"token operator\">!</span>                   shell escape\ncd<span class=\"token operator\">&lt;</span>directory<span class=\"token operator\">></span>       chdir to directory or home <span class=\"token keyword\">if</span> none given\n1ist        1ist names of all availab le commands<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这些交互命令是可以简化输入的，比如“headers” 命令，就可以直接输入“h”，这是列出邮件标题列表的命令。我们解释一下常用的交互命令。</p>\n<ul>\n<li>headers：列出邮件标题列表，直接输入<code>h</code>命令即可。</li>\n<li>delete：删除指定邮件。比如想要删除第二封邮件，可以输入<code>d 2</code></li>\n<li>save：保存邮件。可以把指定邮件保存成文件，如<code>s2/tmpftest.mail</code></li>\n<li>quit：退出，并把己经操作过的邮件进行保存。比如移除已删除邮件、保存已阅读邮件等。</li>\n<li>exit：退出，但是不保存任何操作。</li>\n</ul>\n<h2 id=\"十一、系统痕迹命令\"><a href=\"#十一、系统痕迹命令\" class=\"headerlink\" title=\"十一、系统痕迹命令\"></a>十一、系统痕迹命令</h2><p>系统中有一些重要的痕迹日志文件，如<code>/var/log/wtmp</code>、 <code>/var/run/utmp</code>、 <code>/var/log/btmp</code>、<code>/var/log/lastlog</code> 等日志文件，如果你用 vim 打开这些文件，你会发现这些文件是二进制乱码。这是由于这些日志中保存的是系统的重要登录痕迹，包括某个用户何时登录了系统，何时退出了系统，错误登录等重要的系统信息。这些信息要是可以通过 vim 打开，就能编辑，这样痕迹信息就不准确，所以这些重要的痕迹日志，只能通过对应的命令来进行查看。</p>\n<h3 id=\"1-w命令\"><a href=\"#1-w命令\" class=\"headerlink\" title=\"1.w命令\"></a>1.w命令</h3><p>w命令是显示系统中正在登陆的用户信息的命令，这个命令查看的痕迹日志是/var/run/utmp。这个命令的基本信息如下：<br>⭕️命令名称：w<br>⭕️英文原意：Show who is logged on and what they are doing.<br>⭕️所在路径：/usr/bin/w<br>⭕️执行权限：所有用户。<br>⭕️功能描述：显示灯用户，和他正在做什么。<br>例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span> <span class=\"token comment\"># W</span>\n00:06:11 up <span class=\"token number\">5</span>:47， <span class=\"token number\">2</span> users,load average: <span class=\"token number\">0.00</span>, <span class=\"token number\">0.01</span>,0.05\n<span class=\"token comment\">#系统时间 持续开机时间 登陆用户 系统在1分钟，5分钟，15 分钟前的平均负载</span>\n<span class=\"token environment constant\">USER</span>   TTY   FROM   LOGIN@   IDLE    JCPU    PCPU WHAT\nroot   tty1  <span class=\"token number\">23</span>:59  <span class=\"token number\">7</span>:07     <span class=\"token number\">0</span>.08s   <span class=\"token number\">0</span>.08s <span class=\"token parameter variable\">-bash</span>\nroot   pts/2 <span class=\"token number\">192.168</span>.252.1 <span class=\"token number\">23</span>:42 <span class=\"token number\">3</span>.00s <span class=\"token number\">0</span>.44s <span class=\"token number\">0</span>.06s w<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>第一行信息，内容如下：</p>\n<table>\n<thead>\n<tr>\n<th>内容</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>12:26:46</td>\n<td>系统当前时间</td>\n</tr>\n<tr>\n<td>up 1 day, 13:32</td>\n<td>系统的运行时间，本机已经运行1天13小时32分钟</td>\n</tr>\n<tr>\n<td>2 users</td>\n<td>当前登录了两个用户</td>\n</tr>\n<tr>\n<td>load average: 0.00, 0.00, 0.00</td>\n<td>系统在之前1分钟、5分钟、15分钟的平均负载。如果 CPU 是单核的，则这个数值超过1 就是高负载;<br />如果 CPU 是四核的，则这个数值超过4就是高负载(这个平均负载完全是依据个人经验来进行判断的，一般认为不应该超过服务器 CPU的核数）</td>\n</tr>\n</tbody></table>\n<p>第二行信息，内容如下：</p>\n<table>\n<thead>\n<tr>\n<th>内容</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>USER</td>\n<td>当前登陆的用户</td>\n</tr>\n<tr>\n<td>TTY</td>\n<td>登陆的终端：<br />tty1-6：本地字符终端 (alt+F1-6切换）<br />tty7：本地图形终端 (ctrl+alt+F7 切换，必须安装启动图形界面）<br/>pts/0-255:远程终端</td>\n</tr>\n<tr>\n<td>FROM</td>\n<td>登陆的IP 地址，如果是本地终端，则是空</td>\n</tr>\n<tr>\n<td>LOGIN@</td>\n<td>登陆时间</td>\n</tr>\n<tr>\n<td>IDLE</td>\n<td>用户闲置时间</td>\n</tr>\n<tr>\n<td>JCPU</td>\n<td>所有的进程占用的 CPU 时间</td>\n</tr>\n<tr>\n<td>PCPU</td>\n<td>当前进程占用的 CPU时间</td>\n</tr>\n<tr>\n<td>WHAT</td>\n<td>用户正在进行的操作</td>\n</tr>\n</tbody></table>\n<h3 id=\"2-who-命令\"><a href=\"#2-who-命令\" class=\"headerlink\" title=\"2.who 命令\"></a>2.who 命令</h3><p>who 命令和 w 命令类似，用于查看正在登陆的用户，但是显示的内容更加简单，也是查看<code>/var/run/utmp</code>日志。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># who</span>\nroot  tty1  <span class=\"token number\">2022</span>-11-12 <span class=\"token number\">23</span>:59\nroot  pts/2 <span class=\"token number\">2022</span>-11-12 <span class=\"token number\">23</span>:42（192.168.252.1<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#用户名 登陆终端  登陆时间（来源 IP)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"3-last-命令\"><a href=\"#3-last-命令\" class=\"headerlink\" title=\"3. last 命令\"></a>3. last 命令</h3><p>  last 命令是查看系统所有登陆过的用户信息的，包括正在登陆的用户和之前登陆的用户。这个命令查看的是<code>/var/log/wtmp</code> 痕迹日志文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># last</span>\nroot   ttyl                  Mon Nov <span class=\"token number\">12</span> <span class=\"token number\">23</span>:59        still logged <span class=\"token keyword\">in</span>\nroot   pts/2  <span class=\"token number\">192.168</span>.252.1  Mon Nov <span class=\"token number\">12</span> <span class=\"token number\">23</span>:42        still logged <span class=\"token keyword\">in</span>\nroot   pts/1  <span class=\"token number\">192.168</span>.252.1  Mon Nov <span class=\"token number\">12</span> <span class=\"token number\">23</span>:37-23:59  <span class=\"token punctuation\">(</span>00:22<span class=\"token punctuation\">)</span>\nroot   ttyl                  Mon Nov <span class=\"token number\">12</span> <span class=\"token number\">19</span>:17-23:58  <span class=\"token punctuation\">(</span>04:41<span class=\"token punctuation\">)</span>\nroot   pts/0  <span class=\"token number\">192.168</span>.252.1  Mon Nov <span class=\"token number\">12</span> <span class=\"token number\">18</span>:20-23:52  <span class=\"token punctuation\">(</span>05:32<span class=\"token punctuation\">)</span>\n<span class=\"token function\">reboot</span> system boot <span class=\"token number\">3.10</span>.0-862.e17.x Mon Nov <span class=\"token number\">12</span> <span class=\"token number\">18</span>:18-00:22 <span class=\"token punctuation\">(</span>06:03）\n<span class=\"token comment\">#系统重启信息记录</span>\nroot   pts/1  <span class=\"token number\">192.168</span>.252.1  Mon Nov <span class=\"token number\">12</span> 08:48-down   <span class=\"token punctuation\">(</span>01:29<span class=\"token punctuation\">)</span>\nroot   pts/1  <span class=\"token number\">192.168</span>.252.1  Thu Nov  <span class=\"token number\">8</span> <span class=\"token number\">21</span>:04-22:29  <span class=\"token punctuation\">(</span>01:25<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#用户名 终端号  来源IP地址      登陆时间     -  退出时间</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-lastlog-命令\"><a href=\"#4-lastlog-命令\" class=\"headerlink\" title=\"4.lastlog 命令\"></a>4.lastlog 命令</h3><p>lastlog 命令是查看系统中所有用户最后一次的登陆时间的命令，他查看的日志是<code>/var/log/lastlog</code>文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lastlog</span>\nUsername    Port    From    Latest  \nroot        tty1            Mon Nov <span class=\"token number\">12</span> <span class=\"token number\">23</span>:59:03 +0800 <span class=\"token number\">2018</span>\nbin                         **Never 1ogged in**\ndaemon                      **Never 1ogged in**\nadm                         **Never logged in**\n1p                          ** Never 1ogged in**\n<span class=\"token function\">sync</span>                        **Never logged in**\n<span class=\"token punctuation\">..</span>.省略部分内容<span class=\"token punctuation\">..</span>.\n<span class=\"token comment\">#用户名       终端    来源IP    登陆时间</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"5-lastb-命令\"><a href=\"#5-lastb-命令\" class=\"headerlink\" title=\"5.lastb 命令\"></a>5.lastb 命令</h3><p>lastb 命令是查看错误登陆的信息的，查看的是<code>/var/log/btmp</code>痕迹日志：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lastb</span>\n<span class=\"token punctuation\">(</span>unknown tty1 Mon Nov <span class=\"token number\">12</span> <span class=\"token number\">23</span>:58 - <span class=\"token number\">23</span>:58 <span class=\"token punctuation\">(</span>00:00）\nroot  ttyl  Mon Nov <span class=\"token number\">12</span> <span class=\"token number\">23</span>:58 - <span class=\"token number\">23</span>:58  <span class=\"token punctuation\">(</span>00:00<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#错误登陆用户 终端  尝试登陆的时间</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"十二、挂载命令\"><a href=\"#十二、挂载命令\" class=\"headerlink\" title=\"十二、挂载命令\"></a>十二、挂载命令</h2><h3 id=\"1-mount-命令基本格式\"><a href=\"#1-mount-命令基本格式\" class=\"headerlink\" title=\"1.mount 命令基本格式\"></a>1.mount 命令基本格式</h3><p>linux 所有存储设备都必须挂载使用，包括硬盘<br>⭕️命令名称：mount<br>⭕️命令所在路径：/bin/mount<br>⭕️执行权限：所有用户<br>命令的具体格式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mount [-1]</span>\n<span class=\"token comment\">#查询系统中己经挂我的设备，-1会品示卷标名称</span>\n<span class=\"token punctuation\">[</span>root@localhost <span class=\"token punctuation\">]</span><span class=\"token comment\"># mount -a</span>\n<span class=\"token comment\">#依据配置文件/ete/fstab的內容，自动挂载</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mount [-t 文件系统] [-L 卷标名] [-o 特殊选项]  \\</span>\n设备文件名 挂载点\n<span class=\"token comment\">#\\代表这一行没有写完，换行</span>\n选项：\n  <span class=\"token parameter variable\">-t</span> 文件系统：加入文件系统类型来指定挂载的类型，可以 ext3、 ext4、 iso9660\n             等文件系统。\n  <span class=\"token parameter variable\">-L</span> 卷标名： 挂载指定卷标的分区，而不是安装设备文件名挂载\n  <span class=\"token parameter variable\">-o</span> 特殊选项：可以指定挂载的额外选项，比如读写权限、同步异步等，如果不指定则默认值生效。具体的特殊选项<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>atime/noatime</td>\n<td>更新访问时间/不更新访问时间。访问分区文件时，是否更新文件的访问时间，默认为更新</td>\n</tr>\n<tr>\n<td>async/sync</td>\n<td>异步/同步，默认为异步</td>\n</tr>\n<tr>\n<td>auto/ noauto</td>\n<td>自动/手动，mount -a 命令执行时，是否会自动安裝/etc/fstab 文件内容挂载，默认为自动</td>\n</tr>\n<tr>\n<td>defaults</td>\n<td>定义默认值，相当于 Iw, suid, dev, exec, auto, nouser, async 这七个选项</td>\n</tr>\n<tr>\n<td>exec/ noexec</td>\n<td>执行/不执行，设定是否允许在文件系统中执行可执行文件，默认是 exec允许</td>\n</tr>\n<tr>\n<td>remount</td>\n<td>重新挂载已经挂载的文件系统，一般用于指定修改特殊权限</td>\n</tr>\n<tr>\n<td>rw/ro</td>\n<td>读写/只读，文件系统挂载时，是否具有读写权限，默认是 rw</td>\n</tr>\n<tr>\n<td>suid/ nosuid</td>\n<td>具有/不具有 SUID 权限，设定文件系统是否具有 SUID 和SGID 的权限，默认是具有</td>\n</tr>\n<tr>\n<td>user/nouser</td>\n<td>允许/不允许普通用户挂载，设定文件系统是否允许普通用户挂载，默认是不允许，只有 root 可以挂载分区</td>\n</tr>\n<tr>\n<td>usrquota</td>\n<td>写入代表文件系统支持用户磁盘配额，默认不支持</td>\n</tr>\n<tr>\n<td>grpquota</td>\n<td>写入代表文件系统支持组磁盘配额，默认不支持</td>\n</tr>\n</tbody></table>\n<p>举例<br>例1：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mount</span>\n<span class=\"token comment\">#查看系统中己经挂载的文件系统，注意有虚拟文件系统</span>\n/dev/sda3 on / <span class=\"token builtin class-name\">type</span> ext4 <span class=\"token punctuation\">(</span>rw<span class=\"token punctuation\">)</span>\nproc on /proc <span class=\"token builtin class-name\">type</span> proc <span class=\"token punctuation\">(</span>rw<span class=\"token punctuation\">)</span>\nsysfs on /sys <span class=\"token builtin class-name\">type</span> sysfs <span class=\"token punctuation\">(</span>rw<span class=\"token punctuation\">)</span>\ndevpts on / dev/pts <span class=\"token builtin class-name\">type</span> devpts <span class=\"token punctuation\">(</span>rw, <span class=\"token assign-left variable\">gid</span><span class=\"token operator\">=</span><span class=\"token number\">5</span>, <span class=\"token assign-left variable\">mode</span><span class=\"token operator\">=</span><span class=\"token number\">620</span><span class=\"token punctuation\">)</span>\ntmpfs on /dev/shm <span class=\"token builtin class-name\">type</span> tmpfs <span class=\"token punctuation\">(</span>rw<span class=\"token punctuation\">)</span>\n/dev/sdal on /boot <span class=\"token builtin class-name\">type</span> ext4 <span class=\"token punctuation\">(</span>rw<span class=\"token punctuation\">)</span>\nnone on /proc/ sys/fs/binfnt_mise <span class=\"token builtin class-name\">type</span> binfmt_mise <span class=\"token punctuation\">(</span>rw<span class=\"token punctuation\">)</span>\nsunrpe on /var/lib/nfs/rpe_pipefs <span class=\"token builtin class-name\">type</span> rpe_pipefs <span class=\"token punctuation\">(</span>rw<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#命公结果是代表：/der/sda3 分区挂载到/目录， 文件系统是 ext4，权限是读写</span>\n例2：修改特殊权限\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mount</span>\n<span class=\"token comment\">#我们查看到/boot 分区己经被佳我，而且采用的 defaul ts 选项，那么我们重新挂我分区，并采用 noexec</span>\n<span class=\"token comment\">#权限禁止执行文件执行，看看会出现什么情况（注意不要用/分区做试验，#不然系统命令也不能执行了）。</span>\n<span class=\"token punctuation\">..</span>.省略部分输出<span class=\"token punctuation\">..</span>.\n/dev/sdal on /boot <span class=\"token builtin class-name\">type</span> ext4 <span class=\"token punctuation\">(</span>rw<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">..</span>.省略部分输出<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mount -o remount, noexec /boot</span>\n<span class=\"token comment\">#重新挂载 /boot 分区，并使用 noexec 权限</span>\n<span class=\"token punctuation\">[</span>root@localhost sh<span class=\"token punctuation\">]</span> <span class=\"token comment\"># cd /boot/</span>\n<span class=\"token punctuation\">[</span>root@localhost boot<span class=\"token punctuation\">]</span><span class=\"token comment\"># vi hello.sh</span>\n<span class=\"token comment\">#写个shell吧</span>\n<span class=\"token comment\">#!/bin/bash</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hello!!\"</span>\n<span class=\"token punctuation\">[</span>root@localhost boot<span class=\"token punctuation\">]</span><span class=\"token comment\"># chmod 755 hello.sh</span>\n<span class=\"token punctuation\">[</span>root@localhost boot<span class=\"token punctuation\">]</span><span class=\"token comment\"># ./hello.sh</span>\n-bash: ./hello.sh：权限不够\n<span class=\"token comment\">#虽然赋子了 hello.sh 执行权限，但是任然无法执行</span>\n<span class=\"token punctuation\">[</span>root@localhost boot<span class=\"token punctuation\">]</span><span class=\"token comment\"># mount -o remount, exec /boot</span>\n<span class=\"token comment\">#记得改回来啊，要不会影啊系统启动的</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果我们做试验修改了特殊选项，一定要记得住，而且确定需要修改，否则非常容易出现系统问题，而且还找不到哪里出现了问题。<br>例3： 挂载分区</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mkdir /mnt/disk1</span>\n<span class=\"token comment\">#建立挂载点目录</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mount /dev/sdb1 /mnt/disk1</span>\n<span class=\"token comment\">#挂载分区</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"2-光盘挂载\"><a href=\"#2-光盘挂载\" class=\"headerlink\" title=\"2.光盘挂载\"></a>2.光盘挂载</h3><p>光盘挂载的前提依然是指定光盘的设备文件名，不同版本的 Linux，设备文件名并不相同：<br>Centos 5.x 以前的系统，光盘设备文件名是<code>/dev/hdc</code><br>Centos 6.x 以后的系统，光盘设备文件名是<code>/dev/sr0</code><br>不论哪个系统都有软连接/dev/cdrom，与可以作为光盘的设备文件名</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mount -t iso9660 /dev/cdrom /mnt/cdrom/</span>\n<span class=\"token comment\">#挂载光盘</span>\n用完之后记得卸载：\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># umount /dev/sr0</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># umount /mnt/cdrom</span>\n<span class=\"token comment\">#因为设备文件名和挂载点已经连接到一起，卸载哪一个都可以</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>注意：卸载的时候需要退出光盘目录，才能正常卸载</p>\n<h3 id=\"3-挂载U盘\"><a href=\"#3-挂载U盘\" class=\"headerlink\" title=\"3.挂载U盘\"></a>3.挂载U盘</h3><p>U盘会和硬盘共用设备文件名，所以U盘的设备文件名不是固定的，需要手工查询，查询命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># fdisk</span>\n<span class=\"token comment\">#查询硬盘</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>然后就是挂载了，挂载命令如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mount -t vfat /dev/sdb1 /mnt/usb/</span>\n<span class=\"token comment\">#挂载u盘。因为是 Windows 分区，所以是 vfat 文件系统格式</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>如果U盘中有中文，会发现中文是乱码。Linux 要想正常显示中文，需要两个条件：<br>1.安装了中文编码和中文字体<br>2.操作终端需要支持中文显示（纯字符终端，是不支持中文编码的）<br>而我们当前系统是安装了中文编码和字体，而 xshell 远程终端是 Windows 下的程序，当然是支持中文显示的。那之所以挂载 U盘还出现乱码，是需要在挂载的时候，手工指定中文编码，例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mount -t vfat -o iocharset=utf8 /dev/sdb1 /mnt/usb/</span>\n<span class=\"token comment\">#挂载口盘，指定中文编码格式为UTF-8</span>\n<span class=\"token comment\">#如果需要卸载，可以执行以下命令：</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># umount /mnt/usb/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-挂载-NTFS-分区\"><a href=\"#4-挂载-NTFS-分区\" class=\"headerlink\" title=\"4.挂载 NTFS 分区\"></a>4.挂载 NTFS 分区</h3><h4 id=\"4-1-Linux-的驱动加载顺序：\"><a href=\"#4-1-Linux-的驱动加载顺序：\" class=\"headerlink\" title=\"4.1 Linux 的驱动加载顺序：\"></a>4.1 Linux 的驱动加载顺序：</h4><ul>\n<li>驱动直接放入系统内核之中。这种驱动主要是系统启动加载必须的驱动，数量较少。</li>\n<li>驱动以模块的形式放入硬盘。大多数驱动都已这种方式保存，保存位置在/ib/modules/3.10.0-862.el7.x86_64/kernel/中。</li>\n<li>驱动可以被 Linux 识别，但是系统认为这种驱动一般不常用，默认不加载。如果需要加载这种驱动，需要重新编译内核，而 NTFS 文件系统的驱动就属于这种情况。</li>\n<li>硬件不能被 Linux 内核识别，需要手工安装驱动。当然前提是厂商提供了该硬件针对 Linux的驱动，否则就需要自己开发驱动了。</li>\n</ul>\n<h4 id=\"4-2-使用-NTFS-3G-安装-NTFS-文件系统模块\"><a href=\"#4-2-使用-NTFS-3G-安装-NTFS-文件系统模块\" class=\"headerlink\" title=\"4.2 使用 NTFS-3G 安装 NTFS 文件系统模块\"></a>4.2 使用 NTFS-3G 安装 NTFS 文件系统模块</h4><ul>\n<li>下载 NTFS-3G 插件<br>我们从网站 <a href=\"http://www.tuxera.com/community/ntfs-3g-download/\">http://www.tuxera.com/community/ntfs-3g-download/</a> 下载 NTFS-3G 插件到 Linux服务器上。</li>\n<li>安装 NTFS-3G 插件<br>在编译安裝 NTFS-3G 插件之前，要保证 gcc编译器已经安裝。具体安装命令如下：<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar -zxvf ntfs-3g_ntfsprogs-2013.1.13.tgz</span>\n<span class=\"token comment\">#解压</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd ntfs-3g_ntfsprogs-2013.1.13</span>\n<span class=\"token comment\">#进入解压目录</span>\n<span class=\"token punctuation\">[</span>root@localhost ntfs-3g_ntfsprogs-2013.1.13<span class=\"token punctuation\">]</span><span class=\"token comment\"># ./configure</span>\n<span class=\"token comment\">#编译器准备。没有指定安装目录，安装到默认位置中</span>\n<span class=\"token punctuation\">[</span>root@localhost ntfs-3g_ntfsprog s-2013.1.13<span class=\"token punctuation\">]</span><span class=\"token comment\"># make</span>\n<span class=\"token comment\">#编译</span>\n<span class=\"token punctuation\">[</span>root@localhost ntfs-3g_ntfsprogS-2013.1.13<span class=\"token punctuation\">]</span><span class=\"token comment\"># make install</span>\n<span class=\"token comment\">#编译安装</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n安装就完成了，已经可以挂载和使用 Windows 的 NTFS 分区了。不过需要注意挂载分区时的文件系统不是 ntfs，而是 ntfs-3g。挂载命令如下：<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mount -t ntfs-3g 分区设备文件名挂载点</span>\n例如：\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># mount -t ntfs-3g /dev/sdb1 / mnt/win</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n","feature":true,"text":"第一章：Linux常用命令一、命令的基本格式1. 命令的提示符[root@localhost ~]# []：这是提示符的分隔符号，没有特殊含义。 root：显示的是当前的登录用户，现在使用的是 root 用户登录。 @：分隔符号，没有特殊含义。 localhost： 当前系统的简...","link":"","photos":[],"count_time":{"symbolsCount":"37k","symbolsTime":"34 mins."},"categories":[{"name":"Linux","slug":"Linux","count":4,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":4,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9ALinux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">第一章：Linux常用命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">一、命令的基本格式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%91%BD%E4%BB%A4%E7%9A%84%E6%8F%90%E7%A4%BA%E7%AC%A6\"><span class=\"toc-text\">1. 命令的提示符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">2. 命令的基本格式</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E7%9B%AE%E5%BD%95%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">二、目录操作命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-ls%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">1. ls命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-cd-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2. cd 命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-cd%E5%91%BD%E4%BB%A4%E7%9A%84%E7%AE%80%E5%8C%96%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">2.1 cd命令的简化用法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%92%8C%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">2.2 绝对路径和相对路径</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-pwd%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">3.pwd命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-mkdir%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">4.mkdir命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-rmdir%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">5. rmdir命令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">三、文件操作命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-touch-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">1.touch 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-stat-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2.stat 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-cat-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">3.cat 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-more-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">4.more 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-less-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">5.less 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-head-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">6. head 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-tail-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">7.tail 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-In-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">8.In 命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-1-ln%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">8.1 ln命令的基本格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-2-%E7%A1%AC%E9%93%BE%E6%8E%A5%E4%B8%8E%E8%BD%AF%E8%BF%9E%E6%8E%A5%E7%9A%84%E7%89%B9%E5%BE%81\"><span class=\"toc-text\">8.2 硬链接与软连接的特征</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E7%9B%AE%E5%BD%95%E5%92%8C%E6%96%87%E4%BB%B6%E9%83%BD%E8%83%BD%E6%93%8D%E4%BD%9C%E7%9A%84%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">四、目录和文件都能操作的命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-rm-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">1.rm 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-cp-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2.cp 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-mv%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">3.mv命令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E5%9F%BA%E6%9C%AC%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">五、基本权限管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%9D%83%E9%99%90%E7%9A%84%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">1.权限的介绍</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%9F%BA%E6%9C%AC%E6%9D%83%E9%99%90%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2.基本权限命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-%E5%91%BD%E4%BB%A4%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">2.1 命令格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-%E6%9D%83%E9%99%90%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">2.2 权限模式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-%E6%95%B0%E5%AD%97%E6%9D%83%E9%99%90\"><span class=\"toc-text\">2.3 数字权限</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-4-%E5%B8%B8%E7%94%A8%E6%9D%83%E9%99%90\"><span class=\"toc-text\">2.4 常用权限</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%9F%BA%E6%9C%AC%E6%9D%83%E9%99%90%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">3.基本权限的作用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-%E6%9D%83%E9%99%90%E5%90%AB%E4%B9%89%E7%9A%84%E8%A7%A3%E9%87%8A\"><span class=\"toc-text\">3.1 权限含义的解释</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-%E7%9B%AE%E5%BD%95%E7%9A%84%E5%8F%AF%E7%94%A8%E6%9D%83%E9%99%90\"><span class=\"toc-text\">3.2 目录的可用权限</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E6%89%80%E6%9C%89%E8%80%85%E5%92%8C%E6%89%80%E5%B1%9E%E7%BB%84%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">4.所有者和所属组命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-1-chown-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">4.1 chown 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-chgrp-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">4.2 chgrp 命令</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-umask-%E9%BB%98%E8%AE%A4%E6%9D%83%E9%99%90\"><span class=\"toc-text\">5.umask 默认权限</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-1-%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E7%9A%84-umask-%E6%9D%83%E9%99%90\"><span class=\"toc-text\">5.1 查看系统的 umask 权限</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-2-umask-%E6%9D%83%E9%99%90%E7%9A%84%E8%AE%A1%E7%AE%97%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">5.2 umask 权限的计算方法</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81%E5%B8%AE%E5%8A%A9%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">六、帮助命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-man-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">1.man 命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-1%E5%91%BD%E4%BB%A4%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">1.1命令格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-man%E5%91%BD%E4%BB%A4%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE\"><span class=\"toc-text\">1.2 man命令的快捷键</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-3-man%E5%91%BD%E4%BB%A4%E7%9A%84%E5%B8%AE%E5%8A%A9%E7%BA%A7%E5%88%AB\"><span class=\"toc-text\">1.3 man命令的帮助级别</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-info-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2.info 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-help-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">3.help 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-help-%E9%80%89%E9%A1%B9\"><span class=\"toc-text\">4.- -help 选项</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%83%E3%80%81%E6%90%9C%E7%B4%A2%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">七、搜索命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-whereis-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">1.whereis 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-which-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2.which 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-locate-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">3.locate 命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">3.1基本用法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">3.2 配置文件</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-find-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">4.find 命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-1-%E6%8C%89%E7%85%A7%E6%96%87%E4%BB%B6%E5%90%8D%E6%90%9C%E7%B4%A2\"><span class=\"toc-text\">4.1 按照文件名搜索</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-%E6%8C%89%E7%85%A7%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F%E6%90%9C%E7%B4%A2\"><span class=\"toc-text\">4.2. 按照文件大小搜索</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-3-%E6%8C%89%E7%85%A7%E4%BF%AE%E6%94%B9%E6%97%B6%E9%97%B4%E6%90%9C%E7%B4%A2\"><span class=\"toc-text\">4.3 按照修改时间搜索</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-4-%E6%8C%89%E7%85%A7%E6%9D%83%E9%99%90%E6%90%9C%E7%B4%A2\"><span class=\"toc-text\">4.4 按照权限搜索</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-5-%E6%8C%89%E7%85%A7%E6%89%80%E6%9C%89%E8%80%85%E5%92%8C%E6%89%80%E5%B1%9E%E7%BB%84%E6%90%9C%E7%B4%A2\"><span class=\"toc-text\">4.5 按照所有者和所属组搜索</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-6-%E6%8C%89%E7%85%A7%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E6%90%9C%E7%B4%A2\"><span class=\"toc-text\">4.6 按照文件类型搜索</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-7-%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">4.7 逻辑运算符</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-8-%E5%85%B6%E4%BB%96%E9%80%89%E9%A1%B9\"><span class=\"toc-text\">4.8 其他选项</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-grep-%E5%91%BD%E4%BB%A4%EF%BC%9A%E8%A1%A5%E5%85%85%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">5.grep 命令：补充命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E7%AE%A1%E9%81%93%E7%AC%A6%EF%BC%9A%E8%A1%A5%E5%85%85%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">6.管道符：补充命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-%E5%91%BD%E4%BB%A4%E7%9A%84%E5%88%AB%E5%90%8D%EF%BC%9A%E8%A1%A5%E5%85%85%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">7.命令的别名：补充命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%EF%BC%9A%E8%A1%A5%E5%85%85%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">8.常用快捷键：补充命令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AB%E3%80%81%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">八、压缩和解压缩命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E2%80%9C-zip%E2%80%9D%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">1.“.zip”格式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-1-%E2%80%9C-zip%E2%80%9D%E6%A0%BC%E5%BC%8F%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">1.1. “.zip”格式的压缩命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-%E2%80%9C-zip%E2%80%9D%E6%A0%BC%E5%BC%8F%E7%9A%84%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">1.2 “.zip”格式的解压缩命令</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E2%80%9C-g2%E2%80%9D%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">2.“.g2”格式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-%E2%80%9Cgz%E2%80%9D%E6%A0%BC%E5%BC%8F%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2.1 “gz”格式的压缩命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-%E2%80%9C-gz%E2%80%9D%E6%A0%BC%E5%BC%8F%E7%9A%84%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2.2.“.gz”格式的解压缩命令</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E2%80%9C-bz2%E2%80%9D%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">3.“.bz2”格式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-%E2%80%9C-bz2%E2%80%9D%E6%A0%BC%E5%BC%8F%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">3.1 “.bz2”格式的压缩命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-%E2%80%9C-bz2%E2%80%9D%E6%A0%BC%E5%BC%8F%E7%9A%84%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">3.2 “.bz2”格式的解压缩命令</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E2%80%9C-tar%E2%80%9D%E6%A0%BC%E5%BC%8F%EF%BC%88%E6%89%93%E5%8C%85%E4%B8%8D%E4%BC%9A%E5%8E%8B%E7%BC%A9%EF%BC%89\"><span class=\"toc-text\">4.“.tar”格式（打包不会压缩）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-1-%E2%80%9C-tar%E2%80%9D%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%89%93%E5%8C%85%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">4.1 “.tar”格式的打包命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-%E2%80%9C-tar%E2%80%9D%E6%A0%BC%E5%BC%8F%E7%9A%84%E8%A7%A3%E6%89%93%E5%8C%85%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">4.2 “.tar”格式的解打包命令</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E2%80%9C-tar-gz%E2%80%9D-%E5%92%8C%E2%80%9C-tar-bz2%E2%80%9D%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">5.“.tar.gz” 和“.tar.bz2”格式</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B9%9D%E3%80%81%E5%85%B3%E6%9C%BA%E5%92%8C%E9%87%8D%E5%90%AF%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">九、关机和重启命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-sync-%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5\"><span class=\"toc-text\">1.sync 数据同步</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-shutdown-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2.shutdown 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-reboot-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">3.reboot 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-halt-%E5%92%8C-poweroff-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">4.halt 和 poweroff 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-init-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">5.init 命令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%81%E3%80%81%E5%B8%B8%E7%94%A8%E7%BD%91%E7%BB%9C%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">十、常用网络命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E9%85%8D%E7%BD%AEIP%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">1.配置IP地址</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-1-%E9%85%8D%E7%BD%AEIP%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">1.1 配置IP地址</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-%E9%87%8D%E5%90%AF%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">1.2 重启网络服务</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-3-%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%9C%80%E8%A6%81%E6%A1%A5%E6%8E%A5%E5%88%B0%E6%9C%89%E7%BA%BF%E7%BD%91%E5%8D%A1%EF%BC%8C%E5%B9%B6%E9%87%8D%E5%90%AF%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">1.3 虚拟机需要桥接到有线网卡，并重启网络服务</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-4-%E5%A4%8D%E5%88%B6%E9%95%9C%E5%83%8F%E6%9C%89%E5%8F%AF%E8%83%BD%E9%9C%80%E8%A6%81%E9%87%8D%E7%BD%AE-UUID%EF%BC%88%E5%94%AF%E4%B8%80%E8%AF%86%E5%88%AB%E7%AC%A6%EF%BC%89\"><span class=\"toc-text\">1.4 复制镜像有可能需要重置 UUID（唯一识别符）</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-ifconfig-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2.ifconfig 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-ping-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">3.ping 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-netstat-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">4.netstat 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-write-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">5.write 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-wall-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">6.wall 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-mail-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">7.mail 命令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%81%E4%B8%80%E3%80%81%E7%B3%BB%E7%BB%9F%E7%97%95%E8%BF%B9%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">十一、系统痕迹命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-w%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">1.w命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-who-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2.who 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-last-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">3. last 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-lastlog-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">4.lastlog 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-lastb-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">5.lastb 命令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%81%E4%BA%8C%E3%80%81%E6%8C%82%E8%BD%BD%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">十二、挂载命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-mount-%E5%91%BD%E4%BB%A4%E5%9F%BA%E6%9C%AC%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">1.mount 命令基本格式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%85%89%E7%9B%98%E6%8C%82%E8%BD%BD\"><span class=\"toc-text\">2.光盘挂载</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%8C%82%E8%BD%BDU%E7%9B%98\"><span class=\"toc-text\">3.挂载U盘</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E6%8C%82%E8%BD%BD-NTFS-%E5%88%86%E5%8C%BA\"><span class=\"toc-text\">4.挂载 NTFS 分区</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-1-Linux-%E7%9A%84%E9%A9%B1%E5%8A%A8%E5%8A%A0%E8%BD%BD%E9%A1%BA%E5%BA%8F%EF%BC%9A\"><span class=\"toc-text\">4.1 Linux 的驱动加载顺序：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-%E4%BD%BF%E7%94%A8-NTFS-3G-%E5%AE%89%E8%A3%85-NTFS-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">4.2 使用 NTFS-3G 安装 NTFS 文件系统模块</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"YimooRua","slug":"blog-author","avatar":"/static/img/avator.gif","link":"/","description":"这是一个知识分享博客🎉，有什么建议请留言。欢迎探讨技术😁。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/static/img/svg/bilibili-line.svg","link":"https://space.bilibili.com/242073282"},"github":{"icon":"/static/img/svg/github.svg","link":"https://github.com/YimooR"},"csdn":{"icon":"/static/img/svg/csdn.svg","link":"https://blog.csdn.net/weixin_43143863?spm=1000.2115.3001.5343"},"qq":{"icon":"/static/img/svg/qq.svg","link":"https://user.qzone.qq.com/1035605573"}}}},"mapped":true,"prev_post":{"title":"回文数","uid":"c3659a2e604acbd60b38edfe2c810249","slug":"Others/leetcode-回文数","date":"2022-11-18T09:00:00.000Z","updated":"2022-11-18T05:00:00.000Z","comments":true,"path":"api/articles/Others/leetcode-回文数.json","keywords":null,"cover":"https://yimoorua-img.oss-cn-chengdu.aliyuncs.com/images/d8661dfd2750b54f08060e917d95031ed81a85ce.png","text":"回文数⭐️难度：简单 给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。 回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。 例如，121 是回文，而 123 不是。 示例 1： 输入：x &#x3D; 121 输出：true 示...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Others","slug":"Others","count":2,"path":"api/categories/Others.json"}],"tags":[{"name":"Others","slug":"Others","count":2,"path":"api/tags/Others.json"}],"author":{"name":"YimooRua","slug":"blog-author","avatar":"/static/img/avator.gif","link":"/","description":"这是一个知识分享博客🎉，有什么建议请留言。欢迎探讨技术😁。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/static/img/svg/bilibili-line.svg","link":"https://space.bilibili.com/242073282"},"github":{"icon":"/static/img/svg/github.svg","link":"https://github.com/YimooR"},"csdn":{"icon":"/static/img/svg/csdn.svg","link":"https://blog.csdn.net/weixin_43143863?spm=1000.2115.3001.5343"},"qq":{"icon":"/static/img/svg/qq.svg","link":"https://user.qzone.qq.com/1035605573"}}}},"feature":false},"next_post":{"title":"两数之和","uid":"5d27f50fa4c0422c709b72db5e188a60","slug":"Others/leetcode-两数之和","date":"2022-11-17T09:00:00.000Z","updated":"2022-11-18T05:00:00.000Z","comments":true,"path":"api/articles/Others/leetcode-两数之和.json","keywords":null,"cover":"https://yimoorua-img.oss-cn-chengdu.aliyuncs.com/images/2afeb53d394cd30f1a6fc4be06ba971e772e8a66.png","text":"两数之和⭐️难度：简单 给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那 两个 整数，并返回它们的数组下标。你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。你可以按任意顺序返回答案。 示例...","link":"","photos":[],"count_time":{"symbolsCount":933,"symbolsTime":"1 mins."},"categories":[{"name":"Others","slug":"Others","count":2,"path":"api/categories/Others.json"}],"tags":[{"name":"Others","slug":"Others","count":2,"path":"api/tags/Others.json"}],"author":{"name":"YimooRua","slug":"blog-author","avatar":"/static/img/avator.gif","link":"/","description":"这是一个知识分享博客🎉，有什么建议请留言。欢迎探讨技术😁。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/static/img/svg/bilibili-line.svg","link":"https://space.bilibili.com/242073282"},"github":{"icon":"/static/img/svg/github.svg","link":"https://github.com/YimooR"},"csdn":{"icon":"/static/img/svg/csdn.svg","link":"https://blog.csdn.net/weixin_43143863?spm=1000.2115.3001.5343"},"qq":{"icon":"/static/img/svg/qq.svg","link":"https://user.qzone.qq.com/1035605573"}}}},"feature":false}}
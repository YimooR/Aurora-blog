{"title":"Linux之vim编辑器","uid":"ed524054e4ea66ffb037d331f140784b","slug":"Linux/vim编辑器","date":"2023-01-04T12:46:00.000Z","updated":"2023-02-02T15:45:56.238Z","comments":true,"path":"api/articles/Linux/vim编辑器.json","keywords":null,"cover":"https://yimoorua-img.oss-cn-chengdu.aliyuncs.com/images/AgAAC6u-TVPCPNkBPLtLtZ8Uit4WUcTR.png","content":"<h1 id=\"第二章-vim编辑器\"><a href=\"#第二章-vim编辑器\" class=\"headerlink\" title=\"第二章  vim编辑器\"></a>第二章  vim编辑器</h1><h2 id=\"一、vi编辑器简介\"><a href=\"#一、vi编辑器简介\" class=\"headerlink\" title=\"一、vi编辑器简介\"></a>一、vi编辑器简介</h2><p>vim 是一个全屏幕纯文本编辑器，是vi编辑器的增强版，我们主要讲解的是 vim 编辑器。可以利用别名让输入<code>vi </code>命令的时候，实际上执行 vim编辑器，例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># alias vi='vim'</span>\n<span class=\"token comment\">#定义别名</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>这样定义的别名是临时生效，如果需要永久生效，请放入环境变量配置文件（~/.bashrc)</p>\n<h2 id=\"二、vim-基本使用\"><a href=\"#二、vim-基本使用\" class=\"headerlink\" title=\"二、vim 基本使用\"></a>二、vim 基本使用</h2><h3 id=\"1、vim-的工作模式\"><a href=\"#1、vim-的工作模式\" class=\"headerlink\" title=\"1、vim 的工作模式\"></a>1、vim 的工作模式</h3><p>vim 工作在三种模式之下：</p>\n<p><img src=\"https://yimoorua-img.oss-cn-chengdu.aliyuncs.com/md-imgs/63b57bc6be43e0d30e6147a5.png\" alt=\"模式图\"> </p>\n<p><b>命令模式：</b>是主要使用快捷键的模式，是我们后面学习的重点。命令模式想要进入输入模式，可以使用以下的方式：</p>\n<p>插入命令</p>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>a</td>\n<td>在光标所在字符后插入</td>\n</tr>\n<tr>\n<td>A</td>\n<td>在光标所在行尾插入</td>\n</tr>\n<tr>\n<td>i</td>\n<td>在光标所在字符前插入</td>\n</tr>\n<tr>\n<td>I</td>\n<td>在光标所在行行首插入</td>\n</tr>\n<tr>\n<td>o</td>\n<td>在光标下插入新行</td>\n</tr>\n<tr>\n<td>O</td>\n<td>在光标上插入新行</td>\n</tr>\n</tbody></table>\n<p><b>输入模式：</b>主要用于文本编辑，和记事本类似，输入数据就好。<br><b>末行模式（编辑模式）：</b></p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">warning</p>\n<p>:w #保存不退出<br>:w  #新文件名     把文件另存为新文件<br>:q  #不保存退出<br>:wq #保存退出<br>:!   #强制<br>:q！ #强制不保存退出，用于修改文件之后，不保存数据退出。<br>:wq!   #强制保存退出，当文件的所有者或者 root 用户，对文件没有写权限的时候，强制写入数据使用</p>\n\n</div>\n<h3 id=\"2、命令模式操作\"><a href=\"#2、命令模式操作\" class=\"headerlink\" title=\"2、命令模式操作\"></a>2、命令模式操作</h3><h4 id=\"2-1-移动光标\"><a href=\"#2-1-移动光标\" class=\"headerlink\" title=\"2.1 移动光标\"></a>2.1 移动光标</h4><p>1）上下左右移动光标<br><code>↑、↓、←、→</code>方向键        #移动光标<br><code>H、j、k、l</code>        #移动光标<br>2）把光标移动到文件头或尾<br><code>gg</code>  #移动到文件头<br><code>G</code>   #移动到文件尾（shift+g）<br>3）移动到行首或行尾<br><code>^</code>    #移动到行首<br><code>$</code>    #移动到行尾<br>4） 移动到指定行<br><code>:n</code>    #移动到第几行<br>这里n是数字，准备移动到第几行，就用哪个数字</p>\n<h4 id=\"2-2-删除或剪切\"><a href=\"#2-2-删除或剪切\" class=\"headerlink\" title=\"2.2 删除或剪切\"></a>2.2 删除或剪切</h4><p>1）删除字母<br><code>x </code>    #删除单个字母<br><code>nx</code>    #删除n个字母<br><code>n</code> 是数字，如果打算从光标位置删除连续的10个字母，可以使用<code>10x</code> 即可。删除字母并不符合使用习惯，我们更习惯在编辑模式中，用<code>Backspace</code>键删除字母。<br>2）删除整行或剪切<br><code>dd</code>       #删除单行<br><code>ndd</code>    #删除多行<br>:nl,n2d   #删除指定范围的行<br>  删除整行或多行，这是比较常用的删除方法。这里的 dd 快捷键既是删除，也是剪切。删除内容<br>放入了剪切板，如果不粘贴就是删除，如果粘贴就是剪切。粘贴方法如下：<br><code>p</code>      #粘贴到光标后<br><code>p（大）</code>      #粘贴到光标前<br>3）从光标所在行删除到文件尾<br>一直有同学问超哥，是否可以删除整篇文档，vim 没有删除整篇文档的快捷键，但是可以这样：<br><code>dG</code>    #从光标所在行删除到文件尾<br><code>d</code>是删除行，<code>C</code>是文件尾，连起来就是从光标所在行删除到文件尾。如果把光标放在文件首，那么<code>dG</code>就变成了删除整篇文档了。</p>\n<h4 id=\"2-3-复制\"><a href=\"#2-3-复制\" class=\"headerlink\" title=\"2.3 复制\"></a>2.3 复制</h4><p><code>yy</code>    #复制单行<br><code>nyy</code>    #复制多行<br>复制之后的粘贴，依然可以使用<code>p</code>键或<code>P</code>（大）键</p>\n<h4 id=\"2-4-撤销\"><a href=\"#2-4-撤销\" class=\"headerlink\" title=\"2.4 撤销\"></a>2.4 撤销</h4><p><code>u</code>    #撤销<br><code>ctrl+r</code>   #反撤销<br><code>u</code>键能一直撤销到文件打开时的状态，类似 Windows 下 <code>ctrl+z</code> 键的作用。<br><code>ctrl+r</code>能一直反撤销到最后一次操作状态，类似Windows 下 <code>ctrl+y</code> 键的作用。 下</p>\n<h4 id=\"2-5-替换\"><a href=\"#2-5-替换\" class=\"headerlink\" title=\"2.5 替换\"></a>2.5 替换</h4><p><code>Y</code>   #替换光标所在处的字符<br><code>R</code>   #从光标所在处开始替换字符，按 ESC 结束<br><code>r</code>   #替换单一字符，不用进入输入模式，实际使用时，比进入输入模式删除后再修改，要方<br>便。</p>\n<h4 id=\"2-6-vim-配置文件\"><a href=\"#2-6-vim-配置文件\" class=\"headerlink\" title=\"2.6 vim 配置文件\"></a>2.6 vim 配置文件</h4><p>这次末行模式参数设置，多数需要在 vim 中才能生效。</p>\n<table>\n<thead>\n<tr>\n<th>设置参数</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>:set nu</code><br/><code>:set nonu</code></td>\n<td>显示与取消行号。</td>\n</tr>\n<tr>\n<td><code>:syntax on</code><br/><code>:syntax off</code></td>\n<td>是否依据语法显示相关的颜色帮助。在 Vim 中修改相关的配置文件或Shell 脚本文件时（如前面示例的脚本/etc/init.d/sshd），默认会显示相应的颜色，用来帮助排错。如果觉得颜色产生了干扰，则可以取消此设置</td>\n</tr>\n<tr>\n<td><code>:set hlsearch</code></td>\n<td>设置是否将查找的字符串高亮显示。默认是 set hlsearch 高亮显示</td>\n</tr>\n<tr>\n<td><code>:set nohlsearch</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>:set ruler</code><br/><code>:set noruler</code></td>\n<td>设置是否显示右下角的状态栏。默认是 set ruler 显示</td>\n</tr>\n<tr>\n<td><code>:set showmode</code><br/><code>:set noshowmode</code></td>\n<td>设置是否在左下角显示如”—INSERT—“ 之类的状态栏。默认是 set showmode 显示</td>\n</tr>\n<tr>\n<td><code>:set list</code><br/><code>:set nolist</code></td>\n<td>设置是否显示隐藏字符（Tab 键用<code>^I</code>表示，回车符用<code>＄</code>表示）。默认是 nolist 显示。如果使用 set list 显示隐藏字符，类似 <code>cat -A 文件名</code>。</td>\n</tr>\n</tbody></table>\n<p>vim 支持更多的设置参数，可以通过<code>:set all</code>进行查看。<br>大家会发现，这些设置参数都只是临时生效，一旦关闭文件再打开，又需要重新输入。如果想要永久生效，需要手工建立 vim 的配置文件“~/.vimrc”，把你需要的参数写入配置文件就永久生效了。<br>补充：Windows下回车符在 Linux 中是用<code>^M＄</code> 符号显示，而不是“＄” 符。这样会导致 Windows下编辑的程序脚本，无法在 Linux 中执行。这时可以通过命令<code>dos2unix</code>，把 windows 格式转为 Linux格式，当然反过来<code>unix2dos</code>命令就是把 Linux 格式转为 Windows 格式。这两个命令默认没有安装，需要手工安装才能使用。</p>\n<h4 id=\"2-7-查找\"><a href=\"#2-7-查找\" class=\"headerlink\" title=\"2.7 查找\"></a>2.7 查找</h4><p><code>/查找内容</code>      #从光标所在行向下查找<br><code>?查找内容</code>      #从光标所在行向上搜索<br><code>n</code>                   #下一个<br><code>N</code>                   #上一个</p>\n<h4 id=\"2-8-替换\"><a href=\"#2-8-替换\" class=\"headerlink\" title=\"2.8 替换\"></a>2.8 替换</h4><p><code>:1,10s/old/new/g</code>     #替换1到10 行的所有 old 为 new<br><code>:%s/old/new/g</code>          #替换整个文件的 old 为 new<br>替换字符串，我举几个例子：在 shell 中“#”开头是注释，那我是否可以注释文件的前10 行呢？<br>手工一个一个注释很麻烦，那么批量替换吧：<br><code>:1,10s/^/#/g</code>       #注释1到10行<br><code>:1,10s/^#//g</code>       #取消注释<br>而在C语言，PHP 语言等大多数语言中，是使用“//” 开头作为注释的，我们当然可以用 vim 来写这些程序语言脚本，那么批量加入“//” 注释吧：<br><code>:1,10s/^/\\/\\//g</code>       #1到10 行，行首加入//<br><code>:1,10s/^\\/\\///g</code>         #取消1到10行行首的//</p>\n<h2 id=\"三、vim-使用技巧\"><a href=\"#三、vim-使用技巧\" class=\"headerlink\" title=\"三、vim 使用技巧\"></a>三、vim 使用技巧</h2><h3 id=\"1-在vim-中导入其他文件内容或命令结果\"><a href=\"#1-在vim-中导入其他文件内容或命令结果\" class=\"headerlink\" title=\"1. 在vim 中导入其他文件内容或命令结果\"></a>1. 在vim 中导入其他文件内容或命令结果</h3><h4 id=\"1-1-导入其他文件内容\"><a href=\"#1-1-导入其他文件内容\" class=\"headerlink\" title=\"1.1 导入其他文件内容\"></a>1.1 导入其他文件内容</h4><p><code>:r 文件名</code>    #把文件内容导入光标位置<br>可以把其他文件的内容导入到光标所在位置</p>\n<h4 id=\"1-2-在vim-中执行系统命令\"><a href=\"#1-2-在vim-中执行系统命令\" class=\"headerlink\" title=\"1.2 在vim 中执行系统命令\"></a>1.2 在vim 中执行系统命令</h4><p><code>:！</code>命令   #在vim 中执行系统命令<br>这里只是在 vim 中执行系统命令，但并不把系统命令的结果写入到文件中。主要用于在文件编辑<br>中，查看系统信息，如时间。</p>\n<h4 id=\"1-3-导入命令结果\"><a href=\"#1-3-导入命令结果\" class=\"headerlink\" title=\"1.3 导入命令结果\"></a>1.3 导入命令结果</h4><p><code>:r!</code>命令    在vim 中执行系统命令，并把命令结果导入光标所在行<br>在 vim 中执行系统命令，并把命令结果导入光标所在行。</p>\n<h3 id=\"2-设定快捷键\"><a href=\"#2-设定快捷键\" class=\"headerlink\" title=\"2.设定快捷键\"></a>2.设定快捷键</h3><p><code>:map 快捷键</code>  #快捷键执行的命令   自定义快捷键<br>vim 允许自定义快捷键，常用的自定义快捷键如下：<br><code>:map ^p  I#&lt;ESC&gt;</code>    按”ctrl+p”时，在行首加入注释<br><code>:map ^B ^x</code>   按”ctrl+b”时，删除行首第一个字母（删除注释）<br>注意：<code>^P</code>快捷键不能手工输入，需要执行 ctrl+V+P 来定义，或 ctrl+V，然后 ctrl+P。<code>^B</code>快捷<br>键也是一样</p>\n<h3 id=\"3-字符替换\"><a href=\"#3-字符替换\" class=\"headerlink\" title=\"3.字符替换\"></a>3.字符替换</h3><p><code>:ab 源字符</code>  #替换为字符  字符替换<br>在vim编辑中，有时候需要频繁输入某一个长字符串（比如邮箱），这时使用字符串替换，能增加输入效率，例如：<br><code>:ab mynail shenchao@163. com</code>   当碰到”mymail”时，转变为邮箱<br>注意：“源字符”不应设置的太短，否则有可能影响输入。</p>\n<h4 id=\"4-多文件打开\"><a href=\"#4-多文件打开\" class=\"headerlink\" title=\"4.多文件打开\"></a>4.多文件打开</h4><p>在vin 中可以同时打开两个文件，只要执行如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim -o abc bcd</span>\n<span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim -0 abc bcd</span>\n<span class=\"token comment\">#-o  小写o会上下分屏打开两个文件</span>\n<span class=\"token comment\">#-O  大写O会左右分屏打开两个文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这样可以同时打开两个文件，方便操作。如果是”-o”上下打开两个文件，可以通过先按”ctrl+w”，再按”上下箭头”的方式在两个文件之间切换。<br>如果是“-O”左右打开两个文件，可以通过先按“ctrl+w”，再按“左右箭头”的方式在两个文件之间切换。</p>\n","feature":true,"text":"第二章 vim编辑器一、vi编辑器简介vim 是一个全屏幕纯文本编辑器，是vi编辑器的增强版，我们主要讲解的是 vim 编辑器。可以利用别名让输入vi 命令的时候，实际上执行 vim编辑器，例如： [root@localhost ~]# alias vi='vim' #定义别名 ...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"Linux","slug":"Linux","count":4,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":4,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E7%AB%A0-vim%E7%BC%96%E8%BE%91%E5%99%A8\"><span class=\"toc-text\">第二章  vim编辑器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81vi%E7%BC%96%E8%BE%91%E5%99%A8%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">一、vi编辑器简介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81vim-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">二、vim 基本使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81vim-%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">1、vim 的工作模式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">2、命令模式操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-%E7%A7%BB%E5%8A%A8%E5%85%89%E6%A0%87\"><span class=\"toc-text\">2.1 移动光标</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-%E5%88%A0%E9%99%A4%E6%88%96%E5%89%AA%E5%88%87\"><span class=\"toc-text\">2.2 删除或剪切</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-%E5%A4%8D%E5%88%B6\"><span class=\"toc-text\">2.3 复制</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-4-%E6%92%A4%E9%94%80\"><span class=\"toc-text\">2.4 撤销</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-5-%E6%9B%BF%E6%8D%A2\"><span class=\"toc-text\">2.5 替换</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-6-vim-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">2.6 vim 配置文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-7-%E6%9F%A5%E6%89%BE\"><span class=\"toc-text\">2.7 查找</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-8-%E6%9B%BF%E6%8D%A2\"><span class=\"toc-text\">2.8 替换</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81vim-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7\"><span class=\"toc-text\">三、vim 使用技巧</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%9C%A8vim-%E4%B8%AD%E5%AF%BC%E5%85%A5%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9%E6%88%96%E5%91%BD%E4%BB%A4%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">1. 在vim 中导入其他文件内容或命令结果</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-1-%E5%AF%BC%E5%85%A5%E5%85%B6%E4%BB%96%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">1.1 导入其他文件内容</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-%E5%9C%A8vim-%E4%B8%AD%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">1.2 在vim 中执行系统命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-3-%E5%AF%BC%E5%85%A5%E5%91%BD%E4%BB%A4%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">1.3 导入命令结果</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E8%AE%BE%E5%AE%9A%E5%BF%AB%E6%8D%B7%E9%94%AE\"><span class=\"toc-text\">2.设定快捷键</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%AD%97%E7%AC%A6%E6%9B%BF%E6%8D%A2\"><span class=\"toc-text\">3.字符替换</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-%E5%A4%9A%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80\"><span class=\"toc-text\">4.多文件打开</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"YimooRua","slug":"blog-author","avatar":"/static/img/avator.gif","link":"/","description":"这是一个知识分享博客🎉，有什么建议请留言。欢迎探讨技术😁。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/static/img/svg/bilibili-line.svg","link":"https://space.bilibili.com/242073282"},"github":{"icon":"/static/img/svg/github.svg","link":"https://github.com/YimooR"},"csdn":{"icon":"/static/img/svg/csdn.svg","link":"https://blog.csdn.net/weixin_43143863?spm=1000.2115.3001.5343"},"qq":{"icon":"/static/img/svg/qq.svg","link":"https://user.qzone.qq.com/1035605573"}}}},"mapped":true,"prev_post":{"title":"Linux之软件安装","uid":"0320adbbfdab8d9c75ad8f7cfd85cb84","slug":"Linux/Linux软件安装","date":"2023-01-05T12:46:00.000Z","updated":"2023-02-07T14:20:57.157Z","comments":true,"path":"api/articles/Linux/Linux软件安装.json","keywords":null,"cover":"https://yimoorua-img.oss-cn-chengdu.aliyuncs.com/images/AgAAC6u-TVPCPNkBPLtLtZ8Uit4WUcTR.png","text":"第三章 软件包安装一、 软件包分类1、 软件包分类 源码包 二进制包（脚本安装包）2、源码包2.1 源码包什么样 [root@localhost~]# vim hello.c #include &lt;stdio.h> int main (void) printf (\"hello...","link":"","photos":[],"count_time":{"symbolsCount":"19k","symbolsTime":"17 mins."},"categories":[{"name":"Linux","slug":"Linux","count":4,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":4,"path":"api/tags/Linux.json"}],"author":{"name":"YimooRua","slug":"blog-author","avatar":"/static/img/avator.gif","link":"/","description":"这是一个知识分享博客🎉，有什么建议请留言。欢迎探讨技术😁。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/static/img/svg/bilibili-line.svg","link":"https://space.bilibili.com/242073282"},"github":{"icon":"/static/img/svg/github.svg","link":"https://github.com/YimooR"},"csdn":{"icon":"/static/img/svg/csdn.svg","link":"https://blog.csdn.net/weixin_43143863?spm=1000.2115.3001.5343"},"qq":{"icon":"/static/img/svg/qq.svg","link":"https://user.qzone.qq.com/1035605573"}}}},"feature":true},"next_post":{"title":"将Hexo部署到阿里云ECS服务器","uid":"1632a637a5b83536ed0fd61b88270acb","slug":"Hexo/将Hexo部署到阿里云服务器","date":"2022-12-22T23:11:00.000Z","updated":"2023-02-02T15:44:44.075Z","comments":true,"path":"api/articles/Hexo/将Hexo部署到阿里云服务器.json","keywords":null,"cover":"https://yimoorua-img.oss-cn-chengdu.aliyuncs.com/images/AgAAC6u-TVOZz2AAaN5Gl77-CtWr2-Tr.png","text":"将Hexo部署到阿里云ECS服务器1.准备工作 在开始部署前，需要准备如下： 1.本地搭建完成的Hexo博客 2.已购买的一台ECS服务器 3.已拥有SSL证书（可以申请免费证书） 4.X-shell连接远程服务器的工具（Mac系统可以用ProtX） 2.安装配置git2.1安装...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"Hexo","slug":"Hexo","count":2,"path":"api/categories/Hexo.json"}],"tags":[{"name":"Hexo","slug":"Hexo","count":2,"path":"api/tags/Hexo.json"}],"author":{"name":"YimooRua","slug":"blog-author","avatar":"/static/img/avator.gif","link":"/","description":"这是一个知识分享博客🎉，有什么建议请留言。欢迎探讨技术😁。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/static/img/svg/bilibili-line.svg","link":"https://space.bilibili.com/242073282"},"github":{"icon":"/static/img/svg/github.svg","link":"https://github.com/YimooR"},"csdn":{"icon":"/static/img/svg/csdn.svg","link":"https://blog.csdn.net/weixin_43143863?spm=1000.2115.3001.5343"},"qq":{"icon":"/static/img/svg/qq.svg","link":"https://user.qzone.qq.com/1035605573"}}}},"feature":true}}